<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1110.1623                               -->
<workbook original-version='18.1' source-build='2020.3.3 (20203.20.1110.1623)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='infectionEstimates' inline='true' name='federated.0emwpuf0uvj1q5141ds780eh02ve' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='infectionEstimates' name='textscan.0i6pp9q09isct01focxk11s0mu71'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0i6pp9q09isct01focxk11s0mu71' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='2' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='3' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='4' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='5' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='6' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='7' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='8' />
            <column datatype='real' name='rt_mean' ordinal='9' />
            <column datatype='real' name='new_infected_mean' ordinal='10' />
            <column datatype='real' name='new_infected_lower' ordinal='11' />
            <column datatype='real' name='new_infected_upper' ordinal='12' />
            <column datatype='real' name='current_infected_mean' ordinal='13' />
            <column datatype='real' name='current_infected_lower' ordinal='14' />
            <column datatype='real' name='current_infected_upper' ordinal='15' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='16' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='17' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='18' />
            <column datatype='real' name='total_infected_mean' ordinal='19' />
            <column datatype='real' name='total_infected_lower' ordinal='20' />
            <column datatype='real' name='total_infected_upper' ordinal='21' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='22' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='23' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0i6pp9q09isct01focxk11s0mu71' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='2' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='3' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='4' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='5' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='6' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='7' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='8' />
            <column datatype='real' name='rt_mean' ordinal='9' />
            <column datatype='real' name='new_infected_mean' ordinal='10' />
            <column datatype='real' name='new_infected_lower' ordinal='11' />
            <column datatype='real' name='new_infected_upper' ordinal='12' />
            <column datatype='real' name='current_infected_mean' ordinal='13' />
            <column datatype='real' name='current_infected_lower' ordinal='14' />
            <column datatype='real' name='current_infected_upper' ordinal='15' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='16' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='17' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='18' />
            <column datatype='real' name='total_infected_mean' ordinal='19' />
            <column datatype='real' name='total_infected_lower' ordinal='20' />
            <column datatype='real' name='total_infected_upper' ordinal='21' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='22' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='23' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_positive_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_positive_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_positive_7day_ma</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_tests_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_tests_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_tests_7day_ma</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_orig_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_orig_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_orig_7day_ma</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_7day_ma</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_mean</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_lower</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_upper</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rt_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rt_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>rt_mean</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_mean</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_lower</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_upper</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_mean</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_lower</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_upper</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_mean</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_lower</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_upper</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_mean</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_lower</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_upper</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_mean</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_lower</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_upper</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='infectionEstimates.csv' datatype='table' name='[__tableau_internal_object_id__].[infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC]' role='measure' type='quantitative' />
      <column caption='Current Infected Lower' datatype='real' name='[current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Current Infected Mean' datatype='real' name='[current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Current Infected Upper' datatype='real' name='[current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Tests 7Day Ma' datatype='real' name='[daily_tests_7day_ma]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Infected Lower' datatype='real' name='[new_infected_lower]' role='measure' type='quantitative' />
      <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
      <column caption='New Infected Upper' datatype='real' name='[new_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Lower' datatype='real' name='[perc_current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Mean' datatype='real' name='[perc_current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Upper' datatype='real' name='[perc_current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Lower' datatype='real' name='[perc_total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Upper' datatype='real' name='[perc_total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Positivity Rate 7Day Ma' datatype='real' name='[positivity_rate_7day_ma]' role='measure' type='quantitative' />
      <column caption='Positivity Rate Orig 7Day Ma' datatype='real' name='[positivity_rate_orig_7day_ma]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Lower' datatype='real' name='[prevalence_ratio_lower]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Mean' datatype='real' name='[prevalence_ratio_mean]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Upper' datatype='real' name='[prevalence_ratio_upper]' role='measure' type='quantitative' />
      <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Infected Lower' datatype='real' name='[total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Total Infected Mean' datatype='real' name='[total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Total Infected Upper' datatype='real' name='[total_infected_upper]' role='measure' type='quantitative' />
      <column-instance column='[new_infected_mean]' derivation='Avg' name='[avg:new_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Avg' name='[avg:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_infected_mean]' derivation='Max' name='[max:new_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_lower]' derivation='Max' name='[max:perc_total_infected_lower:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Max' name='[max:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_upper]' derivation='Max' name='[max:perc_total_infected_upper:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_infected_mean]' derivation='Sum' name='[sum:new_infected_mean:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[avg:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_upper:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_lower:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[avg:new_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:new_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[sum:new_infected_mean:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='infectionEstimates.csv' id='infectionEstimates.csv_ED804D48876044549DFEE9CA67D9C6DC'>
            <properties context=''>
              <relation connection='textscan.0i6pp9q09isct01focxk11s0mu71' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='real' name='daily_positive_7day_ma' ordinal='2' />
                  <column datatype='real' name='daily_tests_7day_ma' ordinal='3' />
                  <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='4' />
                  <column datatype='real' name='positivity_rate_7day_ma' ordinal='5' />
                  <column datatype='real' name='prevalence_ratio_mean' ordinal='6' />
                  <column datatype='real' name='prevalence_ratio_lower' ordinal='7' />
                  <column datatype='real' name='prevalence_ratio_upper' ordinal='8' />
                  <column datatype='real' name='rt_mean' ordinal='9' />
                  <column datatype='real' name='new_infected_mean' ordinal='10' />
                  <column datatype='real' name='new_infected_lower' ordinal='11' />
                  <column datatype='real' name='new_infected_upper' ordinal='12' />
                  <column datatype='real' name='current_infected_mean' ordinal='13' />
                  <column datatype='real' name='current_infected_lower' ordinal='14' />
                  <column datatype='real' name='current_infected_upper' ordinal='15' />
                  <column datatype='real' name='perc_current_infected_mean' ordinal='16' />
                  <column datatype='real' name='perc_current_infected_lower' ordinal='17' />
                  <column datatype='real' name='perc_current_infected_upper' ordinal='18' />
                  <column datatype='real' name='total_infected_mean' ordinal='19' />
                  <column datatype='real' name='total_infected_lower' ordinal='20' />
                  <column datatype='real' name='total_infected_upper' ordinal='21' />
                  <column datatype='real' name='perc_total_infected_mean' ordinal='22' />
                  <column datatype='real' name='perc_total_infected_lower' ordinal='23' />
                  <column datatype='real' name='perc_total_infected_upper' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Estimated Infected Mean &#10;</run>
            <run fontsize='10'>data: </run>
            <run auto-url='true' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/youyanggu/covid19_projections/tree/master/infection_estimates&amp;quot;'>https://github.com/youyanggu/covid19_projections/tree/master/infection_estimates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0emwpuf0uvj1q5141ds780eh02ve' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0emwpuf0uvj1q5141ds780eh02ve'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[perc_total_infected_lower]' derivation='Max' name='[max:perc_total_infected_lower:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perc_total_infected_mean]' derivation='Max' name='[max:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perc_total_infected_upper]' derivation='Max' name='[max:perc_total_infected_upper:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Perc Total Infected Lower' datatype='real' name='[perc_total_infected_lower]' role='measure' type='quantitative' />
            <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
            <column caption='Perc Total Infected Upper' datatype='real' name='[perc_total_infected_upper]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0emwpuf0uvj1q5141ds780eh02ve].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_lower:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_upper:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0emwpuf0uvj1q5141ds780eh02ve].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_upper:qk]&quot;</bucket>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_mean:qk]&quot;</bucket>
              <bucket>&quot;[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_lower:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-01#</min>
            <max>#2020-11-09#</max>
          </filter>
          <filter class='categorical' column='[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:date:qk]</column>
            <column>[federated.0emwpuf0uvj1q5141ds780eh02ve].[:Measure Names]</column>
            <column>[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_mean:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0emwpuf0uvj1q5141ds780eh02ve].[Multiple Values]</rows>
        <cols>([federated.0emwpuf0uvj1q5141ds780eh02ve].[none:state:nk] / ([federated.0emwpuf0uvj1q5141ds780eh02ve].[tyr:date:ok] / [federated.0emwpuf0uvj1q5141ds780eh02ve].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{CFDB5AA5-CF00-4DA5-BAAF-93F5648FDCBB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0emwpuf0uvj1q5141ds780eh02ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0emwpuf0uvj1q5141ds780eh02ve'>
            <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[daily_positive_7day_ma]' derivation='Max' name='[max:daily_positive_7day_ma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_infected_mean]' derivation='Max' name='[max:new_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perc_total_infected_mean]' derivation='Max' name='[max:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rt_mean]' derivation='Max' name='[max:rt_mean:qk]' pivot='key' type='quantitative' />
            <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
            <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0emwpuf0uvj1q5141ds780eh02ve].[tdy:date:qk]' included-values='in-range'>
            <min>#2020-02-23 00:00:00#</min>
            <max>#2020-11-09 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:state:nk]</column>
            <column>[federated.0emwpuf0uvj1q5141ds780eh02ve].[tdy:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:daily_positive_7day_ma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:rt_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:new_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0emwpuf0uvj1q5141ds780eh02ve].[max:perc_total_infected_mean:qk] + ([federated.0emwpuf0uvj1q5141ds780eh02ve].[max:daily_positive_7day_ma:qk] + ([federated.0emwpuf0uvj1q5141ds780eh02ve].[max:rt_mean:qk] + [federated.0emwpuf0uvj1q5141ds780eh02ve].[max:new_infected_mean:qk])))</rows>
        <cols>[federated.0emwpuf0uvj1q5141ds780eh02ve].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{A8DCBFC6-E808-4BA5-B6AC-D2347F821D21}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0emwpuf0uvj1q5141ds780eh02ve].[avg:perc_total_infected_mean:qk]</field>
            <field>[federated.0emwpuf0uvj1q5141ds780eh02ve].[max:rt_mean:qk]</field>
            <field>[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:date:qk]</field>
            <field>[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:rt_mean:qk]</field>
            <field>[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:state:nk]</field>
            <field>[federated.0emwpuf0uvj1q5141ds780eh02ve].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6CD72BD-9AB7-4AC2-958D-CB6F8D215FDB}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0emwpuf0uvj1q5141ds780eh02ve].[none:state:nk]</field>
            <field>[federated.0emwpuf0uvj1q5141ds780eh02ve].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56316C8F-AABD-4FB4-9D11-9E30F00B2E2C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      zMxER0cHwuHwSNdFREQOe6CPgZaVleGdd95BVVUVTp48iVdffXWk6yIiIoc9UABIkoRNmzZh
      w4YNUBQFgUBgpOsiIiKHPVAANDc347333gMA9PT0IC0tDX//93//reufP38elZWVSExMxLPP
      PguP585mb9y4gYMHD6K8vBw+nw8AYBgGduzYgUWLFmH69OkPUiIREQ3hgQJg+vTpeOuttwAA
      pmnixz/+8beuq+s6Tp48ic2bN6Oqqgpnz57FvHnzAADhcBg1NTXweDwwTTP2mBMnTkCSJHR3
      dz9IeURENAwPFAANDQ3YunUrgL536/c6CRyJRJCeng5VVVFQUIAjR47Elvn9fjz55JP4+OOP
      Y/cFg0E0NzejqKgItm0D6AsZw+j7QWdd12GaZr/AiEajD/I0HoqmaTz5/YA0TYOu6wPa73Z/
      u2WosQsAmmHec7kTBmubscg0zQF16pruag2WZQ2rrSzLcqGaOwZrm7HogQJgwoQJWLNmDYC+
      8wE5OTnfuq5t25Akqd/t2755P9DXSZ988gnKyspw48YN2LYNwzDg8XigKAqAvhetqqrwer2x
      x/l87g46APB6vTz38YB0va+/7m6/u8eD0zwez5B9KOuGS9XcoapqXIytwc7/qSXsaIQAABCJ
      SURBVF7V1RpkWR5WW8myu995jZdzo/cVALZt47/+67+gaVq/+6dOnYrnnntu0Mf4/X50dnbC
      sixcu3YNEydOjL2D/+ZO/La8vDxcv349FgDz5s3rd86AiIhGxn3vWRcsWNBv+gUAkpOTv3X9
      21M/W7duhSRJWL9+PW7evInLly+jqKgIhw8fRmtrK/bu3YuSkhIsXboUAFBXVwfbtpGQkHC/
      JRIR0TDcVwBIkoSSkhKYpomjR4+ioaEBAJCdnY38/Pxvfcz8+fNRWloKRVEgSRImTZqESZMm
      AQDWr18/6OPy8vLupzQiIrpPDzQxdvbsWRw6dAg1NTVIS0tDTU3NPdeXJAkej8f1OV4iIvp2
      DxQAXV1dWLRoEaZOnYrly5fjxo0bI10XERE57IECYM6cOfD5fFiwYAHeeuutb53+ISKiseu+
      TwKfPn0aEydOxLJly6AoChYuXOhEXURE5LD7DoBIJIL//M//RCgUQlFREcrKypCfn8+PahIR
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
