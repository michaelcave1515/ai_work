<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1110.1623                               -->
<workbook original-version='18.1' source-build='2020.3.3 (20203.20.1110.1623)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='infectionEstimates (copy)' inline='true' name='federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='infectionEstimates' name='textscan.04a3k8x12wi08l10s7fm50jtkybk'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)].[avg:rt_mean:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)].[sum:daily_positive_7day_ma:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)].[sum:new_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)].[avg:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)].[ctd:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)].[max:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)].[med:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy)].[sum:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='infectionEstimates (copy 2)' inline='true' name='federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='infectionEstimates' name='textscan.1a26tf310fytyn1c430u91j8xedy (copy)'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
          <named-connection caption='infectionEstimates (2)' name='textscan.0kxbua91c0u9371bfbplv1opdowk (copy)'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
          <named-connection caption='infectionEstimates (3)' name='textscan.0bfyydq0vxndzs148a7fq1evpbgh'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk (copy)' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
            <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
            <column datatype='real' name='rt_mean' ordinal='13' />
            <column datatype='real' name='new_infected_mean' ordinal='14' />
            <column datatype='real' name='new_infected_lower' ordinal='15' />
            <column datatype='real' name='new_infected_upper' ordinal='16' />
            <column datatype='real' name='current_infected_mean' ordinal='17' />
            <column datatype='real' name='current_infected_lower' ordinal='18' />
            <column datatype='real' name='current_infected_upper' ordinal='19' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
            <column datatype='real' name='total_infected_mean' ordinal='23' />
            <column datatype='real' name='total_infected_lower' ordinal='24' />
            <column datatype='real' name='total_infected_upper' ordinal='25' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk (copy)' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
            <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
            <column datatype='real' name='rt_mean' ordinal='13' />
            <column datatype='real' name='new_infected_mean' ordinal='14' />
            <column datatype='real' name='new_infected_lower' ordinal='15' />
            <column datatype='real' name='new_infected_upper' ordinal='16' />
            <column datatype='real' name='current_infected_mean' ordinal='17' />
            <column datatype='real' name='current_infected_lower' ordinal='18' />
            <column datatype='real' name='current_infected_upper' ordinal='19' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
            <column datatype='real' name='total_infected_mean' ordinal='23' />
            <column datatype='real' name='total_infected_lower' ordinal='24' />
            <column datatype='real' name='total_infected_upper' ordinal='25' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_positive_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_positive_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_positive_7day_ma</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_deaths_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_deaths_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_deaths_7day_ma</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_tests_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_tests_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_tests_7day_ma</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_orig_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_orig_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_orig_7day_ma</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_7day_ma</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_mean</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_lower</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_upper</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rt_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rt_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>rt_mean</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_mean</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_lower</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_upper</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_mean</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_lower</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_upper</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_mean</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_lower</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_upper</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_mean</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_lower</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_upper</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_mean</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_lower</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_upper</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='infectionEstimates.csv' datatype='table' name='[__tableau_internal_object_id__].[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]' role='measure' type='quantitative' />
      <column caption='Current Infected Lower' datatype='real' name='[current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Current Infected Mean' datatype='real' name='[current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Current Infected Upper' datatype='real' name='[current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Daily Deaths 7Day Ma' datatype='real' name='[daily_deaths_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Tests 7Day Ma' datatype='real' name='[daily_tests_7day_ma]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Infected Lower' datatype='real' name='[new_infected_lower]' role='measure' type='quantitative' />
      <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
      <column caption='New Infected Upper' datatype='real' name='[new_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Lower' datatype='real' name='[perc_current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Mean' datatype='real' name='[perc_current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Upper' datatype='real' name='[perc_current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Lower' datatype='real' name='[perc_total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Upper' datatype='real' name='[perc_total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Positivity Rate 7Day Ma' datatype='real' name='[positivity_rate_7day_ma]' role='measure' type='quantitative' />
      <column caption='Positivity Rate Orig 7Day Ma' datatype='real' name='[positivity_rate_orig_7day_ma]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Lower' datatype='real' name='[prevalence_ratio_lower]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Mean' datatype='real' name='[prevalence_ratio_mean]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Upper' datatype='real' name='[prevalence_ratio_upper]' role='measure' type='quantitative' />
      <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Infected Lower' datatype='real' name='[total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Total Infected Mean' datatype='real' name='[total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Total Infected Upper' datatype='real' name='[total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Avg' name='[avg:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rt_mean]' derivation='Avg' name='[avg:rt_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='CountD' name='[ctd:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Max' name='[max:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Median' name='[med:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[daily_positive_7day_ma]' derivation='Sum' name='[sum:daily_positive_7day_ma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_infected_mean]' derivation='Sum' name='[sum:new_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Sum' name='[sum:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)].[avg:rt_mean:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)].[sum:daily_positive_7day_ma:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)].[sum:new_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)].[avg:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)].[ctd:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)].[max:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)].[med:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 2)].[sum:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='infectionEstimates.csv' id='infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39'>
            <properties context=''>
              <relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk (copy)' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='total_cases' ordinal='2' />
                  <column datatype='integer' name='total_deaths' ordinal='3' />
                  <column datatype='integer' name='total_tests' ordinal='4' />
                  <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
                  <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
                  <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
                  <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
                  <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
                  <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
                  <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
                  <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
                  <column datatype='real' name='rt_mean' ordinal='13' />
                  <column datatype='real' name='new_infected_mean' ordinal='14' />
                  <column datatype='real' name='new_infected_lower' ordinal='15' />
                  <column datatype='real' name='new_infected_upper' ordinal='16' />
                  <column datatype='real' name='current_infected_mean' ordinal='17' />
                  <column datatype='real' name='current_infected_lower' ordinal='18' />
                  <column datatype='real' name='current_infected_upper' ordinal='19' />
                  <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
                  <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
                  <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
                  <column datatype='real' name='total_infected_mean' ordinal='23' />
                  <column datatype='real' name='total_infected_lower' ordinal='24' />
                  <column datatype='real' name='total_infected_upper' ordinal='25' />
                  <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
                  <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
                  <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='infectionEstimates (copy 3)' inline='true' name='federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='infectionEstimates' name='textscan.1a26tf310fytyn1c430u91j8xedy (copy 2)'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
          <named-connection caption='infectionEstimates (2)' name='textscan.0kxbua91c0u9371bfbplv1opdowk (copy 2)'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk (copy 2)' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
            <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
            <column datatype='real' name='rt_mean' ordinal='13' />
            <column datatype='real' name='new_infected_mean' ordinal='14' />
            <column datatype='real' name='new_infected_lower' ordinal='15' />
            <column datatype='real' name='new_infected_upper' ordinal='16' />
            <column datatype='real' name='current_infected_mean' ordinal='17' />
            <column datatype='real' name='current_infected_lower' ordinal='18' />
            <column datatype='real' name='current_infected_upper' ordinal='19' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
            <column datatype='real' name='total_infected_mean' ordinal='23' />
            <column datatype='real' name='total_infected_lower' ordinal='24' />
            <column datatype='real' name='total_infected_upper' ordinal='25' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk (copy 2)' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
            <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
            <column datatype='real' name='rt_mean' ordinal='13' />
            <column datatype='real' name='new_infected_mean' ordinal='14' />
            <column datatype='real' name='new_infected_lower' ordinal='15' />
            <column datatype='real' name='new_infected_upper' ordinal='16' />
            <column datatype='real' name='current_infected_mean' ordinal='17' />
            <column datatype='real' name='current_infected_lower' ordinal='18' />
            <column datatype='real' name='current_infected_upper' ordinal='19' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
            <column datatype='real' name='total_infected_mean' ordinal='23' />
            <column datatype='real' name='total_infected_lower' ordinal='24' />
            <column datatype='real' name='total_infected_upper' ordinal='25' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_positive_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_positive_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_positive_7day_ma</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_deaths_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_deaths_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_deaths_7day_ma</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_tests_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_tests_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_tests_7day_ma</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_orig_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_orig_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_orig_7day_ma</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_7day_ma</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_mean</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_lower</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_upper</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rt_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rt_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>rt_mean</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_mean</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_lower</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_upper</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_mean</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_lower</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_upper</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_mean</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_lower</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_upper</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_mean</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_lower</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_upper</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_mean</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_lower</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_upper</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='infectionEstimates.csv' datatype='table' name='[__tableau_internal_object_id__].[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]' role='measure' type='quantitative' />
      <column caption='Current Infected Lower' datatype='real' name='[current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Current Infected Mean' datatype='real' name='[current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Current Infected Upper' datatype='real' name='[current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Daily Deaths 7Day Ma' datatype='real' name='[daily_deaths_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Tests 7Day Ma' datatype='real' name='[daily_tests_7day_ma]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Infected Lower' datatype='real' name='[new_infected_lower]' role='measure' type='quantitative' />
      <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
      <column caption='New Infected Upper' datatype='real' name='[new_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Lower' datatype='real' name='[perc_current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Mean' datatype='real' name='[perc_current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Upper' datatype='real' name='[perc_current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Lower' datatype='real' name='[perc_total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Upper' datatype='real' name='[perc_total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Positivity Rate 7Day Ma' datatype='real' name='[positivity_rate_7day_ma]' role='measure' type='quantitative' />
      <column caption='Positivity Rate Orig 7Day Ma' datatype='real' name='[positivity_rate_orig_7day_ma]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Lower' datatype='real' name='[prevalence_ratio_lower]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Mean' datatype='real' name='[prevalence_ratio_mean]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Upper' datatype='real' name='[prevalence_ratio_upper]' role='measure' type='quantitative' />
      <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Infected Lower' datatype='real' name='[total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Total Infected Mean' datatype='real' name='[total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Total Infected Upper' datatype='real' name='[total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Avg' name='[avg:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rt_mean]' derivation='Avg' name='[avg:rt_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='CountD' name='[ctd:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Max' name='[max:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Median' name='[med:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[daily_positive_7day_ma]' derivation='Sum' name='[sum:daily_positive_7day_ma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_infected_mean]' derivation='Sum' name='[sum:new_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Sum' name='[sum:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)].[avg:rt_mean:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)].[sum:daily_positive_7day_ma:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)].[sum:new_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)].[avg:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)].[ctd:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)].[max:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)].[med:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2 (copy 3)].[sum:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='infectionEstimates.csv' id='infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39'>
            <properties context=''>
              <relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk (copy 2)' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='total_cases' ordinal='2' />
                  <column datatype='integer' name='total_deaths' ordinal='3' />
                  <column datatype='integer' name='total_tests' ordinal='4' />
                  <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
                  <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
                  <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
                  <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
                  <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
                  <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
                  <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
                  <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
                  <column datatype='real' name='rt_mean' ordinal='13' />
                  <column datatype='real' name='new_infected_mean' ordinal='14' />
                  <column datatype='real' name='new_infected_lower' ordinal='15' />
                  <column datatype='real' name='new_infected_upper' ordinal='16' />
                  <column datatype='real' name='current_infected_mean' ordinal='17' />
                  <column datatype='real' name='current_infected_lower' ordinal='18' />
                  <column datatype='real' name='current_infected_upper' ordinal='19' />
                  <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
                  <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
                  <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
                  <column datatype='real' name='total_infected_mean' ordinal='23' />
                  <column datatype='real' name='total_infected_lower' ordinal='24' />
                  <column datatype='real' name='total_infected_upper' ordinal='25' />
                  <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
                  <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
                  <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='infectionEstimates (2)' inline='true' name='federated.1s0leeo0wzgk4915tad9408xqqmz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='infectionEstimates' name='textscan.1wadz681s1ug1611dtu8r0z018yv'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1wadz681s1ug1611dtu8r0z018yv' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
            <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
            <column datatype='real' name='rt_mean' ordinal='13' />
            <column datatype='real' name='new_infected_mean' ordinal='14' />
            <column datatype='real' name='new_infected_lower' ordinal='15' />
            <column datatype='real' name='new_infected_upper' ordinal='16' />
            <column datatype='real' name='current_infected_mean' ordinal='17' />
            <column datatype='real' name='current_infected_lower' ordinal='18' />
            <column datatype='real' name='current_infected_upper' ordinal='19' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
            <column datatype='real' name='total_infected_mean' ordinal='23' />
            <column datatype='real' name='total_infected_lower' ordinal='24' />
            <column datatype='real' name='total_infected_upper' ordinal='25' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1wadz681s1ug1611dtu8r0z018yv' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
            <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
            <column datatype='real' name='rt_mean' ordinal='13' />
            <column datatype='real' name='new_infected_mean' ordinal='14' />
            <column datatype='real' name='new_infected_lower' ordinal='15' />
            <column datatype='real' name='new_infected_upper' ordinal='16' />
            <column datatype='real' name='current_infected_mean' ordinal='17' />
            <column datatype='real' name='current_infected_lower' ordinal='18' />
            <column datatype='real' name='current_infected_upper' ordinal='19' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
            <column datatype='real' name='total_infected_mean' ordinal='23' />
            <column datatype='real' name='total_infected_lower' ordinal='24' />
            <column datatype='real' name='total_infected_upper' ordinal='25' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_positive_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_positive_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_positive_7day_ma</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_deaths_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_deaths_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_deaths_7day_ma</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_tests_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_tests_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_tests_7day_ma</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_orig_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_orig_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_orig_7day_ma</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_7day_ma</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_mean</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_lower</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_upper</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rt_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rt_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>rt_mean</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_mean</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_lower</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_upper</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_mean</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_lower</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_upper</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_mean</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_lower</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_upper</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_mean</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_lower</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_upper</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_mean</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_lower</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_upper</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='infectionEstimates.csv' datatype='table' name='[__tableau_internal_object_id__].[infectionEstimates.csv_EE29434559954002B0404F4EDABB480B]' role='measure' type='quantitative' />
      <column caption='Current Infected Lower' datatype='real' name='[current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Current Infected Mean' datatype='real' name='[current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Current Infected Upper' datatype='real' name='[current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Daily Deaths 7Day Ma' datatype='real' name='[daily_deaths_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Tests 7Day Ma' datatype='real' name='[daily_tests_7day_ma]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Infected Lower' datatype='real' name='[new_infected_lower]' role='measure' type='quantitative' />
      <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
      <column caption='New Infected Upper' datatype='real' name='[new_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Lower' datatype='real' name='[perc_current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Mean' datatype='real' name='[perc_current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Upper' datatype='real' name='[perc_current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Lower' datatype='real' name='[perc_total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Upper' datatype='real' name='[perc_total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Positivity Rate 7Day Ma' datatype='real' name='[positivity_rate_7day_ma]' role='measure' type='quantitative' />
      <column caption='Positivity Rate Orig 7Day Ma' datatype='real' name='[positivity_rate_orig_7day_ma]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Lower' datatype='real' name='[prevalence_ratio_lower]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Mean' datatype='real' name='[prevalence_ratio_mean]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Upper' datatype='real' name='[prevalence_ratio_upper]' role='measure' type='quantitative' />
      <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Infected Lower' datatype='real' name='[total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Total Infected Mean' datatype='real' name='[total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Total Infected Upper' datatype='real' name='[total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='infectionEstimates.csv' id='infectionEstimates.csv_EE29434559954002B0404F4EDABB480B'>
            <properties context=''>
              <relation connection='textscan.1wadz681s1ug1611dtu8r0z018yv' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='total_cases' ordinal='2' />
                  <column datatype='integer' name='total_deaths' ordinal='3' />
                  <column datatype='integer' name='total_tests' ordinal='4' />
                  <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
                  <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
                  <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
                  <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
                  <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
                  <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
                  <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
                  <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
                  <column datatype='real' name='rt_mean' ordinal='13' />
                  <column datatype='real' name='new_infected_mean' ordinal='14' />
                  <column datatype='real' name='new_infected_lower' ordinal='15' />
                  <column datatype='real' name='new_infected_upper' ordinal='16' />
                  <column datatype='real' name='current_infected_mean' ordinal='17' />
                  <column datatype='real' name='current_infected_lower' ordinal='18' />
                  <column datatype='real' name='current_infected_upper' ordinal='19' />
                  <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
                  <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
                  <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
                  <column datatype='real' name='total_infected_mean' ordinal='23' />
                  <column datatype='real' name='total_infected_lower' ordinal='24' />
                  <column datatype='real' name='total_infected_upper' ordinal='25' />
                  <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
                  <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
                  <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='infectionEstimates' inline='true' name='federated.0m1lh4z0eriphi13xorje0oqkmn2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='infectionEstimates' name='textscan.1a26tf310fytyn1c430u91j8xedy'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
          <named-connection caption='infectionEstimates (2)' name='textscan.0kxbua91c0u9371bfbplv1opdowk'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
          <named-connection caption='infectionEstimates (3)' name='textscan.1kp7kkl1b0wjaj16n728318vhx02'>
            <connection class='textscan' directory='/Users/mikecave/Documents/GitHub/working/working/covid_data' filename='infectionEstimates.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
            <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
            <column datatype='real' name='rt_mean' ordinal='13' />
            <column datatype='real' name='new_infected_mean' ordinal='14' />
            <column datatype='real' name='new_infected_lower' ordinal='15' />
            <column datatype='real' name='new_infected_upper' ordinal='16' />
            <column datatype='real' name='current_infected_mean' ordinal='17' />
            <column datatype='real' name='current_infected_lower' ordinal='18' />
            <column datatype='real' name='current_infected_upper' ordinal='19' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
            <column datatype='real' name='total_infected_mean' ordinal='23' />
            <column datatype='real' name='total_infected_lower' ordinal='24' />
            <column datatype='real' name='total_infected_upper' ordinal='25' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='integer' name='total_tests' ordinal='4' />
            <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
            <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
            <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
            <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
            <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
            <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
            <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
            <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
            <column datatype='real' name='rt_mean' ordinal='13' />
            <column datatype='real' name='new_infected_mean' ordinal='14' />
            <column datatype='real' name='new_infected_lower' ordinal='15' />
            <column datatype='real' name='new_infected_upper' ordinal='16' />
            <column datatype='real' name='current_infected_mean' ordinal='17' />
            <column datatype='real' name='current_infected_lower' ordinal='18' />
            <column datatype='real' name='current_infected_upper' ordinal='19' />
            <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
            <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
            <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
            <column datatype='real' name='total_infected_mean' ordinal='23' />
            <column datatype='real' name='total_infected_lower' ordinal='24' />
            <column datatype='real' name='total_infected_upper' ordinal='25' />
            <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
            <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
            <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_positive_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_positive_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_positive_7day_ma</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_deaths_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_deaths_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_deaths_7day_ma</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_tests_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_tests_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>daily_tests_7day_ma</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_orig_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_orig_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_orig_7day_ma</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positivity_rate_7day_ma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positivity_rate_7day_ma]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>positivity_rate_7day_ma</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_mean</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_lower</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prevalence_ratio_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prevalence_ratio_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>prevalence_ratio_upper</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rt_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rt_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>rt_mean</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_mean</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_lower</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>new_infected_upper</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_mean</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_lower</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>current_infected_upper</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_mean</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_lower</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_current_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_current_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_current_infected_upper</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_mean</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_lower</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>total_infected_upper</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_mean]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_mean</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_lower]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_lower</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perc_total_infected_upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perc_total_infected_upper]</local-name>
            <parent-name>[infectionEstimates.csv]</parent-name>
            <remote-alias>perc_total_infected_upper</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='infectionEstimates.csv' datatype='table' name='[__tableau_internal_object_id__].[infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39]' role='measure' type='quantitative' />
      <column caption='Current Infected Lower' datatype='real' name='[current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Current Infected Mean' datatype='real' name='[current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Current Infected Upper' datatype='real' name='[current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Daily Deaths 7Day Ma' datatype='real' name='[daily_deaths_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
      <column caption='Daily Tests 7Day Ma' datatype='real' name='[daily_tests_7day_ma]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Infected Lower' datatype='real' name='[new_infected_lower]' role='measure' type='quantitative' />
      <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
      <column caption='New Infected Upper' datatype='real' name='[new_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Lower' datatype='real' name='[perc_current_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Mean' datatype='real' name='[perc_current_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Current Infected Upper' datatype='real' name='[perc_current_infected_upper]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Lower' datatype='real' name='[perc_total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Perc Total Infected Upper' datatype='real' name='[perc_total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Positivity Rate 7Day Ma' datatype='real' name='[positivity_rate_7day_ma]' role='measure' type='quantitative' />
      <column caption='Positivity Rate Orig 7Day Ma' datatype='real' name='[positivity_rate_orig_7day_ma]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Lower' datatype='real' name='[prevalence_ratio_lower]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Mean' datatype='real' name='[prevalence_ratio_mean]' role='measure' type='quantitative' />
      <column caption='Prevalence Ratio Upper' datatype='real' name='[prevalence_ratio_upper]' role='measure' type='quantitative' />
      <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Infected Lower' datatype='real' name='[total_infected_lower]' role='measure' type='quantitative' />
      <column caption='Total Infected Mean' datatype='real' name='[total_infected_mean]' role='measure' type='quantitative' />
      <column caption='Total Infected Upper' datatype='real' name='[total_infected_upper]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Avg' name='[avg:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rt_mean]' derivation='Avg' name='[avg:rt_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='CountD' name='[ctd:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Max' name='[max:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Median' name='[med:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[daily_positive_7day_ma]' derivation='Sum' name='[sum:daily_positive_7day_ma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_infected_mean]' derivation='Sum' name='[sum:new_infected_mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[perc_total_infected_mean]' derivation='Sum' name='[sum:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_positive_7day_ma:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2].[ctd:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2].[max:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2].[med:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:perc_total_infected_mean:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='infectionEstimates.csv' id='infectionEstimates.csv_EBB106FAAB2E4B08B27030D7E1D56E39'>
            <properties context=''>
              <relation connection='textscan.0kxbua91c0u9371bfbplv1opdowk' name='infectionEstimates.csv' table='[infectionEstimates#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='total_cases' ordinal='2' />
                  <column datatype='integer' name='total_deaths' ordinal='3' />
                  <column datatype='integer' name='total_tests' ordinal='4' />
                  <column datatype='real' name='daily_positive_7day_ma' ordinal='5' />
                  <column datatype='real' name='daily_deaths_7day_ma' ordinal='6' />
                  <column datatype='real' name='daily_tests_7day_ma' ordinal='7' />
                  <column datatype='real' name='positivity_rate_orig_7day_ma' ordinal='8' />
                  <column datatype='real' name='positivity_rate_7day_ma' ordinal='9' />
                  <column datatype='real' name='prevalence_ratio_mean' ordinal='10' />
                  <column datatype='real' name='prevalence_ratio_lower' ordinal='11' />
                  <column datatype='real' name='prevalence_ratio_upper' ordinal='12' />
                  <column datatype='real' name='rt_mean' ordinal='13' />
                  <column datatype='real' name='new_infected_mean' ordinal='14' />
                  <column datatype='real' name='new_infected_lower' ordinal='15' />
                  <column datatype='real' name='new_infected_upper' ordinal='16' />
                  <column datatype='real' name='current_infected_mean' ordinal='17' />
                  <column datatype='real' name='current_infected_lower' ordinal='18' />
                  <column datatype='real' name='current_infected_upper' ordinal='19' />
                  <column datatype='real' name='perc_current_infected_mean' ordinal='20' />
                  <column datatype='real' name='perc_current_infected_lower' ordinal='21' />
                  <column datatype='real' name='perc_current_infected_upper' ordinal='22' />
                  <column datatype='real' name='total_infected_mean' ordinal='23' />
                  <column datatype='real' name='total_infected_lower' ordinal='24' />
                  <column datatype='real' name='total_infected_upper' ordinal='25' />
                  <column datatype='real' name='perc_total_infected_mean' ordinal='26' />
                  <column datatype='real' name='perc_total_infected_lower' ordinal='27' />
                  <column datatype='real' name='perc_total_infected_upper' ordinal='28' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Checkpoint'>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0m1lh4z0eriphi13xorje0oqkmn2' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1lh4z0eriphi13xorje0oqkmn2'>
            <column-instance column='[rt_mean]' derivation='Avg' name='[avg:rt_mean:qk]' pivot='key' type='quantitative' />
            <column caption='Current Infected Mean' datatype='real' name='[current_infected_mean]' role='measure' type='quantitative' />
            <column caption='Daily Deaths 7Day Ma' datatype='real' name='[daily_deaths_7day_ma]' role='measure' type='quantitative' />
            <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
            <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[current_infected_mean]' derivation='Sum' name='[sum:current_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[daily_deaths_7day_ma]' derivation='Sum' name='[sum:daily_deaths_7day_ma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[daily_positive_7day_ma]' derivation='Sum' name='[sum:daily_positive_7day_ma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_infected_mean]' derivation='Sum' name='[sum:new_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perc_total_infected_mean]' derivation='Sum' name='[sum:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;DC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_deaths_7day_ma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_positive_7day_ma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:perc_total_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:current_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_deaths_7day_ma:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_positive_7day_ma:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:perc_total_infected_mean:qk] + [federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:current_infected_mean:qk])))))</rows>
        <cols>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{874DE8AD-E397-4076-9CC1-5CCD0D55FA92}' />
    </worksheet>
    <worksheet name='Nationally'>
      <layout-options>
        <title>
          <formatted-text>
            <run>USA Rt over Calculated Infections</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0m1lh4z0eriphi13xorje0oqkmn2' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1lh4z0eriphi13xorje0oqkmn2'>
            <column-instance column='[rt_mean]' derivation='Avg' name='[avg:rt_mean:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
            <column-instance column='[new_infected_mean]' derivation='Sum' name='[sum:new_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-01#</min>
            <max>#2020-11-14#</max>
          </filter>
          <slices>
            <column>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[tdy:date:qk]' scope='cols' value='Date' />
            <format attr='title' class='0' field='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk]' scope='rows' value='Rt' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk] + [federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk])</rows>
        <cols>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{2BA43656-1FF2-4DFF-859C-7D9034631DDB}' />
    </worksheet>
    <worksheet name='Recent_Full_Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0m1lh4z0eriphi13xorje0oqkmn2' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1lh4z0eriphi13xorje0oqkmn2'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[perc_total_infected_mean]' derivation='Max' name='[max:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
            <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[rt_mean]' derivation='Sum' name='[sum:rt_mean:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]' included-values='in-range'>
            <min>#2020-11-14#</min>
            <max>#2020-11-14#</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[max:perc_total_infected_mean:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:rt_mean:qk]' />
              <lod column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:rt_mean:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[max:perc_total_infected_mean:qk]</rows>
        <cols>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{D617B8CC-1DF8-441F-99D0-FE625171917A}' />
    </worksheet>
    <worksheet name='Recent_Full_Data_2nd'>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0m1lh4z0eriphi13xorje0oqkmn2' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1lh4z0eriphi13xorje0oqkmn2'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[rt_mean]' derivation='Sum' name='[sum:rt_mean:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]' included-values='in-range'>
            <min>#2020-11-14#</min>
            <max>#2020-11-14#</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:rt_mean:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:rt_mean:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:rt_mean:qk]</rows>
        <cols>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{B37E7AE5-6967-476C-A725-A63CD08A22AB}' />
    </worksheet>
    <worksheet name='Regions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sunbelt</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0m1lh4z0eriphi13xorje0oqkmn2' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1lh4z0eriphi13xorje0oqkmn2'>
            <column-instance column='[rt_mean]' derivation='Avg' name='[avg:rt_mean:qk]' pivot='key' type='quantitative' />
            <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
            <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[daily_positive_7day_ma]' derivation='Sum' name='[sum:daily_positive_7day_ma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perc_total_infected_mean]' derivation='Sum' name='[sum:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-02#</min>
            <max>#2020-11-22#</max>
          </filter>
          <filter class='categorical' column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;FL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]</column>
            <column>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:perc_total_infected_mean:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:perc_total_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_positive_7day_ma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk] * ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:perc_total_infected_mean:qk] + [federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_positive_7day_ma:qk])))</rows>
        <cols>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{E4273D0A-3DBB-4B46-BEE3-043FB4207C3E}' />
    </worksheet>
    <worksheet name='State_Summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0m1lh4z0eriphi13xorje0oqkmn2' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1lh4z0eriphi13xorje0oqkmn2'>
            <column-instance column='[perc_current_infected_mean]' derivation='Avg' name='[avg:perc_current_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[perc_total_infected_mean]' derivation='Avg' name='[avg:perc_total_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rt_mean]' derivation='Avg' name='[avg:rt_mean:qk]' pivot='key' type='quantitative' />
            <column caption='Daily Deaths 7Day Ma' datatype='real' name='[daily_deaths_7day_ma]' role='measure' type='quantitative' />
            <column caption='Daily Positive 7Day Ma' datatype='real' name='[daily_positive_7day_ma]' role='measure' type='quantitative' />
            <column caption='Daily Tests 7Day Ma' datatype='real' name='[daily_tests_7day_ma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[daily_positive_7day_ma]' derivation='Max' name='[max:daily_positive_7day_ma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[daily_tests_7day_ma]' derivation='Max' name='[max:daily_tests_7day_ma:qk]' pivot='key' type='quantitative' />
            <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Perc Current Infected Mean' datatype='real' name='[perc_current_infected_mean]' role='measure' type='quantitative' />
            <column caption='Perc Total Infected Mean' datatype='real' name='[perc_total_infected_mean]' role='measure' type='quantitative' />
            <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[daily_deaths_7day_ma]' derivation='Sum' name='[sum:daily_deaths_7day_ma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_infected_mean]' derivation='Sum' name='[sum:new_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;VA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:perc_current_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:perc_total_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[max:daily_positive_7day_ma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[max:daily_tests_7day_ma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_deaths_7day_ma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:perc_current_infected_mean:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:perc_total_infected_mean:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[avg:rt_mean:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[max:daily_positive_7day_ma:qk] + ([federated.0m1lh4z0eriphi13xorje0oqkmn2].[max:daily_tests_7day_ma:qk] + [federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:daily_deaths_7day_ma:qk]))))))</rows>
        <cols>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{9F492980-E8B0-400A-A366-15319AA722F9}' />
    </worksheet>
    <worksheet name='state_rt_mean'>
      <table>
        <view>
          <datasources>
            <datasource caption='infectionEstimates' name='federated.0m1lh4z0eriphi13xorje0oqkmn2' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1lh4z0eriphi13xorje0oqkmn2'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Infected Mean' datatype='real' name='[new_infected_mean]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Rt Mean' datatype='real' name='[rt_mean]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[new_infected_mean]' derivation='Sum' name='[sum:new_infected_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rt_mean]' derivation='Sum' name='[sum:rt_mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:rt_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:rt_mean:qk] + [federated.0m1lh4z0eriphi13xorje0oqkmn2].[sum:new_infected_mean:qk])</rows>
        <cols>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{C0677AEC-2BBF-451B-8886-2838D23D742C}' />
    </worksheet>
  </worksheets>
  <windows source-height='114'>
    <window class='worksheet' name='Checkpoint'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D999CDE-3F26-4F1F-899F-7EC05AC2EECB}' />
    </window>
    <window class='worksheet' name='State_Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]'>
          <color-one-way>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[yr:date:ok]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;VA&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC11C866-444A-4860-B5F0-2F59ABED822A}' />
    </window>
    <window class='worksheet' name='Recent_Full_Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93549320-2C72-447F-B1F0-1F145DAF2874}' />
    </window>
    <window class='worksheet' name='Recent_Full_Data_2nd'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8AB7A1F-BF3F-4005-BC15-F4DF5030C817}' />
    </window>
    <window class='worksheet' name='Regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38660659-B93F-47E6-A891-DF25A68AC1F1}' />
    </window>
    <window class='worksheet' maximized='true' name='Nationally'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[:Measure Names]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:date:qk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[qr:date:ok]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{003067A9-439B-48C3-8777-26DCDC7BF0F4}' />
    </window>
    <window class='worksheet' name='state_rt_mean'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[none:state:nk]</field>
            <field>[federated.0m1lh4z0eriphi13xorje0oqkmn2].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44965E3C-AE8F-43E2-B522-A33E3F5C676F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Checkpoint' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3Rc133o++850yt6r0QnCBDspFhEiqQKRVrVdizHshVbduy45eWm+ib3
      KYmTvJXcxLHj2FHcLceSLauLokSRKuy9gyA60eugzGDqae8PkLBokuKwgADI/VlLWosYzDm/
      Gcyc39l7//bekmEYBoIgCMJtR57qAARBEISpIRKAIAjCbUokAEEQhNuU+Xd/0Nvbi6ZpUxHL
      BF3XiUajOByOKY1DEAThViZNx0FgVVXx+XxkZGRMdSiCIAi3LNEFNENoms40zNWCIMxgIgHM
      EC+8X8e//movPn9oqkMRBOEWcdEYgDA97avrpLlrGFXT+cojS3A7rFMdkiAIM5xoAcwQwbCC
      22HlcEMPv3qnlmhMneqQBEGY4UQLYIaIxFTml2aSneLh5V1nSPE6+MiKMkyyyOGCIFwbcfWY
      AaIxFcMwcDusPHxnBfNKMvn1u7Uca+yd6tAEQZjBRAKYAVRNxzDAYjbhsFl4YsM8kj0Ontl6
      gt6hsakOTxCEGeqqEoBhGOi6jq6LksSbKRJT0Q0Dh228xy471cOn76uhbyjIq7vq0XXxtxAE
      4erFPQagKAovvvgiPT09AKxfv56qqqpJC0z4rfO5VpakiZ8tLM9i9bwC3j/exorqPObMSp+i
      6ARBmKniTgCRSIShoSGefPJJZFnGahVliDdLOKag6wYuu2XiZyZZ5sGV5Rxu6OF/3j7J/358
      FS5RGioIwlWIuwvIZrMxMjLCD37wA37wgx9w5syZyYxL+IBIdLwLyGm/8AKfleLhoZUVNHYO
      8bLoChIE4SrF3QKwWCx89atfJRKJAOB2uyctKOFCMVXDMAxsFtNFj61fOIuTLX28tqeewswE
      llflIX2gq0gQBOFyrmoM4Ec/+hH19fWkpKSwbt061qxZc10n/+BAsrhoXd5vq4AubrDZrGa+
      +OAi/vGZnXzv5UOkJjgpz0+dgigFQZhp4u4CikQiJCYmcu+99/LRj34Uv99/XSdWFIXDhw+z
      detW2tvbr+tYt7rwuS4gl/3SffyJbjtf/+hSnDYL//zsHroHAzc5QkEQZqK4E4DH42HRokXU
      1NTw3nvvUVlZeV0nVhSFWbNmsWrVKjGecAVKHCuB5qR5+cbjq9ANg7/96fsiCQiCcEVXtRTE
      8PAw27ZtY8WKFSiKcl0ndjqdmM1mdu7cSUFBAQCapqHrOqqqoqoq0Wj0us5xq4hEoxiGgdXM
      h74n2ckO/vjRxfzrr/fzl09v43P3z2NZZfZNjFQQhJkk7gTg9/tpa2tj7ty5RKNRenp6mD17
      9jWfWFEUdu7cSXFx8UQCkGUZ+dzaNiaTSZSanhNTDXQDEj3OK74n1cVZ/J/PrOb7rxzi2y8c
      4FBDHnfOLWBRhUgEgiBcKO4E4HK5ANi6dStms5nHHnvsuk48MDDA4OAgbrebcDjM7NmzJwaC
      JUma+E8YHwQ2yRKyJF/xPZEkKM5J4u8+u4bX9jTw2p4G9pzqJCvFTVFWEjlpXpI8dixmGVUz
      CEcVZElCliVsFhNmkwmXw0KKx0FOmhfrJSqPBEG4NcS1JaSmaYyMjBCJRBgbG8NsNpOVlYXT
      6bzmE6uqSjgcBsbv9j94LLEl5IV+/W4tL7xfx/f+5H5SvPG/54ZhMDASYvfJdk629tMzOEb/
      SBBV05ElCQMDWZLQDQPDGE8ekiRhkiTMZhm71Ux5XirL5uRSU5xBslfs0SwIt5K4WgBDQ0P8
      /d//PampqWRkZCBJEqtWrbquLiCz2YzH47nm599OQhEFu9WMLF3d2n2SJJGe5OKhVRVsvKOM
      SEwlpmhEFZWYqmE2jV/kDQADwlEFRdUZ9IcYCUQ4fXaA1p5hvvPCfhJcNuYWZXDf0hIqC9Mm
      5XUKgnBzxZUAkpKS+NrXvsbp06cJBoOkpaWRliYuAjeLYRjn7s6v7fmSJGG1mOLuzikhGYD1
      i4oIRRS6fQHeOtDEgbpuDp7ppqYkgwdXljO7QHwGBGEmiysBmM1m8vLy0DSN2tpaDh06REZG
      BqmpYsLRzRCKqtgs5gsWg7sZzCYZr8uG12WjJCeZR+8c4/W9Deyt7eRYUy/3LSnhoVUVJLrt
      NzUuQRBujLgSwPDwMN/+9rdxu90UFxezevVqsrNFVcnNEozEcNjMmOSpGxQ3m2Ry07384QML
      +ciKcl7aUcfmvY2caOnjyw8voSgrUQzaC8IME1enss1mY9WqVVRVVeFwOBgdHSUUCk12bMI5
      iqpjNl25AuhmkCSJnFQPX3pwEX/y8WWMBCL87U/e4/1jbWiaPtXhCYJwFeJqATidTtatWzfZ
      sQiXEY4qWC0m5ClsAfwuk0nmjqo8slI9/Perh/neywcZGAnx8J0VmE1iozlBmAni/qYqikJ9
      fT0AgUCAlpaWSQtKuFAkpmIzm276GEA8CjMT+bPHVrC0Mpdfv1fLT944RiAkZnALwkwQVwvA
      MAxOnjzJ5s2bWb9+Pe3t7bjdboqKiiY7PoEPdgFNdSSXluSx80cPLSLRbWPL/ib8oShPbJhH
      ipg3IAjTWtwzgVVVxeVyEY1Gyc/PZ86cOZMZl/AB4aiCzXrzq4CuhsNm4Yn75pHodvDC+6fx
      +UP80YOLyU33TnVogiBcRtwJwOv1UlJSQkVFBf39/TQ3NzN//vzJjE04J6qoWMzTawzgUkwm
      mUdXz8brsvHzN4/z//1yF3/00GIq8lOnfeyCMFkMwyAcVRkLx+jxBegc8BNVNGRJwuO0kpvm
      JSXBictuwWGzXPmAN1BcCWBsbIwtW7awaNEivve975GRkcHjjz8+2bEJgG4YKJqOZZpUAcXj
      7kVFZCS5+P7LB/nnZ3fz+3fPZc28Aixmsa6QcPuIKRrdgwH21nZwrKmPbl+AYDj2gda8gaYb
      RBUNt91KfoaXouxkqovSKc1NxmGzYLOYrvi9NwwDXTdQNR3dGD/m+fW9LGYZk3z5od64EkAw
      GMTpdJKXlwfA3Xffjckkvsw3QySqYujgtN/cO4PrNbc4g288vorvvXSI/371MG29I3x0TeWM
      mzSmGwacWy1LtGKEKzEMA38wysmWft47dpajjb1YzDKZyW7uXVzMrOwkclI9WEwyhgGhqELn
      gJ+2vlHq2wfZdqiFzXsbcNos5GckUFmYRl66l5xULx6nFZvVTDiq4A9GGR6L4BsN0TUQYDQY
      JRCKEo6pRGIqVrMJh81MssdBVoqb8vxUSnOTsVvNF9yIxbUY3PkWwAd3AVu5ciXl5eU35A37
      3QwnFoP7rZGxCF/819d5YEU5n1xfPdXhXLVQROGX206yZX8ThZkJPH5PDVVF6XGVihrn7mY0
      TUfVdUIRFd3QcVgtmM0yZlnGYr6xLSNdN4gqKn3DQTr6R2noGGIsFAUJElx2ctO8lOenkJbo
      iuvu7GZRNR1F1QiGFYKRGOGYSkaSC5fdesPfI+FiqqbTNeBn18kOdh5vo28kSFaKm2WVuaxb
      MIuctCuPhRmGQe/QGGd7Rjje3EdDh4+uwQCarqNpxvjNCCABkiwhSxImWcJskvE4bSR57Ljs
      Fpx2C9GYRjASo28oSCAcQ1E1nHYLFfmp1JRksGZeIU67Jb4EMBkMw6C3t5euri4WLVp0wWMi
      AfzW4EiIr/z7Gzy6ppKPrbm+XdimiqbrHKzr5unXDuMPRllYlsXqeQUsrshBliXOX5oMY/yO
      u38kSGv3MPUdPnp8AfqGgnT7Amj6+EdVliWcNgvZKR5K85KpmpXOvJJMbFbThzZ3L8cwDGKq
      xtmeEXaf7OBYUy9tfaOYZAmTScZ1rvU1Fo6h6+NJKSPJxYrqPJZX5VOUnXhN571ehmEQiakc
      qOtix/E2WrqHGQpEJqrF7BYzBZmJLK3MYf3CIjxOq0gEN5BhGIQiCnVtg7x9qJkjjb3IksSc
      WWmsringjjl5172cuj8YHf8ODAcZC8eIKRp2qxm300qCy0aSx0GS247Lcel9QgzDYDQYpb59
      kENnujnc0MNwIEJKgoN5JZnXlgBUVQXG1wi6VpFIhKamJrq7u7nnnnsuOr5IAOPa+0b50+9t
      5YkN87h/WelUh3Nd/MEobx1sZvPeBoYDEexWM3npXlx2C4Yx3toZHA0RjIzvNmc1m0hLdFKY
      lUh+egJuhxVZlgiGY4yMRWjvG6Whc4hITMVptzCvJJMV1XnMK8nEZbd86MXu/Md+OBDhwJku
      3j3Sypl2HyZZojQ3mSWzc6ialU5+RsLEwFxM0WjrG+H02QF2neigqXsIWZJYUJbFx9ZUUpo7
      vojeZF9kDcNAUXV2nWjnpV1naO8bJdnjoDw/hbK8FBJddiwWE81dQ5w+O0BDhw+Xw8pj66rY
      eEepSALX6PxnRtcNzvaNsP/0eOLt8Y1htZi4d3Exdy8qIj8jYdq+x4qqcbSxlwN1Xbx/vO3a
      EsDBgwfRdZ2lS5deVzCqqrJz507uuuuuiX8bhoGqqgwNDYnF5oDWnhH+5sc7+Nz9Ndw1v2Cq
      w7khxsIxTrX0c6SxF58/TCiiIEkSXpeN1AQHOakeslM9zMpMxOuyfeixAqEoDR1DHGvqZV9d
      D6PBKDaribLcFOaXZlKcnUj+uSQDEI6q9I0Eaewc5mhjHyea+1A1nfwMDyvm5LJ0dg6ZKe64
      Xkevb4zX9jSwq7aLcFRlXkkGD68qZ3Z+ynW/Rx+msXOYZ94+SX27j4wkJ/cvLeau+YXYrBff
      kOmGQX27jxd3nOFEywDVxRl8fuM8MpKufS+P24muG4xFFM72jtLYOUxb3wjHmvrO9bPLFGcn
      sX5hIfNLM3Ff5i58uorE1PgTgKZp1NfXEwwGMQwDl8tFeXn5dbUCfjcBnA9F0zR8Ph/p6enX
      fOxbRX2Hj7/54Tt89dGlrJqbP9Xh3HDGxP8ACa7nvknTDVq6h3n/2FlONPfR3u8f7y+Vxg/u
      tFsIRxV0w8AkSyS6HSyuyGbl3HwqC9KueaJdTNHYdriFl3fW4/OHWD2vgPuXlVKSk3wdr+Zi
      o8Eoz247yduHWkhJcPLwqgrWLpiFLY5uBk03eGNfI//z9klkSeIz99Vw75LiGxrfTBaOqvj8
      IXqHgvT4AvQOjdE14KfHN76JEgYgQWaym5KcZOaVZLKgLItEt33aTtCMR9wJIBqN8sMf/pDy
      8nIaGhpQVZXc3FweeeSRazpxMBiktraW2tpaFi5cSHV19USzSXQB/dbRhh6++cxOvvGplSws
      FyuwxsMwxkviBkdDtHSP0NozTEzRCEcVkhMcpCe6KMpOIifVi9ks35AJduf743ccb+eZrccJ
      R1VKcpJ5aGU5SypzrmuMIKqo7DrRwTNvHWcsHOOuBbP41N3VeF22q+pqOD/I+O/P76ehw0d1
      UTpffXQJaYmua45tJokpGv5glObuYZq7hugfCdI54Kd/OEg4qqIb4wOtEuB2WEnxOslO9ZCX
      7qUgM5HKglScdgsmWb5lKsLivn3XdR1N0ygsLMTn85GamkpfX981n9jhcDB37lyqq6snNoIX
      LqZoOoZhiBr6qyBJEhaziawUD1kpHlZUj5cv67oxse3lZJzTYbNwz+IilszOZtuhFrbsb+Jf
      ntuDx2lj2Zxc5pdkMrc4I+6S3nBUYcfxNjbvbaRjwM/80kw+ua6awqzEa1pwT5IkMpPd/O1n
      1/DGvkZ+/U4tf/Ff2/j6R5dSXZwxrWeaXwvdMOgfDnK4vpvGziFOtfRPVMSc3y0vI8lFdoqH
      tCQXCS4bhZmJZCa7cTusmEwSZlnGdAsvbhh3C8AwDFpbW9m7dy9paWksWbKEoaGhSVkPSLQA
      fmvXyXb+7Vd7+ccvrKMiX4yJzBT6uQqRA3Vd7D7ZQV3bAFFFw+u0UpiVRHVROlkpbtITXTjt
      FmyW8fpunz9MR7+fky19tHQPMzgaojgnmQ1LS1hRnYfVfGNKT3XDoLlziG/9Zh8DwyE23lHK
      w3dWkOC6/nkaw4EwQ4EIA8NBwlGFmKpjMkk4rGZcdisJ7vHqlcmYExKKKDR1DXG0sZfa1n46
      B/yEoypJHjtF2UlU5KdSnp9CXnoCFrOMxWTCZJKmpIprOoi7BaAoCgcOHEDXddLS0rDb7WIx
      uJsgcq5p6rzJU8SF6yNLEm6HlbULZrGyOp+RsQgnW/po6Byi7uwAv9h6AiSwmc2YTOM13Zpu
      oKgaAB6njZqSDBZXZDO3KOOyZX7XE19pXgrf/Nxafv7WcV7dXc++0518bE0ld9bEP2tbUTWG
      /GFOnx2g/Vzi6h8Oomg6MUVD03XO32Ka5PELrcU8/p/bYSMnzUN+egKzspPISnaPz124iteq
      6Tp9Q0E6+v0cb+7lcH0Pw2NhAEpyknnkztnMmZVOdoobp90iWtK/46paAJFIhLq6Ol555RWW
      LFnCxo0bJyUo0QL4rS37m/ivVw7x9P/aFHd1ijB96YbBWDiGPxil1zeGzz9e9hqOKrjsVlK8
      DvIyEvC6bCS4bDflzjSmaJxq7ef5907T1DnErKxE7ltaQnFOMjmpnonuJl03CMcURseiDIwE
      OX12gMMNPQyMhAiEorgdVnJSPePPS/OSl+bF7bBitZrQNJ1gWGFwNIQ/FKV/OEjXgB+fP8xQ
      IMxoMIrTZsFuNeNxWinMTCQjyUV6kguPc7wSzGYxEVM1IjGVkUCE3qExmruH6R4MEImpJLjs
      FOUkUVWYRk1JJmmJzpu+ts5Mc1Wrgb7++uv4/X42btzI7NmzJzMu4ZxQREGWJeyXKPETZh5Z
      kvA6bXidNnLjmB16M1gtJhaUZVGel8KRxh5e2VXPd188gNthJdFtx+204nXaGB6LMBKIEFVU
      wlEVs0kmO9XDXQsKWViaRXqyG4/DisNmjqubStV0wlGFUEShbzjI2d4RWrqHGQ6Eaez0cayp
      l1BEQT2305zZJKPqOhLja9wkuOxkJrtZv7CIObPSKMxMJMFtFxsSXYW4ryomk4m7776b0dFR
      6uvr6enpwePxTGZsAhCNqeNLDojPtDDJXA4rq+YWUFOcydneEWpb+2noHCIUURjyh7FaTJTl
      JZOR5KYoO4mCzAQSXPZrrn8/v4SBx2kjI9nN3OKM8Ulums5YKEZM1YgpGiNjEWD8ZshhM+Nx
      2rCYZRw2Cx6H9ZLzH4T4xPXOhcNhdu7cSXNzMwMDAxQVFbFs2bLJjk1gvI9TliSk66qQF4T4
      eV025hZnMLc4Y2JtJMMAs1nGOsl96JIkYTWbSP7AZkL5GQmTes7bWVwJIBAIsH//fsrLy0lN
      TSUrKwuvd3o0X2914ZiKzWKe0ZNNhJlLliXRj34Li6tjIS0tja9//euUlZURDofZs2fPxP7A
      wuSKxFRs1um5H7AgCDNbXC0ASZLwer3MmzePefPmEYlE0DRtsmMTGC+zM8+gzWAEQZg5rmn0
      xG6fWZt6zGThqIrdKrqABEG48URtyTR3fncf0QUkCMKNNqUJYHwvS30qQ5j2guHx0rdbZfEp
      QRCmjykroNU0jWPHjjEyMkJ1dbVY+vkyVE2/bdcpEQRhck3ZlaWvrw/DMFi8eDGnT5+eqjCm
      vaiiYrWILiBBEG68KWsBRCIREhIScLlcE1tMThfj+75Oj64pRdNFFZAgCJNiyhKALMtEIhEU
      RZnYD0BV1Yl9B/x+P3a7HUmSCAQCeL1eNE0jHA7jdrtRFAVFUXA6nUSjUQzDwG63Ew6HMZlM
      WK1WgsEgNpsNs9lMIBDA5XIhyzJ+vx+v14uu64RCIdxuN6qqEovFsNkdvLCjnuMtg1P11lxg
      OBBGV2OMjo4QjUZxuVzEYjE0TcPhcBCJRJAkCZvNRigUwmKxYLFYGBsbw+FwYDKZ8Pv9E8t2
      jI2N4fF40DSNSCSCy+VCURRUVcXhcBCNRgGw2WyEw2HMZjMWi4VgMIjdbsdkMhEIBHC7xxem
      u5F/m5v9t3Y6ncRiMXRdx263E4lEkGUZq9VKKBTCarViNpsZGxvD6XRedLxgMIjH40FV1Ym/
      TTQaJRqNivf7Jr3f1/pdMAxjWh/vZn12rmlP4BshHA6zfft2zGYzOTk5VFdXTzw21auBbj3Y
      zKH67ik596X8/vpqCjITpzoMQRBuMVOWAM5XACmKgs124dZ2U50Apugt+VCiC0gQhBttyrqA
      JEnCZDJhMk2/DRrExVYQhNvBRQmgt7d3ypd50HWdcDg87QaHBUEQbiVT1gX0Yaa6C0gQBOF2
      EPc8AE3TpkXrQBBuBef3/hWEqRT3GIBhGBw9epS2tjby8/OZP38+WVlZkxmbINyS2vtG+fEb
      R1k1t4B1C2dNdTjCbeyqtoRctGgR4XCY3bt309LSQlVVFWvWrJnE8ARh5hkZi6DrBkke+0UF
      BZqu88a+Ro429tI/EqSmJIPUBOcURSrc7uJOAIqisGPHDjIzM/nTP/1T7HY7Z86cmczYBGHG
      iSoq//SLXQwFwjy8qoIVVXkkuH+7fHpb7yh7azspyEigZ2iMHcfbeOTO2VMYsXA7i3sMwGw2
      k5WVRV1dHa+88grt7e3Mnz9/MmMThBmntWeEM+2DeJ02fvzGUf7Pj99l26EWQhEFTdfZsr8R
      3TD4yiNLKM9LYfvhFgZHQ1MdtnCbijsBBINBDh8+jGEYFBYW0t09fWbKCsJ0oOsGh850k5Hk
      4u8+u4avP7oUkPjeywf5xg+2843/3s47R86yoiqP4uwkHrlzNkP+CK/taSASEyXPws0XdxeQ
      1WolKyuLtLQ0Tp8+TVFR0WTGJQgzznAgzL7TnWxaXobLYWVVTQE1JZnsON7G7lMdaLrOXfML
      +eiaSkwmmeqidDYsLeG1PQ0EwzE+fV8NXqdtql+GcBu5qkHgBQsWoCgKycnJlJaWTmZcgjDj
      7DrZjj8YZe3831b2eF02Ni0vY9Pysot+32I28dE1lQBs3tdI12CAx9ZVUZ6fgtVsQlF1hgJh
      RscipCQ4xWCxcMPFlQB0XeeNN96gra0Nl8tFIBAgNzf3qvcG1nWd4eFhPB4PFouFkZERwuEw
      qampWK3Wa3oBgjAdBEIxth1qZVZWIm5n/J9lp93CJ++upiQ3mWfeOsE3n9lBWW4KDpuFSEyl
      a8CPPxQl1evk4TsrWL+wCJNpvOe2ocPHvtOd3DW/kKwUD1FFJapoJDhtmEwyhmHgD0VpaPdR
      3+GjxxdA0XQq8lLZtLwMq2X6LcMi3FxxJYBAIEBXVxdf/OIXsVgs7NmzhyNHjrBu3bqrOllj
      YyOnTp1i+fLlOJ1ODh8+TGJiIj09PSxcuPCaXoAgTAe7TrTRMxTg4VUVV/1cs0lmeVUexTlJ
      bNnXxOH6HnyjYbwuG8vm5FKam8Kb+5t4+tXDGAbcu6QYw4CfbjnG6bYBth9uZc6sNAZHQwRC
      MaqL0lm7YBZne0Z4+1AzrT0jeJw2nDYLujE+TpGfmcCi8uxJeCeEmSSuBBCJRBgZGeHVV18F
      YHBwkJycnKs+WVlZGYqiADA0NEReXh5FRUXs2LEDGJ9s9sH/xH7BwkzgD0Z5bU8Ds/NTWVSR
      dc2f27QEJ5++dy6fvnfuRY8tn5PLPzyzk7cONrNmfgGBYIy2vlGWVeYCUN8+SILLxqzMBHaf
      bGf74VYMw6AgI4EvP7yYyoJUMpLdhKIKf/Rvb/D6ngYWlGZe1+sWZr64EkBiYiKbNm0CxlfK
      LC8vJzv76u8ePjgpxjAMJEm64Ge6rmMYBpqmoeu6WAxOmBHeOdyCzx/m99ZWYrfIk/K5lYBl
      lTk8/doRznYPU9/hIxRRWDu/gLlF6eiASZKQJGjpGWF/XQ956R4WlGbitI1/zVVVxSJLrKjO
      4839zXQPjpKe6LrhsQozR9xdQC+++CILFizgzjvvxOv1XtOSydFolFgsRiQSwel00tTUhMfj
      mej//+DS0Od3HhKE6SwSU3n/RAdluSksLM+Z1M/syrkF/HDzUY639NPjGyPZ66A8Pw27/cLK
      oYqCdCoK0i97nPuWlLBlfxP763p45M7ZYvnz21hc8wBUVSU3N5eUlBSefvppnn/+eQKBwFWf
      rLW1lUgkQm9vLw6Hg9TUVFpaWqipqbnqYwnCdLD7ZDsd/aPcs7gIt2Nyb1i8LhtleSnsPtnB
      4YYe5pVmXtWA83k5aV7K81LZvLeRtt5RBkaCF+yBHY4qdPSN0tY7QiiiTMsNkoQbI+4yUIvF
      wvLly1m6dCknTpygo6ODysrKqzpZRcWFA2QJCQlX9XxBmE4Mw2BvbScpCU6qim7O0uUrqvL4
      4eajAFQWpGGS457LOcFsktmwrIR/f34fX/+PNzGbZO5bWsIT99UwGozyf5/bQ327D90wmJWV
      yF/9/koykt03+qUI00BcCSAtLY1HH30UGO+aEUtACAJ0Dvg51drP/ctKSfJcXUn0taooSMN8
      rgy0uujy3TxXsrqmgFSvk/6RICea+9i8p4EEl41jjb00dPr4xLo5SJLEizvqeH1vI5/bKL7z
      t6K4EoDJZMLlEoNFgvBBbx9qQVF1VtcU3LRzluQkMa8kA6/LTqL72pOOJElUnUsgd80vxDDg
      l2+fxGSS+dIDi1i/aHymf2vPCDtPtHHP4mLy0r035DUI04fpqaeeeiqeX4zFYmzevJlQKMR3
      v/tdvF7vNZWCxuP8lpBut2h2CtOTomr896uHmVOYxj2LSyYmZ002SZJYWpnLsspczCb5hgzg
      SpLE/NJMQlGFh1ZWsKomH1keP3Z2iod3jp4lHFVZXCHmDdxq4h4DiMVi9PT00NfXx8MPPywW
      gxNuWz5/iH/6xS58/jBPblpw02fU2q1xf22v6phPblyAJF1Yrl2Ylciyylz21nawZHY2C8Xk
      sVtK3LctLpeL+fPnU15eTkZGBtXV1ZMZlyBMS4OjIf7h5zvp6PfzpQcXsbD81tkVT5ali1oU
      siTx6OrZpHid/Ouv9vLmgaYpik6YDHEnAFVV6ejooK6uji1bthCNRiczLkGYdgzD4LXd9bT1
      jfK/H1/FuoWzrqkKZ6bJSHLxZ48tpzw/lZ9uOcab+0USuFXE3ZaMRCL09/fz8YmTw5UAACAA
      SURBVI9/HEmSxKCwcMtTVZ3dp9oZHovw0MoKFFVn54l2ZhekMqcw7baZQCVJEtmpHv6fjy3j
      R5uP8tM3j2EAc4vS2byvkbz0BDYsLZnqMIVrEFcC6OvrY+vWrXR3d/PKK69gMplYvnz5RUtC
      G4ZBd3c3qqpit9tJT0+/bb4kwsykavpEWeXvauj08fSrh1E1nbLcFDTdwOcP88jq2cjy7fe5
      9rpsPLGhhv7hMX68+ShOu4VAKIrDZmFBWRYZSeKmcKaJKwEkJSWxbt06qquryczMJBqNXnRh
      NwyD7du3s2fPHpKSkjCZTHzhC1/AbL7xA1aCcL00Xee9o21sPdhEstfBkooc7qjKmxhgjcRU
      Xni/Dt0wsFnM/Oa906QnubBaTCypyLltb2ySPA6+8uhSfrH1BFazzMLybP7jhQNs2dfIExvm
      EYoo9AyNUZSVeNu+RzNJXFdni8VCKBTi/fff5/7776etrY1gMEh+fv4Fv9fe3s4jjzxCe3s7
      bW1tYjVPYVrSdJ23D7Xw87eOk5bgoqV7mINnumnsHOKJDfMwm2X2nOrgREsfH1tTOV4jv+0k
      TruFpbNzSEu8vTdmyTnXHWQ2yWi6zo7jbWw73MJHlpfx/VcOcaZ9kL/85MqJeQbC9BX37fnZ
      s2fx+XycOHECWZZZuXLlBY9LksS6devweDwTW0aKu39hOjnTNsjRpl5GAmF2neygIi+VLz20
      CMOAF96vY/uRVtxOK2ZZ5vV9DZTkJLPxjlJiisaW/Y0MByIsr8oTd7YwUfoqyyYeWFHOofpu
      /vEXu2jpGcYkS2zZ30RFQeplu9eE6SGuK7QkSaxdu5a0tDR8Ph+GYRCLxSYeNwyDgwcP0tPT
      A4DNZsPj8YhFpIRpIxRR+Ldf7yUQiuG0W6ialcbj99aQdm455Cc21KDpOs+/exqLWaayMI3P
      3j8fl92Kw2bw5MYFvH+8TWyicgkV+akUZyfT0jPMwysr8Aej7DjZRteAn4LMxKkOT/gQV1UF
      9O677xKLxSgsLKS5ufmCmcCtra2cOXOG0tJScnJyyMzMFHdKwrTROeBneCzCR+4o4+7FRSR7
      HNg+MKHKYbPwqXvmUpiZSHqSi+qidBw2CzBeC7+iOo8ls3PENoqXYLWY+NNP3EF9h4875uTS
      NRBg16l23j7Uwmc3zkc+dx0YC8do6PDR0OGjIDOBxRU5ooUwxeJOALIsU1hYSGJiIsePHycl
      JWXiMUmS+PjHP47P5+PkyZMcOnSI/v5+Cgpu3hopgvBhWrqHMQyDO6pyyUrxXPJ3Et32S27e
      DuOfcXHxv7ysFM/E+1qUncSaeYW8f7yNqlnpLCjL4mhjDy/uOENLzzAJLhtj4Rj/6/eWTywv
      oagaFrN4f2+2uBOAzWZjzZo1nD17lg0bNpCWljbx2PkuoFOnTmEymbj33nspKipC/pBJMpqm
      cfr0aSKRCOnp6SJZCJOqsdNHqtd52Yu/cGM9uno2dW2D/Mtze8hMdtM/EqSyII1//8q9WMwm
      /vEXO3lxRx1zCtM4eKaLzfsa+cJHFlKSkzzVod9W4l4MLhqN8txzz9HR0YHL5aKtrY3i4uKJ
      x/fu3UtLSwuKotDc3MzAwAAVFRWXTQLBYJDW1laqqqpISEi4YMBYLAYn3EiqqvPTN49TmJnI
      6pqC27KG/2Zz2a3cUZmLx2mld2iMJbNzeHLTAtKTXLgcViwWE2/ub6JrMMBrexroHQpis5hY
      UHbrLK0xE8TdAtA0DQCPx0NDQwN5eXkXPP7www/z4IMPTvxbkqQPbQEoisLo6CjHjh2jvLwc
      u92OpmkYhoGqqmiaNrGBvCBcj27fGD5/iBVVuRiGhqJoUx3SbcFlN7FpWTHr5hdgMZuwmOWJ
      7/T84jQKMxLYc6qD3FQP5kSJ/ac7eWxdJVbRFXTTxJ0AnE4na9euZd++fWRmZrJixYqJxyRJ
      uuqSz8TERNatW8fw8DBHjhxhw4YNyLKMYRjIsowsyxfsESwI16q9z4+mGZTlpYjP1BTwXOLa
      kOhx8un7ath3upN7l5RwvKmXX2w9wZl2H/NLRSvgZon7ql1fX8/27dtRFAWPx4PFYrmuE/v9
      flpbW5FleWJdIUmSJloOV2pBCEK82vpGcdjMVBSkic/UNDK3OIM5s9Ixm2QsZplfvVPL0cY+
      FpZPzj4jhmFMlAGL6qNxcb0L4XCYrVu3snHjRj796U8TCoU4ceLEdZ3Y7XaTkZFBYmIiixcv
      vq5jCcKHaejwkZeegMMmJiZOJ5IkTVyIU7xOZmUlse90J/3DQXYcb2PvqQ6iinpDzmUYBkcb
      e/mbH73Lvzy7m/7h4A057kwX1zfC7/cjyzKqqjI0NERycjJdXV0sXLjw2k9sNpOdLSbVCDee
      YRiMBqOcaunnaFMvdW2D3LukGIvo/pm27FYzi2dn87M3j/PXP3yHgdEQEjBnVjpPblpAfrr3
      mucVGYZBc/cw33v5ILIkcaypj3/6n118+aHFFGUn3dZFAZIRx3TdQCDAli1bJmb/aprGokWL
      mDNnzqQEpaoqPp+PjIyMSTm+cOtSVI1D9T08/24t7f2jJHkcVBel8/vrq0lJuL3X8Jnu+obG
      +OYzO/E4rNy7pJhAOMZv3juN02bhn76wjoSr2APZMAzGwjHa+/20dg/z+t4GDAP+4pMrGBwN
      8fSrh4nGVNbML2TjHWVkJrtuy4mrcSWAm00kAOFajAYjvLzzDG8daCYz2c2GZSXUFGeSlui8
      Lb/cM9GQP4zTbsFuNWMYBidb+vm7n73PfUtK+IP7511xA56YotHY6WN/XRcnm/voGgxgMsnk
      pXv51N1zmVs8fk3pGvDz3Du1HK7vxu2w8ujqSmpKMugc8NPZ76coO4mMJBeRmEpz9zAmWaai
      IIUkj+OWqlKKOwGoqkpjYyNpaWkkJydP6mCaSADC1TCM8XX6v//yQY439fHQqgoeXFmOx2mb
      6tCEG+Dfn9/HvtOdfPPJtRdNFIvGVPqGg/iDUSKKys7jbew/3YXLYWVWViKzC1KpmpVOfkbC
      xNIe52maTn2Hj1+9U0td2wBuh5WRsQhWs4mYqpHkcRBVVDTNQNV0vC4bS2fn8Kl75uK0X18R
      zHQRdwLQNI0DBw5QW1uLrussX76csrIyrFbrDQ9KJAAhXoZh0NQ1xNOvHqbHN8bH76pk4x1l
      osrjFjLkD/O172yhODuJbzy+CptlfOiyc8DPr96p5VB9N9HY+GCx12VjyewcHl5VEfes75ii
      se90J42dQ+RnJJCT6qGj30973wgpCU4qC9IIRmIcaejhrYPN3FlTwJceXHRLLF0Rd1mEJElk
      ZWXR0tJCV1cXR48epa2tjY0bN05mfIJwWbpucKi+mx+8fgQJ+PLDi1lelXfF5wkzS7LXwaOr
      Z/OzN49zqmWAheVZNHUN8e3f7McfjLJ2fiHV57p2clO95KZ7r+r4VouJO2sKuLPmt8vRVBam
      XfR71UUZGMDWg83kpHrYsLQUh83M6FiU9v5RCjMT8TitM6q7Ma4EcH52bl1dHYsXL+axxx5D
      0zS6uromOz5BuCTDMKhrH+Q7L+wn2ePgyw8vpjw/darDEibJ3YuK2XqwhZd21lGck8Rz208R
      jip841Mrb9rf3Wox8cR98zDJEs9uO8WhM92smV/ItkMtNHYNUZydxNceXUp6kouoomGSJVx2
      67SuMoqrC6i7u5uXX355YjkIgLVr14oqIOGGMwyDhg4f7x0b31EuNz2BldV5JLrtE3dW58v6
      /vW5vZhMEn/+2AryMxKmOHJhsr2+p4EfvXGU5VV5HKjr4vF75vLAivKbHoeq6bx/7CzPba9l
      ZCxCUXYSi8qzeGnnGexWM8leBz2+MRw2MxuWlrB2wSysZhOKptPSPUxtaz9j4RiSJFGcnURN
      SSbJXseUdFvGlQAURSEYDGIYxsQ2jy6XC7s9/rKsqyESwO3rbM8If/2jd4jGNEwmiZiikex1
      8OCKctYuLMJpM9PcPcy3n99PVFX5448uu2RzXbj1BEJR/uK/ttE1GKAwM5G/+9waElyTcw2K
      x1g4RlvvCLOyknDaLbT1jvCD148wPBZhSUU2jZ1DnD47gM1qxmE1E4oqxBQNs1lGliQMY3wg
      2mSSWViWxWPrq8hO9Vyx0ilehmFgwMR+DJcSVwLo6+vj1KlT9Pb2Tuz6dc899zB37twbEujv
      Egng9hSJqfzNj96lezDAP31hHfkZCeyr7eSFHXU0dQ6Rl+7lzpoC3jzQhG4YfH7TAu6YI/r8
      byfbD7fw3Du1fPGBhSyc5ruzqZrOyZY+Dtf3oGo6dquZqqJ0ynJT8LpshKMK7X1+9td1svVg
      MzFF486aAh5eVUF2que6Jr75g1Fe3V2PounMK8lkbnEGJlm66JhxVwEZhoGiKAwNDaHrOomJ
      iTidkzOxRiSA28v5j+DP3jzOSzvP8Ke/dwcr5+ZPfFhVTefQmW5+9tZxugcD5KV7+ctPrrzq
      wT7h1hBTtFtuc57hQJhfbD3JtsMtWMwyG5eVsnJuPsXZyUgScSWD89+j4UCEb/58Bx39fmLq
      eLd9dqqHj99VyZ01BcjSbxNB3AkgGo3yrW99i76+PrKysli6dCmrV6++1tf7oUQCuL1EYirP
      bT/FSzvPcP+yUj6/acElB86iMZWmriGKc5KxW8W6PsKtxTAM2vtG+dU7tRw404Wi6mSluHlw
      ZTnrFxZdVHaqaTqBUIzW3mFiikYgHKPu7CCH67tRNJ0/fGAhS2bnsP90J6/vaaChc4iSnCQ+
      c988qovSxxffjDcBBAIBXnjhBZKTk0lKSsLn8/HQQw9NyhshEsCtTdcNWnuGeftQC4FQjG5f
      gNaeYR5YXs4TG+ZN66oJQZhM5/vt2/tGaWj3seNEG6da+8lO8VCYmXhBS6Br0E973yj6uUu4
      YYDDZmZhWTYPrSqnJCcZSZLGx24Ngzf3N/Hq7nr6hoPcObeAR1fPvrouoJaWFhwOB2+//TZr
      1669aFOYG0UkgFtP54Cfky39RGMqDR3jU/U9TituhxWbxcx9S4pZu3DWDRsAE4RbgarpvHuk
      lfeOnWU0GL3gMbfDSnVRBpWFqVgtJuwWMykJTtwO6yUrigzDIBRReHnXGV7f04iBEX8CaGlp
      YfPmzSiKwuzZs7nnnnuue3MNXdfRNO2ivQVEArh1aLrOjmNt/OLtkwyOhgDwOm2sqM7jY2sq
      cdqtyBLYRJeOIFxWTNHQ9Asv1SZZwmKWr3qwWNcNOgf8vLijLr4EEIlEePrpp3nooYdISEhg
      y5YtVFRUMH/+/Kt7Fb9zzJ07d2IYBvn5+VRUVEw8JhLAzBcIRWnuHuZoQy9bDzVTlJXEFz6y
      AI/Thtkki005BGGKqZoe30zg0dFRrFYrZrOZYDBITk4OHR0d15UA+vr6yM7Opri4mD179lyQ
      AISZQ9V0nn+3lgNnukn22CnPS6VrMEDt2X5Gg1GsZhNr5hXw0MoKMpLdUx2uIAjnmE1yfAnA
      4XDgdDrZsmULMH6Hfscdd1zXyTVNw2q1YrFYJiaXTRejYxH6xI5BcXnnSCvbj7RSkJFA9+AY
      p1oHSPLYqZqVTkV+KtXFGWQkucTdviBMQ3ElAK/Xy2c+85kbemKbzUZvby/BYHBiQ3lVVSfG
      Bfx+P3b7+PT/QCCA1+tF0zTC4TButxtFUVAUBafTSTQaxTAM7HY74XAYk8mE1WolGAxis9kw
      m80EAgFcLheyLOP3+/F6vei6TigUwu12o6oqsVgMm93B9145wqmzvhv6em9ViqazcUkh6xcU
      4A8EkS1WzDK4bCbcLhfRaJThoUhcf5ub/bd2Op3EYjF0XcdutxOJRJBlGavVSigUmmj1jo2N
      4XQ6LzpeMBjE4/GgqirRaBTXudcbjUbxeMZXohwbG8Pj8aBpGpFIBJfLhaIoqKqKw+EgGh0f
      2LPZbITDYcxmMxaLhWAwiN1ux2QyEQgEcLvHW0838v25Fd7vWCyGpmk4HA4ikQiSJGGz2QiF
      QlgsFiwWC2NjYzgcDkwmE36/H4/Hg2EY0/p4N+uzM2UbwqiqyoEDBxgbG6OyspLc3NwLHpvK
      MYDm7mGau4am5NwzTWFmIkXZSeIOXxBmoCndEez82kK/W0001QlAEAThdnBRF9DY2BhXygmd
      nZ0YhjFp8wA0TSMajRIIBCbl+IIgCMIlEsAHV/y8nMzMTIBJG7zVdT2uOARBEIRrd1ECOD8A
      8WGOHz+OrutXLAM1DIORkRH8fj8JCQkkJCTg8/mIRqOkp6djGAb9/f04HA6Sk5PRNG1iEDgc
      Dk/actOCIAjCVWwJqaoqXV1dJCUlUV4e3yYMhmHQ0NCAx+OhtraWefPmcebMGVwuF0NDQ6iq
      iqqqjI6OsnjxYhISEibOZTabsdnEpt6CYBgG4ahKe98oNquJ7FTPxL64gnA9rupT1NTURGNj
      I4mJiSxdupS8vLyJEs5LkWWZJUuW0NPTg81mY2BggNLSUtLT09mzZw+KorB+/Xra29vp6emZ
      SACCIIyLKirHG/t4aWcdde2DyJLE/LIsPnv/PLJTrn3NeEEAiLt2z2QyUVVVRUZGBqdPn+at
      t97inXfeueLzzp49y6lTp1i2bBkmkwlJkpBl+YKB5t/9tyAIEIzE+OHrR/jn53bj84f5/KaF
      PLSqgvr2Qf7+ZzsYCoQBGA1GqG3tJxxVpjhiYaaJuwWgKAq7d+8mPz+f+++/Hxi/uH8YXdc5
      evQod911F5IkkZiYSFdXF6qqTkwQ6e7upr29nbKysut6IYJwKwlFFX74+lF2HG/jrvmFfG7j
      fBy28UUTl1Xm8jc/epdnt53i8Xvm8s/P7uFUaz9r5hXyB/fPI9Etxs6E+MSdACwWCx6Ph7ff
      fptt27Zx7733XnEQWNM0srKyqK+vx+l0UlFRwejoKL29vcydOxdd1zlx4gSpqamkpYl9XQUB
      xldQfWlHHXtPdfDEhho+svzCMbeyvBTurCngnSOttHQP0zngZ0lFNntrO+gdGuPrH11KZrJb
      7KsgXFHcE8H8fj+//OUvSUlJYc6cOQwNDbFy5cpJCUpMBBNuZ50Dfv78+29TU5zBX/z+pb9j
      gVCUv3p6O33DQR6/Zy7331HKe0fP8tM3jyFLEo+uns2GpaW33NaJwo0VdwvAbreTnp5Oamoq
      zz77LCtWrJjMuAThtqRqOr957zS6YfDomsrL/p7HaeOvHl9JR5+fheVZmE0y6xcVUZqbzE+2
      HOPHbxyjqXOILz+8BLtNVAwJlxZ3C0DXdbq6uhgbGyMvL29iManJIFoAwu2q7uwAf/uz97ln
      cTGfvf/allvXNJ1fbjvJb96vY2V1Hl99dKnYQ1m4pLiqgHRd55e//CUvvfQSx44d41vf+haD
      g4OTHZsg3FZ8oyF++uZxXHYrG5eVXvNxTCaZx9ZX8/lNCzhwppunfvIevUNjNzBS4VYRVwIY
      GRkhFArxla98hU984hPcf//9HD16dLJjE4RbmnZuv9e3DjThD0V5edcZzvaO8Acb5l335jlm
      k8x9S0v46iNL6Bzw843/3s7OE203KHLhVhFXu1BRFFpbW/nP//xPYDwh1NTUTGpggnCr6/YF
      +PnWE4wEIjy3/RShqMraBbO4oyr3yk+Og9kks2puPtkpHr770gG+/fx+Dtf38Jn7akjyOG7I
      OYSZLa4xAEVR8Pl8WK3WiZ+5XK5JW6pBjAEIt4Mt+5v4+ZvHuW9pCafPDpCa4OAPH1iE13Vj
      v1eGYeAPRfnNe3W8daCJ8vxUvvGplRPzCoTbV1wtgOHhYb7zne9QUVHB2rVrycnJEVPQhdtK
      TNXwjYbISrlwscQhf5i3D7Wgajp3zMlF1XROtfQzvyyTwszEy35PFFXjwOlO8jMS+NiaSiQJ
      ZEnCNgmDtZIkkeCy88R9NVTkp/J/n9vD5n2NfHT15auMLmU0GOHtgy0keRwsr8oVCeQWENen
      Tdd1Zs2axeLFi9m8eTNms5lNmzaJO3ThthCJqvznywc50dzHnFlpbFxWitthpX8kxDNvHad/
      JIhhwBv7Gse3BowovLa3gX/+4nrSEl2XPGaPb4yWnhHuXVKM035zLqQmk8yS2dnML83ktd0N
      3LekBLfDeuUnMp4An912ijcPNGGSZd480MSXHlhEUU7SJEctTKa4EoDJZCIpKYnZs2dTUlLC
      2bNnJ/ajFIRbWSSm8uz2U+w/3UnVrHRONvdxpL4Hq8VEOKaSlujkq48sITfNy4nmPlTdoDQn
      mb/92fv88PUj/PknV2CSL661ONbYS0zVWFSefVNfj8Vs4hPrqvjLp7fx6u56HltXFVdr/tCZ
      bt47dpZ7l5QwKzORX71byw9eP8z/eWK1aAnMYHElgOTkZO677z5gfEmI0tJrL1EThJlC03Te
      PtjMlv2NrJ5XwJObFtDjG+N4Uy+GAV6XjaqidNISnEiSREFmIjDe5/7pe+by4zeOsfVAM/ct
      LbngIquoGkcbe8hPTyAn7cr7b9xoxdlJLK7I4bU9DSyuyKYkJ/mySSAcVWjo8PHstpNkp3j4
      xNo5JLrt2KxmvvviAd480MzDqyoueI6q6WKP6BnC9NRTTz11pV+SZRmr1ToxOHt+3Ph39/K9
      UXRdn9i1XhCmQlRR2XqwhV+8fYI75uTx+U0LsFstJLrtVOSnUlGQyqysJFx260UXT0mSKMpO
      oqlriPeOnWV2QdpEV5Cm62w92ML2w63cu6SYmuLMm/7aZFkiL93LiaY+3tjXiM8fZnZBKlbz
      b7/Pum5wtLGXp189xGt7GzEM+MMHF02Ma2Qmu6jv8HGgrosV1Xm47FYMw+D02QG+//JBkj0O
      MpImb7KocGPElQBgvBLoxRdfZPfu3VgsFrq6usjPz5+UoEQCEK6Womqo6vXfeeqGweBoiC37
      m/j1u6dZVJ7NFx5YiMseX1/5eSZZpmpWOu8ePcuJ5j5qSjKxW83sOdXJT7Ycozw/hU+ur56y
      GboJLhvzSzMZDkR4/3gbw4EI80szJ7qr6toG+fZv9mOSZR5YXsYn11dTlpcy8XyL2USq18n2
      w61EYyqLKrLRdIN/eGYnjV1DHDrTw6zsRDKS3SIJTGNxJ4BgMEhtbS0FBQUEg0FisdikdQWJ
      BCDES9N16tsH+dlbx3nzQDOqquO0W1A1nUhMvar+aVXT2XWine+/cpjDDT2smVfIk5sW4Ipz
      oPR3Oe0WinOS2HqwhX2nO9l3uov3jp0lM9nNFx9cdN2Tva6HJEl4nDaWVGQTiqpsO9RCXrqX
      vHQvZ3tH+PZv9iPLEn/8sWUsm5N7ydLUlAQnI2NRth1ppSAjkdaeYbYebOET6+bQ7Rtjx/E2
      0hJd5KZ6xMqk09RVrQW0a9cudu/ejdfr5WMf+xjp6emTEpSYByBcyehYhIbOIY409LDrZDuy
      BMleJ10Dflx2y8RFOzfNy6q5+eRnJJLotuF2XNxlA+N3/u8eaeVnbx4nK8XDpuVlLK7IviF3
      6LtPtvPC+3U4bGZyUr08tKqC7NSb3/d/OWPhGH/9w3eIKRqblpfx2p4GwlGFP/n4Hcwt/vDv
      4MhYhKd+8h5j4RgmWcZpt/APn1/LSCDCf71yiPoOHx+/aw6blpeKbSynobgTQCwW44033iA5
      OZmysjJSU1M/dDvI6yESgPBhRoMR/uOFAxxt7CXRbWdheRYblpaQnerheFMfRxp6UDWdmKJR
      e3aAkbEIFrNMTqqHR1dXsrQyB5MsoxsGgVAUm9lMQ6ePf/v1XvLSE/iLT66IuzwyXtN9YHRv
      bSffffEAMUVjdkEqj66upLooPa4799rWAZ766Xuoqs7XHl3CmvmFSJLEkD/MjzYfYX9dF3+w
      YT73Lyu5ZPJVVI3+4SCZyW5M0/g9uhXFnQAMw2BkZITDhw9z8OBBli1bxl133TUpQYkEIHyY
      94+18b2XD/LYuiqWzckl8zJdKYZhMOQP09IzTEefn8MNPTR3D/H/PrGG0txktuxv5O2DLXic
      NvqGxnA7rfzZJ5aTk+a9ya9oejjS0EM0plJTmonzKrrOdN3g3aOt1LUN8uSmBRe0mmKKxl//
      8B10w+CpP1hzUWLVdYNXdtfz6q56vvLIYhbe5LLY213c6VbTNHbv3k1dXR3FxcWUl5df+UmC
      cIPFFI2tB5tJTXCyqib/shd/GO/nTklwsrgih0dWz+bLDy/GbjXz3PZTbD/cwjNbT+C0W9B1
      g+QEB0/+/+zdd3Sc533o+e/bpmPQBr0SIAgSJFhASewUqS6r2VJcYjtOsRPHjmNvTs7NOZuc
      zSbZcrPOvZuzKRtfZ5ViO5GbIkt2VGhZpEiRFDsJNoAkiN7LAJj+1v1jCIg027AMAZLP50gH
      wHDmxTMzmOf3vk/5/Z5puW87f4CWRWWsW1Z1Q50/pFcVPbq6jq+9+NBlQ2YuTeHhlTWc65vg
      bN/4Jf/mOA7tvWO8+v4pJiIJTnSO3vJzEG5MRmM4lmWRTCZZvHgx69atQ1EUvN7MkknNXGDM
      XPrZto0kSUiShOM4OI6DfIWNMoJwJe2943QOhvnE5iUUBn039NjyUA6fe6yZb71xiJOdIzRW
      F/JHn91Arl/U0M2mlkVl5OV42NXaw4qFpcgX+oJIXOd7F4JwfsDLkbODfP6J5itunBOyI6MA
      MDExQVtbGyMjIwwPDwOwZcsWmpqunUvENE1aW1spKiqiqqqKwcFBTp06RXFxMU1NTbS2thIO
      h1m+fDmhUOjWn41wT3Mch32n+nCpCmuWVNzUMTatqOHw2UGGJmJ88ZkW0fnfAWWFOaxcWMqp
      rlEmphOEcn04jsM7+zto6xnny8+vZmwqzhu72znXP0FjlegL7pSMQm1RURFr1qyhpqaGr371
      q3z2s5/Ftu3rPm5iYgLDMJiengbg5MmTrFu3jkgkwqlTp7AsiwceeIATJ07c2rMQ7mm27TA8
      EeXtfed4/1g3y+qKb3oHrcel8oefXs9f/s6j1JWLPDZ3ysbl1YxOxjl6ufJHRQAAIABJREFU
      dgjHcRieiLHtQAerG8t4eGUNLYvKSKRM2nvGr38w4bbJ6ArAcRzef/99tm3bRldXF/39/Sxc
      uJBly5Zd83HFxcXouj4bAGzbxuv1kp+fz/DwMBUVFfj9fkzTBNJXDLZtY1kWpmmKfEMCumnx
      073nePPDc0TjOhWhAM+urcc0DMxbPHYqZd2WNgrXV1caZGFFPt//xQlKC3wcah8kkkjx1IML
      wLYoCrqpLc3ldNcoTz5QO9fNvW9kvI6zvr6elpYWVqxYwZo1a6iouLlLcNu20XUdt9uNaZqY
      pjk7BzCzrNQ0TVRVzVq9AeHuMDYV5//69910DEzw0OIKnl23iMbqQjQ1OylIhOxxu9189rHl
      /NUru/nrH+0nZZisW1pFS2Pl7L83VofYfbyXlMlVayKc7RunZ3iKzStqxN/BbZBRABgfH2do
      aAhN09i2bRsAW7duve4cQG9vL62trcTjcQKBAPn5+Wzfvh1d11m/fj0ffPABfX19YrmncJne
      kSn++ocfMj4d5/dffIjNK2rE5OBdbnl9MX/02Q381Su7kSWJFzZeupKwsaqQdw+ep7VjmI3L
      P0ozY5gW3cNTvL3vHDuOdGFYNhORBJ/csvROP4V7TsYVwWaGYyzLIpVKkZeXd0mFsCuxLGt2
      rkCWZSRJIh6P43a7UVUVwzAwDAOv13vJSiCxD+D+9lHnn+CPfnU9TbVFIp/MPcJxHAbGIxim
      TU1J7iXv62Q0yR/+/TbyAh7+9y9txeNS+eB4D9/bdpzRyRguTeGx1XWcHwwzOBblm195nKK8
      G1sJJlwqo1xAiqLgOA4/+9nPsCyL73znO/h8vusmg5NlGUVRUBRlNgC4XC4URUGSJBRFweW6
      fGu+yAV0/zJMi2/++25GJuOi878HSZJE0OcmL+C57H11awq5fg9v7TuLS1U50zvOt396iIKg
      l+c3NPKlZ1vYuLya4jw/vzjSiSxJNNeVXHIc23bYeayb3cd7qC3Ny0qFtXtJxq+OaZqMjo4y
      OjrKSy+9RG9vbzbbJdynDrUP0tYzzhefWSU6//uMJEmsX1bF4TOD/HD7SRzHoam2iD/+/Ca8
      bnX2b2FZXTEtDWW8e/A8qxaWsnRBOmWFadr8dO8ZvretFcuyGZ2M85UXHhBB4BoyfmV8Ph9b
      tmwhHo9TUlJCUVFRNtsl3IcM0+I7245RVhhg64V8MsL9xaUp/NYzqxgOxyjK8/F7n3jwsoyu
      iizzyS1N/OW/7+b//N4HVBTlUFkUJBxJcLJrlA3NVVSEcvjBeyepLAryK1turPbx/STjAOA4
      Dp2dnZw5cwZVVXnhhRey2S7hPuM4Drtae+gfjfA/fXLtHauTK8w/uX43/+tvPIymyldd6VNf
      UcD/8aVH2HOilz0nezk/EEZVZJ5Zt4hPbmlCkSXGpxP8+P1TWLbDSw8vmdfJ+OZKxgEgEokw
      NDTEV7/6Vbq6ujh69Cg1NTXZbJtwHxkJx/j+L05QX57PuqWV4uz/PiZJUkYnAMX5fp7f2Mjj
      D9ZhWjYS6cfNdPRfeHIFpmXzw+0nCUcSvPTwktnKbEJaxgHA7/cTCAR45ZVXSCQSWcsEKtx/
      Ykmd//HGIabjKb7+0hrcmljfLWRGlqSrVmsLeF186ZkW3JrKuwfPc7B9gNL8AM11xSysLCCU
      68PtUinO89+3BWsyTgfd1dXF6dOnKS0tpaamhvz8/KydpYlloPcHw7QYGI/wk13tvH+siy89
      08LTa66cM14QbpZhWpzsHOXIuSFOd40yOhlnMpokx+dKl7bM9fHwyhrWL6siL3B/5YbKKADE
      YjFefvllli1bRltbG1/5yley+iEVAeDe5jgO5/on+Mmudk50jhBL6Ly0pYlPbWkSBUGErHEc
      h5RuMT4dp2tokr7RaWJJg+PnR+gZnmJhRT6/89xq6isK5rqpd0QsoWc2BBSNRtE0jbq6Ovbt
      20dHRwclJSXk5MyfsnbC3cG0bN473MkrvziBbTusXVrJ+qWVrFhYOtdNE+5xkiThcatUFAUv
      qfsQiac42D7AP791lL977QD/8+c2Upx/b84VRBM6U7EU5/omePPDs5ldAUxPT/PGG29gmiax
      WAyfz8eGDRtYtGhRVhoprgDuTZad7vy/804rlUVBvvjMKhbeJ2dbwvy3q7WHb79xiMXVhfz2
      c6vvqSCQSBnsONLFLw53MjYVJ5EyKS3wZz4HcCeJAHDvcRyHY+eG+eYru1m6oJjff+khgj6R
      7E+YX9788CzfeecYJfl+nlvfSH1FPindIuhP716+25YnW7bNaDjOK++dYOfRbpbXl9BUG2Jx
      TRH15fmZBwDTNOnq6iIUChEMBrNaxUsEgHuL4zj0j0X4y3/7AEWW+eNf20hJvkjzIcxPh9oH
      +O62VnpHpjEtG1mWcKkKdWV5tDSWs25pJcV5flxXWK2mGxaGaWGYNh63elmJzDshpZtEEjpd
      g5PsP91P6/lhwpEkn9i0mBc3L7mk3RkHgItrArtcLjZs2EBdXd1sCufbSQSAe4dl2ZzsGuVf
      3jpKOJLkG7+yhpUNYrxfmN8i8RRtPWPEkgaaojA+FWfvqT56hqfQTYsV9SU88WA9DZWFOI5D
      ImVw5OwQh88OMh1LEU3oFOX5eXT1AprriskPeG9pqall28gXSuleTcowOXB6gG0HO+gdnmYq
      liTgdbGwooBn1jXQsqjsssdnHAAcx2FgYIBdu3bR0dFBaWkp5eXlPP300zf9pK5GBIC7m+M4
      pAyLofEou1q7+c+9ZykIevmtj63igcXlc908QbgptuPQNzLNmx+e5UDbwOxSUsO0iSV03C6V
      kgI/JfkBgj4XbT3jDIejBLwutq6qZf2yKvIDXhQl3ZHLkoTtOETilxa+CkeSAOQFPHhcKgfb
      BzjdPUZlUQ7NdSUU5flI6iY+t4bbpWLbDr0jU7x76Dy7WnsI5fpYv7SK+op8FlUVXnPzW0YB
      wHEcdF3nnXfeoaGhgcbGRkzTpLe3l/r6+lt8WS8nAsDdx3EcbMchmTLZe7KPXxzu5GzfOJqq
      sH5pJZ96ZKkY9hHuGSnd5NCZQY6fHyHg1SjK81NTkktDZeHsmb5p2Rw5M8ib+85xsnMEw7Sx
      L3S3LlXB61YxLZtY0uDiE3P5wg+24+A46fvm5XiIJnSSKRPbcZCk9Kqmknw/jgPD4SiFQR+P
      tizg2fWLrlpQ55dlFAAGBgZ4/fXXsayPSuht3bqVpUuzU5BBBIC7h+M4dA1Osut4D+NTCXpH
      p+ganKS0IMCz6xfRXFdMeShHFHMR7mu9I1N09IeJJnQM0yKhmyR1E01RCOX5UJWZCCCRe6Hz
      no6lSJkWC8vzaagsZCKS4GTnKJFECremEEsadPRNYFo2y+tLWNNUSUHQe0PtyigAzCz/vPiu
      Xq83ayUbRQCY/2aGed471Mm/vnMMx3EIeF2UFAR4bPUCNjRXz8kEmCAImcvoEzo2NsaJEycY
      HBxkYGAAgKeeeooVK1ZktXHC/OQ4Dn2j07z8n0c4cnaI5rpivvz8aqqKc+e6aYIg3ICMAkBJ
      SQklJSUYhkE4HMZxHILB4PUfKNxTkimTs/3jtPeM84P3TuLg8JUXHuDxB+tmxy0FQbh7ZBQA
      JEkilUrxN3/zNwwODlJSUsK6devYvHnzLf1y27YxTfO6tYWFuWHbDhPTCc70jXOwbYADbQNE
      EzqqKrO6sYzPPd5MZVFQJG8ThLtUxoO0uq4TCoVYtGgRoVCI8fHxW/rFiUSC999/H1mWqays
      pKlJVO2Za5Zlc7Z/gv2n+hmditE9NMXQRBTLdgj63LO7CNc0VZIX8IgCG4Jwl8s4AAQCATZs
      2IDX6+XnP//5LdcDGBkZobq6mrq6Ovbs2SMCwByIJnRGJ+NE4iki8RTvH+vm6NkhVEWmMNdH
      aYGf1Y3lLK0tYnFNCI9LFZ2+INxDMg4A3d3dbN++HcMwWLx48S1XA7MsC03T0DQN27Zv6Vi3
      WziSYGA8OtfNuKrUhSVkST29Jti2HWIJnXA0iWld+lo6TrraViypz94WSxoYpkU8ZWAYNpZt
      Y9kOPrfGU2sW8vSahQR9blyactWSfIIg3P0yCgDJZJI33niDp59+mtzcXLZt28bx48dvaRWQ
      x+NhYGCAWCw2m07CNE1s28ayLKanp/F4PEiSRCQSIRgMYlkWiUSCQCCAYRgYhoHP5yOVSuE4
      Dh6Ph0QigaIouFwuYrEYbrcbVVWJRCL4/X5kWWZ6eppgMIht28TjcQKBAKZpous6bo+Xv3vt
      ICe6Jm76uWWbbTuznTaAJIHHpeL3uFCusN084HMRuKhqUk5BevluQcBFUZ6PoFdFU6C6JJ+A
      R0ZxUthmOhCqqoqmacRiMTweD4qiEIlECATSm7pu53tzp99rn8+HruvYto3H4yGZTCLLMi6X
      i3g8jsvlQlVVotEoPp/vsuPFYjFycnIwTZNUKoXf7yeVSpFKpWZTpUejUXJycrAsi2Qyid/v
      xzAMTNPE6/WSSqV3gbrdbhIJ8Xrf6Out6zqWZeH1ekkmk0iShNvtJh6Pz55gRqNRvF4viqIw
      PT1NTk4OjuPM6+Pdqb+djPYBjIyM8Oqrr/Lxj38cgI6ODsLhMM8999yN9l2zTNPk4MGDRCIR
      li1bRllZ2SX/Npf7AHqGp+gampyT350Jrzvd2fs9WnqDlQSqIqMp8hUnZF2qgqZ+NHQzU3RF
      ka+dW0QQhHtbRlcAbrcbl8vFG2+8AaQ76HXr1t3aL1ZV1qxZg23bKMr8GmaoLsmlukSsaRcE
      4d522RXA9PQ0GeaHyxrLsohEIuTl5c1pOwRBEO5ll10BKIpy1UlZwzBmx508Hk9WUkFDeqep
      JElZrTkgCIJwv7usB/f7r5w6NJlM8t3vfhfDMJAkiUcffTSryeAunkgTBEEQbr+MT+Ety0JV
      Vb7whS/MztwLwr3OcZzZpbWGadM3Os3AWITcgJu8gJeiPB8Br/gsCHenjAOApmmYpsnLL7+M
      LMs88sgjWbsCEIT5IKWb/OJwJ/tO9QGQ1C26hiaxbBvHSS+/XVhRwKe3LqW5vkRskhPuOjdU
      EWx0dJTBwUFs26a6uprCwsKsNGqul4EKQjiS4F/fPsau1h5qS/OQZQh43Ty0pJzSggCW7dA5
      EObnB88zGU3yzLpFvPTwEnE1INxVMr4CmJkDmJ6epqqqikgkcsvJ4ARhPgpHEvx/PzvM/rYB
      Pr5pMb/66LIrnt0/0FjOYw/U8aMdp/jpnnamokl+82MryfFlp06GINxuNzQHUFxczOLFi5Fl
      mXA4nM12CcI1WbaNfWEntHqVDXA3Yzqe4ttvHOLw2SF+8+mVfGxtwzXvn5+TrnUcyvXxg/dO
      ktBN/uBTa3GJFBrCXSDjAOD3+9myZQuSJLFv3z7Wr1+fzXYJwmUsy2ZoIsqJzhHae8aJJHRU
      WaKyOMjDK2opCwVuqfSkblh85+1j7G8b4FNbl16385+hKjIvbl6CW1P57rZj/ONPD/M7z7WI
      PErCvJdxALBtm8OHD9PW1sbGjRvp7e29JH2DIGSL4zhEEzo/2n6K7Uc6SegmQZ+bgNeFadns
      bxvgp3vO8PSahXxq61K8bu2Gf4dhWvxox0neP9bNCxsbeenhJTd8jGfWNQAO//izwwB8+fnV
      YmJYmNcyDgCRSIREIsG6deswTZOJifmbLE24d6R0k/2n+/mPnW30jk6xflkVn9i0mIpQEJem
      YNsOZ/vG+Y+dp/nJrnbO9k3wtRcfoiTfn/GwkGnZ/OJQJ2/sPsOWlTV8euvSm+64n3poIb0j
      07y17xzxpMEffGqtCALCvKX82Z/92Z9lckeXy0VXVxfvvvsu/f39PPPMM1krC2nb9my2OuH+
      1TsyxX//4Ye8vrsdt6byB59cy4ubl5Cf451NaCdJEqFcH+uXVhH0e9hxpItfHO5EUxUWlObN
      3u9qTMvm5wc6+M62VpbWFvHl5x/A57n5lTyyLNHSWEY8afDuofMMjEVY01SBfIUsrYIw1zJa
      BqrrOh0dHej6RznlKysrxTJQISsM0+LND8/yr28foyDo5RObFvPo6jrcmnLNs3rHcegZmeJ7
      21rZf3oAv0fj0dV1PLO2gdLCS08mTMsmHEnww+2nePfgeVY2lPKNX1lDXsBzW56D4zi8trON
      72w7xsMravnaiw+KOQFh3skoAIyNjfHnf/7nlJaWsmTJEjRNY/ny5bdcFOZqRAC4fw2OR/in
      N49ysG2AtUsr+e1nW8jP8WQ8nOM4Drbj0N4zzk8+aGPfqX48LhW3K935aoqC36MRSxqEIwk0
      VeGJB+v45JalBP23d/mm7Th8+41DvL3/HJ95ZBmf3Np0S5PUgnC7ZRQAHMchGo1y+vRpzpw5
      g6IorFu3jtra2qw0SgSAu9vgeIS393Xg86jUluZRX1FAKNd31fs7jsPYVJwdR7r4yQftSBJ8
      YtMSnl3XgNt1cwkHnQuV0s4PhNl3up+JSAJIn/knUiZBn4uywhxWLCyhrjw/ax2zadn8w+sH
      2XGki6+9+BBbV9Vm5fcIws3I+NOVSqWIRqNYlkU0Gr1iyuiZQNHd3U1TUxOmadLa2orH42HJ
      kiVEIhHa29spLi6mtraWc+fOEQ6HWbJkiUj8dg+YiiX52Z4zvLO/A8Oy0Q0Lx3HwujXKCwOs
      bCjjgcYyGqtDACR1k7O94+xvG+D9o10kUiYPLC7nE5sWs7Ci4JbGzSVJQlEkGqoKWVhZwMyf
      q4ODY6fH6u/EuLyqyHzxY6voG5nmn948QkNFAZXF2Zk7E4QbldEVwOjoKH/xF39BeXk5VVVV
      +P1+WlpaLhsCchyHAwcOMDo6ylNPPcXhw4cpKipiZGSE8vJyzp49S1NTE+3t7ZSWljI2NkZt
      bS3nz59n48aNs8cRVwB3n/MDYf75zSOc6h5j/bIqfuXhJfg8Gh39YU50jnCuf4LuoSlsxyE/
      x4NlOeimRSJloMgyKxtK+diahSyuCd2TY+Vnesf5r9/7gLLCAH/8a5tEyghhXsjoCiAvL4+v
      f/3rl0wCX20F0IMPPsj27dsBSCQSlJSU4HK5GBsbwzAMiouLGR8fZ3BwkPLycoqLizl16hSQ
      3m3sOA6maWJZFoZh3OrzE7LMtGz2nOznO+8cw3Hg9z+xmgcXV+DS0p346kUltDQUk9RNBsej
      HGgboHt4ElmS8HtdNFYV0lBRQGlhIN3xOzaGceV6FHezBaVBXtjQwPfePcFPd7fziU2NV6zf
      LAh3UkYBQNM0GhquvyvyShN1Mx36TNlHx3FmU0tbloVt27OFX2RZxnEcZFlGluV5VypSuJRp
      2fxs71lefb+NmtI8vvx8C9XFuVccWgmoKg0+Dw1VISzbQZJAvs/qET+9toGu4Wle29VGdXGQ
      dcuq5rpJwn0uowAwMTHBvn37LqkU1tzcTHV19SX3syyLjo4ORkZG6OrqorCwkOPHjzM1NUVL
      SwtTU1O0trYyMjJCc3MzJ06cIBaLzV5NSJI0WwlMVASb30zL5gfvneKN3e08sLicLz+/OuMl
      lPfr2+p2yXzhyRV0DU3yb++eoKY0X8wHCHMqo41gtm0Tj8c5cOAAq1evJhaLEQ6Hqauru+y+
      hmFQVVWFz+ejqip9hlNeXk4oFKK4uBjTNKmrqyMUCpGbm4umadTX119SXlJsBJvfDNPi1fdP
      89qu03xsbQO/+fTK276E8l7ldWtUFgXZ1dpDW884qxvL8NzkSqcrSekmsaTOVDTJ4TODvLar
      jfHpBAvK8sQSVOEyGf3l+f1+mpub2b9/P4lEgmQyecWKYLIsX5Yf6OKrBI/Hc8nS0VAoRCgU
      usmmC3PBcRz2nujjRztOsWZJBZ95ZBk+z43n3rmfLasr5vNPLOd/vHGIf9vWym89s+qm8hdd
      LJbUOXB6gO1HuhifipMyTKbjOgGvi70n+5iMJvjU1qX35AS7cPMyPvVwu9288MILfPjhh/h8
      PjZs2JDNdgnzkOM4dA1N8e2fHmLpgiK++okHRed/kzavqGE4HOM/3j+N26XyucebbyoI2LZD
      3+g03912jCNnh6gpyaOuIp/8gIclNUVUFQd5a985Xv+gnYnpBKsaylhSE6LwGvsyhPvHDdUD
      OHz4MF1dXWzYsIEzZ87wwAMPZLNtwjyT1E3+9e2jaJrCbz29SixlvAWqIvPxjY1Mx1JsO9DB
      VCzJbzy9isKgN+NjTEwneGN3OzuPdSNJEr/ycBNPPbSQvJxL52J+9bFl5AU8bDvQwY6j3dSU
      5vKNl9ZQU5p3u5+WcJfJOABEo1HC4TArV65kenr6kiWhwr3PcRx2HO2m9fwwv/7kCmrLROdx
      q7xujd94agVFeeliMmNTCX73hdXUlFz/tR0cj/APrx/kTO84LQ1lfHJrEzUleVdcgeX3uHjp
      4SU8vLKG8wOT/P1P9vN3rx3gv/72o6iqmBe4n2WcDVTTNAYHB9m1axdjY2M8/vjj5ObmZqVR
      YhJ4/ukbnebv/uMAS2pC/MZTK0WK49tEVWQaKgspyvWx52Qv+071UxEKUpTnu6QzdxwH3bCY
      iiY50TnC//OjDxmdivNrT67gs481U5jru2a+JEmS8HtcVIRyyPW7eWd/By5NZUlN6LZVUxPu
      Pjc0BFRSUsKf//mfMz09TX9/fzbbJcwjKd3kxztOo5sWn398+U3n5xGuTFVkHlm9gOJ8P//4
      s0N885XdbG1ZwPPrF+H3urBth/beMX66+wz9YxHGp+MU5fr5xktraFlUdkMduCRJbFlZy/7T
      A/zgvROsXlRGTWmuCAL3qYyTwe3cuZO3336bjRs30t/fT3V1NU899VRWGiVSQcwfjuNwsG2A
      //aDvTy3fhGff2L5XDfpnjY2FefHO06x/UgXbk2hIOjFMG0GxiIU5np5cHE5i6oKWbmwlPyc
      zOcLrvR7/sv/+3OK8nz8b1/cKoL6fSrjd72kpIT6+nqqqqqor6/PWiZQYX4JR5J8Z1srBTke
      nlu/aK6bc88L5fr4nedXs3VVLftP9zM4EcWtKTyzroEtK2tv26qrwqCXzz3ezN+/doCf7jnD
      iw8vue92ZgsZBgBJkqiuriYUCtHc3ExfXx9Hjx5l7dq12W6fMIcM0+L7751gaDzK1196iNzb
      VCxFuDZZkmisDs1mTc0GSZJ47IE6PjyV3tOxurGM2tI8MRR0n8l4Jk+SJAYGBujt7aWtrY1Y
      LJbNdglzzLJs3tp3ju2Hu3jyoXo2rchO8R9hbv3uCw+QF/Dwt6/uJ6Gbc90c4Q7LOAB4vV6e
      f/553nvvPWzbZvPmzdlslzCHHMfhZNcoP3zvJCsWlohx/3tYKNfHrz2xnK6hSV7dcQrLvvcy
      sQpXl3EAsG2bI0eOMDAwgN/v59ixY9lslzCHTnSO8N9+sIeAz8VvP9tyW3PVCPPPxuXVPLa6
      jtd3t3PkzNBcN0e4gzIOANPT08RiMTZt2oTjOAwMDGSzXcIc6Ryc5K9/+CFuTeUPP72ekgKx
      F+N+8IWnVlBXls9//8FeDraJz/b9IuMAEAwG8Xq9vPXWW2zfvp0VK1bc1C/UdX02rbRt26Lo
      yzzSNzrNN/99N6oi818+s56FFflz3SThDgl4XXz9pTXk53j4v3+4l/2nxT6f+0FG+wDOnTtH
      NBplbGyM9evXoygKLpfruisGOjs7OX78OH6/n9WrV9PV1cXo6CiSJPHQQw+xd+9eJEmiqqqK
      JUuWzD5O7AO48wbGIvzV9/cQjaf42otrWF5fLFaE3Ie6hyb55it7SOom/8uvb6ZW5Au6p2V0
      BeDz+XjnnXd49dVX+Zd/+RdefvllTp8+fd3HjY6OUldXx/r168nLy2NkZIStW7cSCoU4deoU
      lZWVbN68mcHBwVt+IsLNiyZ0fnBhuednH2umWXT+962a0jz+4JNrUWSJv/nxPiamE3PdJCGL
      MprdKysr4ytf+QptbW0sWpTeDOT1Xn8X4oIFC+jr6+Ott95izZo1ACiKgtvtZnJyksLCQjRN
      mx0SMk0T27axLAvTNEmlUjf7vIQMWbbNy/95lH2n+/n1J5tZs6QMQyT6u69VFfn5tSea+fuf
      HOQffrKfLzzRTHG+f66bJWRBxhvBXC4X+/btY+fOnUiSxBNPPEFzc/M1H+fxeFixYgU+n4/J
      yUkkSSKRSBAOhykoKGBqaopYLDZbDWzmq2maqKqK2y2qTGWTZdn8x/aTfNDax3MbFvH4gw0i
      yZsAwPrmasamk3z/Fyf4s3/9gCcfque59YtuuXCNML9kvL7Ptm18Ph9f+tKXUBQlo4LtY2Nj
      7Nu3D4C1a9cSCAT44IMPyM/PZ/HixRw6dIh9+/axdOnSm38Gwk2xLJs3drfz+u52Ni6v5qXN
      S0TnL8xSZJnn1i9iYXk+P/mgjR/vOMX5gfDsxjHh3pDRJDCkV++8/PLLJJPJ9Dbyxx5j2bJl
      132cbduzxd4hnVV0pui74zjYtn1ZMBGTwNllWTZv7jvHv//8OMvqivnd51eLClHCVSVSBm/t
      O8cPt5+ktjSPj29azOLqkAgE94CMAoBpmoyOjpJMJpm5eygUIhgMZqVRIgBkTyyh89M9Z3ht
      VxuNVYV87cWHxPiucF2mZbPnRC8/3nGKgfEIxXl+cnxuAl4XVcVBmmqLqCgKUhHKmeumCjcg
      owAQjUZ58803mZ6enr1t06ZNNDY2ZqVRIgBkR9fQJD/afpK9J/tYt7SK33h6BUV5ovMXMmM7
      DpORJO09YxzvHOH8QDhdpCaWJBxJkhfw8ODictY0VdJQWUCOT8zhzXcZDwHdSSIA3D6O4xBN
      6Lyzv4P//PAsKd3k+Q2NfGLTYpEDXrgljuOQMiwmphP0DE/x4ak+2nvGGJtKsKAsjycfqqex
      KkQozyfSicxTGQcA27YZGxsjEAjg9Xqzuk5cBIDbw7RsuoYm+cefHqZraJKWRWV8fGMjDZWF
      V6wdKwi3wnEcJqNJ9p7sY9uBDgbGIrg0heriXGpKc1m2oJjasjy2cBowAAAgAElEQVTyAh78
      HtdcN1fgBgKAYRi89957dHV1EQgEePjhh6msrMxKo0QAuDUzZ/3vHurk1R2n8LhVPvtYM5tX
      1IiVPsIdEYmnONs3wZnecY6fH2FwPEIkruPSZCqLgjTVFrN5RTWVRUE09forCoXsuKErgJMn
      T3LmzBn6+/t55JFHMloFdDNEALh5Sd2ke3iKf37zCGd6x1m/rIpPbV1KdUnuXDdNuE9Zlk04
      mqR3ZIquwUkOnRnk/EAYB1jXVMnWlgXUluaR4xNXBbeT4zhYtoNp2diOg2WlN9zKkoQkS8hI
      N7YM9JVXXiGZTNLU1ERzczN5ednJEyICwI1xHIdY0uB09xjbDnTQ2jFMXsDDM+sa+NhasblL
      mF8s26ajP8zb+85x9NwQk9EktaV5bFlVy+LqEOWhHHweTZSozJBl2SQNi2TKYDKWYiQcY3Qy
      xtBElInpBNGEjmnZJC8U/FFkGU2VUWQ58wDgOA69vb0cOXKE3bt38/zzz7Nx48asPCERAK7P
      cRx002JwPMqBtgE+PNnH+YEwxfl+Hlu9gEdaFoi1/cK8F4mn2NXaw/tHu+kemiRlWFQU5dBc
      V8KqhlIWV4fwutX7dpjIcRwcJx00Z87mo3GdqViS7uEpxqfi9I1FGByLMDgeJaEbqIqMqqQ7
      eK9bpTjfj0tVZuddDMtCNywM076xK4AdO3aQn59PU1MTHo8no93AN0MEgCtznPQfwMBYhANt
      Axw+O8jZ3gkURaK+vIBNy6vZ0Fwllt8Jdx3bdugdmeLQmUFOdY1yonME3bBwaQrL60tYXl/C
      wytq8LhUVEW+K5MVXtyZ27aD5TgkUyaReIqpWIpwJIFh2sSSOrppE0voxJMGhmkRTehMx3XG
      puKEIwkcQJVlZFkix+eitCDAgrJ8qktyCeV6Kcrzk+t3X7cvyDgAWJbF66+/Tnt7Oxs3bsTl
      cs0meLvdRAC4lOM4JHWTfaf6ee9IJ6e7xpAkqCwK8kjLAlYsLKGqWIzxC/eOlG5y+OwQB9sG
      OHRmgKloClmWWFIToqGygIpQkFCuj/wcD0G/G59HQ0JKj29L6fxlpP+748HCdhwc28F2HAzT
      ZnQyRvfwFJ2Dk4QjCcan4kxEkoQjCWJJI91e0u3mQnslAAlcqoJLU/C5NUK5PgpzfVQXBynK
      91NWECA/x0tB8PqJOa8m4wAwOTnJ22+/TUVFBbZtMzU1xfPPP3/Tv/haRAC4cLYADIxG2He6
      n/cOd9I3Ok1Jvp/nNiyiZVEZFaHs7MQWhPlENy2Odwxzpm+CY2eH6BqeJJkyubjjkmUJn1uj
      IOgl6HORG/Dgd2v4PNrsFYPPk05kF/C40FSZ/Bwvmirj97pwa9cfzXBr6asP3bBmh1FiSYNw
      JJE+Y0/qxBIGY1NxhsYjjEcSDI1HsWwHCVAUmaDPTXG+P92ZB72E8nz4PRpBv4e8gBtNVfC7
      NTRVwefRcGXQrltxQ3MAb731Fjt37sTv9/PFL36R8vLyW/rltm1jmiYu16Wz//dzAEjpJmf6
      xjnTO8EHx3s4PxBGVWQaqwt54oF61i2rxK2JTTXC/SueNBifjjM2lWAykmA6niIS14klDSam
      40zHUoSjSWJJg3jSwLTubKH7oM9NWShAKOijqjhIftBLQ0UBVcW5We/Qb1RGASCVStHe3n5J
      LqC6ujqKiopu+hfH43F27NiBoiiUl5dfklr6fgkAtp1er981NMmZ3nFOdY/S3jNOLKnjdWlU
      l+Ty8MoaWhrKKM73f3RpKwjCJS7uxma+dZj9Bod04IB0ASTDtAhHkximRSxhkDLM6/6OpG5h
      WjZuTUFT5fTEqteF36N99NXjwu1SLhvSma8yOpV0HId4PE48HmdsbIx3332XL3zhC7cUAEZG
      RliwYAF1dXXs3r37po8zXyVSBoZpk0gZxFMGU7EU8aRBNKETTej0jkxztm+c4YkYtuPg0hQC
      HhcPLi5naW0RqxvLCfrdKLI0r/+ABGE+uPgz8tG3l35ugn73JV9r7kTD5rmMAoDH42HBggX8
      /Oc/J5lM8id/8ie3vAvYtm1UVUVV1dmKYPPFSDhGx0AYAN0wSaRMDMsikTSxHYd4yriwjCo9
      Bpi+X/r7WDJ9KZoeo0zP+tuOg2076fTXjoMsSZQUBCgvzGFNUyWLqwpZUJ6P36Ph1lSRpkEQ
      hDsiowAwNjbGn/7pn1JRUUFlZSU7duxg/fr1NDQ03PQv9nq99Pb2Eo1GL6kENlMScnp6Go/H
      gyRJRCIRgsEglmWRSCQIBAIYhoFhGPh8PlKpFI7j4PF4SCQSs0XrY7EYbrcbVVWJRCL4/X5k
      WWZ6eppgMIht28TjcQKBAKZpous6bo+Xb79+iCMdo0B6mMZ2HCSJ2bF3l6qkl6OpMt4LSa5U
      RcbjVskLBPG4VYI+F4oEfo+Gpkj4PQoFQT8uxcHnVvH7PJi6js/rRtM0otEpUo4XU1eYnp4m
      JycnvcErFiMnJ2e2RKbf70fXdSzLwuv1ztZncLvdxONxNE27cLwoXq8XRfnoeJDO7JqTk4Nl
      WSSTSfx+P4ZhYJomXq93tgyn2+0mkUigqiqaphGLxWaX/kYiEQKBAMBtfW/u9Hvt8/nQdR3b
      tvF4PCSTSWRZxuVyEY/HcblcqKpKNBrF5/NddrwrvTepVIpUKiVe7zv0et/sZ+F2f7bu1s9q
      xvUAJiYmMM2Pxslyc3Px+28+lbBlWRw+fJjJyUmWL19+yXj/XM8BpGfxowB43Sp+jwtFkZDl
      9I5aWQJZli98TZ+tS5KEIqeXoSkX1ucKgiDMZ3OaDjq9McKZ7VhnzHUAEARBuB9cNgQ0NTU1
      52PylmURj8cJh8Nz2g5BEIR72WUBQNM0rndRcPr0aRzHoampKSuNsiwLVVUv2x8gCIIg3D6X
      BQCf7/oJxOrq6gBuaQ7gWkzTJJFIZO34giAIQoargH7Z8PAwtm1TUFBwu9sjCIIg3CEZBYDJ
      yUmOHj2KaZrIsozjOCxevDjbbRMEQRCyKKNKIYqioCgK+/btw+/3E4lEOHXqVLbbJgiCIGRR
      RgEgJyeHBx98kPz8fPx+Px6PB13Xs902QRAEIYsyrhXo8Xh47rnnOHr0KKlUKmvVwARBEIQ7
      I+MAYFkWra2tDA8PU1JSwrlz57LZLkEQBCHLMl4FFI1GmZycpKWlZTYzqCAIgnD3yvgKIBAI
      kJOTw1tvvcWuXbsuyd8vCIIg3H0yvgKwLIuqqiq++c1vMjU1xcDAQDbbJQiCIGRZxgVh9uzZ
      w9tvv01fXx+9vb1UV1ezZMmSbLdPEARByJKMrwDKy8tZvHgxdXV1NDU1UVtbm8VmCYIgCNmW
      0RyAJElUVlYSDAZpampC0zT279+f7bYJgiAIWZTxFYAkSQwODtLV1cWZM2dQlPlV3V4QBEG4
      MRkHgJmNYDt37qS4uJhNmzZd8/4z1cNmyj3OsG0bSUoXOp8p/6hp2k00XRAE4f6U1E1M0yZl
      mKQMC9OymYqlMC2LZMpEN20SKYN4ysAwLaKJdL1yw7QJRxIYFx6bcQBwHIdTp04xNDREXV0d
      J0+epKWl5Yr3nZycZNeuXUiSxNq1awmFQgB0dnZy8OBBNm/eTG5uLjt37gSgurpaJJcTBOGu
      ZJjpDhggkUqf+FqWjW5aWLaDblqkdBPbcUgZFvaF20zLJqmb6LqFYdnoholh2sSS6TQ7saRB
      NKHPdtamZRNLGrPHcpyPqio6Dli2g4ODbTs4pOuZq4qMqsh43Spel4aqyuT4XHhcCjk+V+YB
      IBKJMDY2RktLC6Zp0t/ff9UAcPLkSTZv3oxt27S1tc0GgNLSUhoaGrBtm+HhYSoqKqivr2fP
      nj0iAAiCcE3JlImDg2U7GKZFyrBwnPTPumFhO5d+BWY7YfOiTjqWMAAwrPQxABIpA/tCHaxE
      ysC2HRIpE+tCdcSkbmJZ6c42njJwgFgi3VE7DqS73HQnnL7tow7adtKdMvBLHXf6Z02RUS50
      1Koi43Glu2WvW539PuBxoSgylUUqmqrgdV/46krfR1MV/F4Nv8eFz63i1lT8Xg2XpiBxoV65
      nB55URUZSQJZkjIPAIFAgEAgwM6dO3G5XHzmM5+56n11Xcfr9aZfuGRy9nav1zs7JGRZFi6X
      C03TZktQmqY5OyxkmuZs1XtBEO5OKd0kaaTPgONJg5RhoZsWiZRBLGmQ1NNDGPGkgWHZxJMG
      8ZSZPkM27fQZccrAMO3ZzthxHGybi36e6VgvPfuFi26/0OECuLX0/OVMh5u+TUWS0v/u0hRk
      SUJTFWQ5faNLlVFVGQnI8bsuPD6IKqfvp6np4/jcGpIEiiLj1hQUWcKjKXjcKrIk4XGpKLKE
      W1NRVRmfS0WSJWQpPc8qS+nOGtLHmP1eTnfaiizPtunmOOBY4IBNhnMA58+fJxqNEgwG+cY3
      voGmades1pWbm8vIyAiO45CXl3fF+QCPx8Pg4CCxWGz29pmvpmmiqiput/tmn6UgCLeZbTuk
      DHO2406kDKIJg6loEt20mIwkiSV1hsMxYkmDWEInnjKwLBvzwlm7ZTvpny0b23FwqQqqKqc7
      RFnG7VJwawqqIqPIMi6XSo7fjarI+D0aSBLahc7V69aQZQlFltNnwm519kzX60rPK7pdCpqi
      4NI+6qSVC52+fKHDTd8mATOdrTTb2c50tTNnz9IvP/6WOuO5l1EAcLlcvP3223R3d9PR0QHA
      pk2brjps09TUxK5du3Achw0bNjA6OorjOIyNjdHT08PAwAAtLS2kUik+/PBDli5devuekSAI
      NyVlmEQTOlPRFNPxFFPRFGNTcUbCMabj6e/jSQPdsDCs9Jm8blgYpo1LU/C5Ndyags+j4VIV
      cnxuKouDaIpCfo6HXL8br0fD61IJ+t0EvK7Zs1xVkdNDEhfOymVZmu1gZ4KBcPtJzvUqwJO+
      5JqcnOT48eOz9YBnagNczcywjnyNNy59yWZftqTUNE3Gx8cpKSnJ6EkIgpAZx0mPbU/FkkxM
      J+gbnWYkHKNzcJKJSIJEyiSW1IknDaQLQxYBrwufR8OjKQT9HnJ8Lorz/eT63RTkeMkNeNBm
      zuIV+ZKz7pkhFmF+yugKQJIkvF4vJ0+e5NChQwA8/vjjLFu27KqPuVbHf/FxxX4CQciOmcnQ
      cCTB0ESU/tEI5wfDnB8IE4nrTEWTKEp6VUjQ5yaU56M4z095KIeCHC+hXB8uTcHv0fC60hOK
      Lk18Xu8lN5QMTlVVvvzlLyPLsli7LwjzjGnaRJM6E9MJzvVPcLZvgq6hSSamE0TiKVRFpiDH
      S3GBnwcay6krz6cw10fQ504Pz7hVJOnuHtMWbkzGAUDTNBKJBN/61reQZZnHHnvsmlcAgiBk
      j2076fH6WJKhiSjtPeN0DIQZn4ozPp3AtGxyfC7KCnPYuqqWhRUFhHJ9FOX5yA145rr5wjyR
      0RyAZVmEw+HZ1TwAwWAQn8+XlUaJOQBBSHMcB8O0iafSq2oGxiO094zTPTzF6GSM4YkYumnh
      c2sUBL0sKMtjUWUhNWV5FOf5KMq7+jydIGR0BZBIJNi2bRtTU1Oztz388MM0NTVlrWGCcL+x
      LDu9Jj5lMBlNMjAWoWd4irN9E4xPp1fjWLaD58IqmvLCAKsXlbGoqpCS/ABVxcHZJYqCkImM
      rgDuNHEFINzrLNtGNyxiCYOhiSjdw1Oc6R1naCLK0ESUqVgS14Udn/k5XurK81lQlk9pvp/C
      XB+lBQF8HjEPJ9yajK4AbNvGMIxLH6iqYgWPIGRoJu/L8ESUtp5xzvWNMzgRZWAsQjSh49IU
      gn43pfkBHlu9gOqSXPJzvJQX5hDKy85QqyBkFAAGBwf50Y9+dMkcwBNPPMHy5cuz1jBBuFvN
      pB4wTJuBsQhtPWOc6Bzh/ECY0ck4siThdassKMvnyYfqqS7Jo7o4SFlhjlhmKdxRGQ8BOY6D
      YRgkEgls28bn82UtVYMYAhLuRukEYgbHO0fYc7yX84Nh+kcjyLJEQdBLQ2UBKxeWUlUcpKGy
      UGySEuZcxstADcPgb//2b+ns7KSkpIRNmzaxZcuWLDZNEOa3mYyOo1Nxjp0b4kTnCMc7RghH
      E7g1lcXVIV7Y0Eh9RQG1pXl3fd4Y4d6TcQAwTZPS0lKWLl3K5OQkkUgkm+0ShHnJsmxGJmOc
      7h5j78k+uoYmGZ+KE8rzsbCigM893kxzXTH5QS8uVQznCPPbDVUEW7duHYWFhRw5coSFCxde
      8/5XywVkWRayLIsdh8Jdw7RshieinO2bYPeJXs4PhJmKJQnl+lhSE+LBxnIaq0OEcn3iLF+4
      q2QUABzHYXR0lF27dvHss8+Sl5fHsWPHqKysvOL9E4kEu3fvxnEc1q5dS05ODpCuCNbR0UEw
      GGT58uV88MEHswXnGxsbb9+zEoRbZJgWo5NxTnSOcLBtgLN940STBpVFQR5aUs66pVVUFKVz
      5oiTGeFulfEVwO7duzl06BCpVArbtnniiSeuet8TJ07Mpolob2/ngQceAODcuXNs2rSJ1tZW
      enp6cLlcPPTQQyLvvzDnHMchljQYGItwsnOE4xdW7SRTJmWFATYtr+HBJen8OX6Pa66bKwi3
      RcbZQF944QUWL15MLBYjJyeHqqqqq94/Go1SUFAAwOnTp2dvdxwHt9tNTk4OhmFg2zbvvfce
      NTU1LF26VFQEE+4ow7SIxHUGJ6IcPTfC6e4xuoenkGWJsoIA65dW8GBjGbVlefjcM5uuHPF3
      KdwzbmgV0M6dO6mrq6OtrY3x8XE2bNhwxft6vV4ikQiO4+Dz+WbnA2aOE4/HKSsro7GxEV3X
      ef/991m6dKmoCCZklWWnSw72j6bX5p/uHuNc/wThSIKg301VcS4vbl7C8voSFlYUiDX5wj3v
      hgKALMusWrWKrq4uRkdHr3rfpqYmduzYAcDGjRsZHBzEtm3KysrYvn07qqpSXV3N9u3bcRyH
      0tLSW34igvDLbMchpZtE4jrtvWMcOD1A52CYvrEILlWhKM9Hc10xqxpKaawKUVoYmOsmC8Id
      ldFGsJlhmdOnT7N3716CwSDPPvvs7OTulVypDjCkC8arqoosy7PH/eXaAmIjmHAzHMfBsh2m
      okl6RqY4cmaIk12j9Aynkxh63SqLqgppWVRGXXk+CysKxGYs4b6WUQAYHR1lz549PPfccx89
      UJKytvpBBAAhUzNVr3qGpzjROcLp7lFaO0bQDQu/V6OqKJdVDaU01xdTWRQkxyeGFQVhRkZD
      QJZlsXPnzksmdJ9++mlWrFiRtYYJwpXM7L6NxFN0Dk5y6MwAh9oH6R+LoCgSFaEgj7QsoKm2
      iNWLykTGTEG4hoznAFasWMGnP/3pjx6oZvxQQbgtxqbiHGgb4FD7AMfPj5DUTfwejaW1RXxs
      bQMrF5ZSWRyc62YKwl0joyGgVCrF2NgYFRUVd6JNYghIANLLNM/2TbD7eA+t50foG5lGkqAo
      z09TbYiHllSwqqEMt6aIzViCcBNuqiDMzEPEHIBwO+mmxdB4lOPnhzlydojWjmEM00aSoLE6
      xOpFZbQsKqO6JBdZlpBFpy8ItyTjcZxoNMprr73G5z//ebq7uzl//jyPPPJINtsm3OMcx2Ek
      HONg+wADYxH2nupjOpbeZJUf8LBpeTWrGspYXl+C162iKiKHlCDcThkHAE3TiEQi7N27l56e
      nqvmARKEq0kZJuNTCU51jdI5GObI2SEmIgmSukl+jpcl1SHqK/JpWVRGSX4At0tBkcUyTUHI
      loyHgGb2AQwPD1NQUEBzc3PWJoLFENC9wbLTFbFOdI7SPTTJ4TODRBM6Cd2kMOilqijI0rpi
      GisLqSnNw+fRxLp8QbiDMu7Bbdvm0KFDPPbYY3dsMli4u5iWzdBElHN9E5ztG+fouWGmYkni
      SYPCXB+VRUGWLihiUWUh1SW5eN0qbk2sJhOEuZLxpy+9/trhn/7pnygsLGTLli00NTVls23C
      PGdaNoPjEbqHpzjdNcq5/jCD4xGiSZ2iXD/loRy2ttTSUFFAVXEufq8mOnxBmEduaA7gkUce
      oaOjg4qKCvLy8rLZLmGeMUyLWMJgKBylc3CS8wNhTnePEonrxJI6OT43NSW5PP5AHcvqiqku
      ziXgc4kOXxDmsYw/nclkknfffRfbtlEUhc7OTp588skr3tdxHM6fP4/jOCxYsABFSWdVjMVi
      9Pb2kp+fT3FxMYODg0QiEaqrq/F6vbfnGQm3xDAtkrpJOJpkfCrBSDhKz8g05/snCEeTTMVS
      mJZNYdBLaUGAratqqS8voLQgQH7QIzp8QbiL3NAcgCRJuFwu2tvbr1kSsrOzk/Hx8dmfZ+57
      +PBhSktLOXnyJMlkks7OTkpLS2ltbWXNmjW38DSETFiWjX6hg48lDZIpk0gixWg4TjiapG90
      muGJKAndJBJLEUnouFSFXL+b/KCX5fUlNFalJ2xz/W5yAx5R91YQ7mIZBwCXy8XKlSs5e/Ys
      5eXlrF279qr37enpYe3atTiOw/79+2cDQCKRYOHChei6Tnd3N+Xl5dTV1fH+++/f+jO5B+mm
      BYBtO1i2feFrei7GMG1MK/2/bTsYloVuWMRTBindIpbUiSYMJqNJYkmdcCRJUjcxDIuEbhJL
      6iR1k5Ru4dIUfG4Nv1cj4HWxoDSP6pJcKkI5FOX7yfW7yQt40ERnLwj3lIwCgGmafP/732d8
      fJza2loeffTRa27IkSRpdtL4l+938e0z38+wbRvHcbBtG13X0XUdSNci0DQtne7XslBV9ZLv
      Zx6nKAqWZSFJErIsY5omipJOEzBzjIuPd6VjK6rKsY4R2nrGuVWmZZPSrav+u+04JFLGRa8N
      xJL67M+6kX6sdVEAMC17NgOmYdkYpoVtO6QMC9OyUWQJRZaQJdBUBZem4FgWPq8Lj0vFpUBF
      eS5FuT5yvCqloVw8moLPo1IQ9OHRFBRFRpblS15LQ09hW1d/La/2ftzse3O73+s78bczc7yL
      U5xn8voAl73eN/J85uPrDR8Vdsr26329493sa3nx8SzLQpbl23q8+fBeZxQAwuEwpmnye7/3
      e3zrW9+affDVVFVVceLECQDKy8uZnp4GwOPx0NXVxfDwMAsXLqSzsxNZlvH5fLOPnQkKlmXN
      PinDMGaf8Exhmpl/n3nCM0HFNE0kSUJV1dmaBDP3mXkDZ47nOM7sizVzPCSJvSd6aT0/kslL
      c02SlO6Mr3EPVEW66s8ztWc9LgWX5kZVZNyags+joakKHpeK16WiqTJ+jyt9uyKhKgqKDG5N
      wetWsS2TvBwfiiyRSqXweDyzr6Xb7Z597i6XhmmamKaNqqqzrxOk/3hmXsuZ92Dm9qu9NzPv
      x8XvzcWP++Xj3cx7PXO8i9/rKx3PcZys/e3Ytj17n/TrZ97Q6/P/t3emwXFd14H+et+ABhr7
      DoIANxAkIZESxVUkQ9KircSWbTmRYyflSnk8NZM4M0nV1Mw/Vc3U/MpUpSrjUew4iVyWLVl2
      bEuy4kWUKO6kAGLfQex7o9H7/vq9Nz+a3QYlimyAAJsk7vensfS799z37rvn3nPOPRd4ZO73
      ne5Ptu/3p5WXGhwlSUqnr/+4fB8vT5bltLl7eXmp76bKW972O5W3vO2p8mRZXvNnnRpn7vWs
      P628jM8DeOWVVygsLEzb/0+ePPmpYaCqqjIwMICqqmzbto1gMJh+GKOjoxQVFVFRUcHk5CQ+
      n4+GhobblEC2N4LFpAS+4P2f+6rVajDcZWOTRqO57dhBDWAyCieqQCB4MGSkAGRZxu/3pzUY
      QE5ODmazeV2EyrYCEAgEgo3AJxTA/Pz8bQP9nYhGo6iqum6hm4qiEIlEsNls61K+QCAQCFaZ
      DjoV419fX78eMokVgEAgEDwAhMFZIFhDUkdWqqrK8pmVRgPadTxHWyBYDRkpgI8vEpY7bAWC
      jUJqUFdu7cXwBqN4AlGc3hDBcBxfKIY7ECEWTxCOSUgJJX2t1aSn0G4lP8dMfaWDrdWFGA06
      oRQEWSUjBRAIBHjzzTfxer3pv50+fZqysrJ1E0wgyCapSY+qQjASZ3TWw+DUErMuP+PzPly+
      MMFI/BPXWUx6zEY9NrPxtgivWZfEld5pFCVZrk6roXFTMfsbqzjUVI0j1ywUgeCBk5EPIBAI
      8NOf/hRZltm+fTt79uzBZrOl41jXGuEDEGQLWVGYWQwwPO2m4+YcQ1Nu5t3B9P/zc8xUFOWy
      qSyfquJcHLkWivOt5FpM2G0mrGbDp5YtJWSW/BGmnD66Rpz0jjkZmfWg1Wp4cms5Lz7byPba
      ogfRTIEAyFABpDZnSZJEe3s7b7zxBi+++CKHDh1aF6GEAhCsNwlZwe2P4AtFmXb6mVr0M7cU
      ZHDKhccfBcBqNrCtupBtNYVsqy6irjwfm8V4y2xzf2diq6qKcutIzF9dGeJc+zgxSeZQUzV/
      8bknyMtZnxBrgWA5GSmAWCzGhQsXmJiYQK/X88QTT7Bjxw6MRuO6CCUUgGA1xOIJXL4wC54Q
      kZiELxQjHJWIJ2R8wSjBiMSiN0QgEscTiCDLyUFYVhTMRj3F+TZqS/PYVlPEjpoiqkrs6HXa
      dT+lTFFUFr0h3r48yHuto9htJr52ajfHnti0rvUKBBkpgKWlJV555RVMJhMmkwmtVsvx48fZ
      uXPnugglFIAgEyIxidFZL30Ti3QMzzM250G+lS9JVZOJ8/Q6LQa9lhyLEavJgN1mIsdipMBu
      oSTfRn6umepiO0X5VkwG/QMZ8D8NWVEYm/Xy2ntd9Iw6OXBrNZAvVgOCdSIjBaAoCrFYLJ24
      CsBkMokzgQVZYcbl56O+GS50TjDjCqDRaKgtzWNzhYOKolwqi3KxmY04cs0YDbp0TiadVpv8
      1CU/H1anazgq8fML/bx9eZDSghy+/aWn2VJVmG2xBI8hq9oIthJSxa/kZRMKQPBxZFlhfMHL
      r64M0zY0Rzwh01BZwN6t5Ty1vQJHrgWzSY/2IR3UV0pCVqIN2awAACAASURBVOgYnucf32ol
      HJP4kz9o4o8Obcu2WILHjIwUwNzcHL/85S9xOp0UFRURiUQ4duwY+/btu+t1Xq+XK1euUFdX
      x44dO+js7GRmZob8/Hzq6+txOp3U19fT2trKwYMH0ysKoQAEy3F5w/z8Qj+XeiaRZZWDTVX8
      wZObqS3Lw2L69KibRx1VVZlxBXj11x20Dc1xdE8tf/7cHhy54vQ8wdqQkQ2nuLiYL3zhC7z1
      1lu89NJLTE1NMTExcc/rTCYT9fX16dxCXq+XxsZGqqqqCAQCBAIB2traqKurWzdzkuDRJRKT
      uNA5wS8vDRIIx3imsYozz2yhtjQva3b6B4lGo6Gq2M7ffOUA/3a+j7evDDE25+Uvv/gUDZUF
      D60JS/DokLEJSJZl3nzzTSKRCKFQiAMHDtxzBQAwPT2N3++nsbGRoaEhFhcX8Xg8NDc38+GH
      H2K1Wvn85z+PTqcjkUikD9Rwu90UFYmY6I3K6JyXty8PcWNonqpiO189uZPGmkJ0G2DgvxOy
      otI+PM+//qaLWDzBFw5v5fgTtekzIwSC1bAiH4DT6aStrY2qqiqqq6vJy8u75zXLFUAwGMRm
      s3H9+nVyc3MJhUIYDAYMBgNNTU3pa4QJaOMSiUlc75vhh7/rQlYU/vhEEwd3Vom4+FtMLvh4
      9dcddNycZ3d9KX96ajf1FQ60dz14SCC4MxkrgGg0yuuvv040GqWxsZFYLMbp06fves3ExAR9
      fX1IksTu3btxuVz4fD70ej07d+5kcXGRhoYGWltbaW5uTqeXFgpg46GqKrOuAD8+28NH/TPs
      aSjla6d2U1OW99g4dteKcFTi7I1R/u18P6qq8uVnGzmyp0b4BgQrJmMFEAwG+dnPfobZbCYW
      i1FZWcnJkydXXOHy8yrv9h2hADYOUkLmYtckP/mgl0A4xtdPJzdBPc4O3rVgeNrNT8/10jmy
      QFlBDqef2szBpmqhCAQZk7ECUFWVnp4eurq6yM3N5ciRIzgcjnURSiiAjYGqqvhCMX74207O
      d05QW5rHN848wc66YuHgzBApIXO9b4afX+hnetFPicPGiSfr2LutnIrCXAz69cnXJXg8yDgX
      UCAQ4P333+fMmTPMzMwwNja2qhVAJggF8PijqioT8z5eeauV8Xkvzz1dzxef3UGeTdj6V0M4
      JtE6MMsHbWPcnHEjywo7aovZtbmE5i1lFOVZybWasi2m4CEjYwXw+uuvc+7cORobG5EkiTNn
      zrBr1651EUoogMebhKxwY3CW77/bDsCfntwl8t6sEal0Ehe6JmgbmsPtjyArKhVFuWytKmBL
      VSH1lQ7yc8zYraYNG1UlSJKxCSgej9PS0sLBgweJRCJIkpRRFNBqEArg8SUuyfzy0gBvXx4k
      P8fM33zlAJsr1seUuNFJyAqTCz66Rxe4MTjHxIKPSExCVlQcuWa2VBXSUOlga3URNaV52MyG
      DbG/QvB7Mt59FY1GGRoa4uDBgywsLDAwMMCZM2fWUzbBY0Y0luCND3p499owzQ1l/OUXnxIm
      n3VEr9OyucLB5goHf3hoG+GoxMS8l5szHqYX/fSMOukYnicaT+Cwm2mqK2FrVSH7Gyux20wY
      9XcP1hA8+mS8AkgkErz22mtotVrcbjcnT568LXZ/LRErgMcPXzDK9965wbW+Gc7sb+Arx3di
      twmbdLZZcAfpG1+kb3yRG0Nz+EIxVFVlW00Re7eWc+yJTeTZTMKZ/JiyoiigSCRCW1sblZWV
      lJWVpeP21xqhAB4fVFVlyRfhu+/coG1oji8/u4MXj+8UpoaHECkhMzDp4nrfDJ03F5h2+dEA
      zQ1lnHmmgd2bS9PZVQWPBxkrgFgsxquvvkogEGDfvn3E4/F7bgSDT2YDzSQ7qFAAjweqqrLo
      DfOPb7XSP+Him3/4JCeerMu2WIIMSMgKg5MurvVNc7FrEk8gSkNlAZ95up7jT2xCr9MKRfAY
      kLECSB0MX1pait/vx+Fw3NMHoKoqfX19OBwOKioqcLlcdHd3U1FRQU1NDR6Ph7KyMoaHh6mv
      rxfZQB8zppx+/s9PrrDgCfGXLzzFoV012RZJsApkWeFK7zRvXx5kaGqJUoeNP/vMHvY3VgrT
      0CNORk5gSZIwGo089dRTXL58meLiYo4dO3bP6+bn5/F4PABUVFTQ2dnJ008/TWdnJ3q9Hrfb
      jd/vJxQKrdsB84Ls4PSE+Od323DeGvwPNlVnWyTBKtHptBzeVc2Bxirahuf4t/P9/N0bV6iv
      LOClk03s21aRbREFqyQjBdDX18fg4CA+n48vf/nLQGYHvJSVlSHLMn6/H0hmFM3JyaGwsJBg
      MMjg4GA6G6hGo0GW5XQ20EQiQTwev4+mCbKFJxDllbfaGJpe4j8838y+raVIkpRtsQRrQHN9
      MY01BVzrm+a1s7387x9e5JmdVfz56V04ckVE16NGRgpgy5YtDAwM0NHRkbbhHz16lO3bt9/1
      ujspCUVRkCQJvV7Ppk2biEajuFwuSktL0Wq1aLVJ56BOp8NgELlgHjX8oRjffaedgSkX//nW
      zF8kc3u8MBgMnNhbz9ON1fzy0iDvXh2md8zJX3z2CY7sqc22eIIVkLEPQFEU+vv7CQaDANTV
      1VFSUnLXa+bn5+nt7SUcDrNv3z4mJiZQFAW/38+ePXuYnp5m69atXL16lePHj2MyJcMChQ/g
      0SQUjfN/f97CR/0zfOuP9vIHe+vQaUW0z+OMrCj0T7j413/vYGLBy+FdNXzz+SexWcQ5BY8C
      GSsAv9/Pd7/7XZqbm9FoNOzYsYPKysq7XhOLxYhEIgCYzWZ0Oh0ejwebzYbFYkn7FqLRKCaT
      KT37Fwrg0SMhK/zTO22cvTHKV4438qVnG0Wo5wZBVVVCUYmfn+/n7SuDVBXb+eYf7mVHbZFY
      /T3kZPyGmkwmTCYThYWFFBUVYTbf295nMpnIz88nPz8fs9mMwWCgpKQEm82GVqvFZDKh0Wiw
      WCzpwV/w6JGQFX58tpsP2sb44tEdfOHIdjH4byA0Gg05FiNfO72b//7VwwQjcf7XD85ztmWU
      hKxkWzzBXcj4LdXpdDQ3NzM/P8/c3BzhcHg95RI8IqQG/19dGeK5/fV86dkdmAzifOeNiFar
      Yd/2Cv7nXxxnS1Uh3/vVDV79dQf+UCzbogk+hYwUQDgc5ty5c7jdbuLxOLFYDEURmn2jk5AV
      fnlxgF9dGWL/jkr++EQTZqMY/Dc65YW5/LevHuIzTzfwm49u8ndvXGHWFci2WII7kJEPIB6P
      MzQ0dFtYZk1Nzbod2i58AA8/qcH/Jx/08sSWMv7TC0+RL87tFSxDSsh82D7Oj852YzUZ+MZn
      m3lya7kIDHiIWNGh8A8KoQAebhKywsWuCb7zixb21JfyV1/aLwZ/wafSeXOeV3/dwaIvzOcP
      bePMM1vIEVFCDwUZq2JJkuju7gbA5/MxODi4bkIJHl6S5/dO8E/vtLF7cynf/rIY/AV3Z09D
      Gf/ja0fYtbmUn5zr5f/9ooW5JWESehjQvfzyyy/f60uqqtLS0sLbb78NQEtLC7FYjC1btqyL
      UIqiEIlEyMnJWZfyBasjnpD596vDvPa7brZWF/Jfv3JA5PMXZITNYmTv1nJyrSY+aB/jo/5Z
      bGYDFcW5wiSURTL22JnNZkpKSrBYLDQ1Nd1zF7Dg8SIuyfzqyhCvf9DDzk3F/M1XDoh8/oIV
      YTEZ+NyBLVQW5fLD33XxylutdI0s8OLxRsoLc7Mt3oYkIwWg0WhoampidnaW3t5eAKxWK9u2
      bVtRZZFIhHA4jE6nw2azIcsyJpOJcDiM1WoV6WUfUqKxBL+42M/PLw7Q3FDKX31xvxj8BatC
      p9Wyd1sFDZUFvHmul/fbxhiYcvHZZ7bw7J5acXD9A2ZFO4F/8IMf8OKLL6LRaLDb7Ss+EOb6
      9etIkkRBQQGFhYVMTk5SV1dHZ2cnx44dS2cEFU7ghwNVVfEGo/zgN51c7Jrk5L7NfPVkkzD7
      CNYERVHpHXfy5rk++sYXqS6x89lntnCwqVo4iR8QKzoU/u///u8pLCxEp9Nx8OBBtm7duqLK
      zp49S2FhIXV1dSiKQnt7O/F4nIMHD5KXl5dONJdSAPfKNSRYXyYWfHzvnTZGZtyc2d/A107v
      RqcVqzTB2iIlZM61j/Orq8PMugJUFdv5zNP1PNu8CYtJj+hx68eKksE5nU68Xi9ms5mCggLs
      dvuKKnO73SwtLdHV1UVzczPt7e0YDAaee+45TCbTbemg3W73uu0zENydeEKmdWCWH7/fi6zA
      1041caipKttiCR5zIvEE13pneefqEDOuAEV2C80NJZx4so7a0jyRXmQdyFgBSJLEj370I6am
      pjhw4AAAJ0+eXFFlc3NzFBYW0traisPhIBgMUlxczNTUFIcPH077AIQJKDuoqoovFONHv+vi
      /fYxakry+C9ffoZN5fnZFk2wgYjGE3zUP8NH/TNc7Z1Go4E99aXs3VbBgZ1V2K0mtFqN8Bmu
      ARlHAaWct4cPHyYUCq2qMr/fz8DAAMXFxdTW1uLz+dKHxsRisYwSzAnWB1VVaRmY5acf9jEy
      4+ZzB7byleONwikneOCYjXqO7qnlyO4aZpcCXO2Z5lz7ON975wb//G47u+tLeHp7JQeaqrHb
      TGjI7IAqwSdZ0U7g1tZWfvvb31JUVMRLL720YhNQpogVwINl0RvizXN9fNA2RoHdwn/8o73s
      Fcf8CR4y+icWOds6SufIAoveMDqthh21xRzYWcXTOyopcdiyLeIjR8YKIBqN8uqrr/L1r399
      3UM2hQJ4MCQSCr/56CY//bCPQDjGmWe28CcnmsixGMSMSvBQoqoqqgrTi34ud0/SMjDLyKwH
      vU5LVbGdJ7aW8URDGTvrSoTPIANW5AP4/ve/z/T0NPX19Rw+fHjFUUCZIhTA+iIlZC53T/GL
      i/3MLAbYt72C5w9sZcemIrErU/DIoKoqsqKy6A1xuXuKtqE5hqaXkBWVPJuJhsoCntpeQV25
      g7ryfAx6XbZFfuCoqko4JuEPxXD5wviCMebdQYKROJ5AdGUKoLu7O30K2Gr2AWSKUADrw5I/
      zLXead65MsSCJ8TWqkK+cGQbe7dWYDRsvJdD8PigqiqSrODyhhmeXqJrxEn36AJOTwi9XkuO
      xUh1SR5NdSXUVzioLcujOP/RNxnJikIklsATiODyhfEEojg9IZb8YWZdQRbcQYLROIqSVJaK
      qqLVaLAY9eTaTJkrgEQiwRtvvMHBgwfZvHnzujZKKIC1Iy7J3Jxxc6VninPtY8Qlhaa6Yo4/
      WcfereVYzcLcI3j8kBWFaCyBLxSjbWiO4Wk3k04fkws+AEwGHXk5ZjaV5bOpLI/KIjslDhs5
      FiMlDlvWzUdSQiYaTxAIxwmEY8lBPhjFG4ziD0XxBKLMLQVx+cLE4gkSikJCVlAUFaNBR57N
      TFGeFbvNRFmBjfwcC6UOG45cc7p9Oq12ZRvBfvzjHzM5OUlubi6nTp2iqalpXRovFMD9EY0n
      mFjw8lH/LDcGZ5lbCpJjMdK4qZjTT21mS1UhJoNODPyCDYOiqETiSVPIlNNP96iTeXeQeffv
      B1GjXodOp8VqMpBjNVJot5BnM1Fgt1Kcb8Vi1KPTaTEb9eh1WvQ6LZZbByDpdFoM+k8qjVhc
      RlVVYpKMoqrEJZmEohCNJ/CHYkgJGU8gmv4MRuJ4g1ECkeSsPSEryLKCrKhIsoxBr8NmNpBj
      MWK3mnDkWijMs1Bot1LqsFHisJGfY0av12LU69JyfhoZKwBZlunp6SEQSKZxbWhooKysbDXP
      4p4IBbAyFEXF5Qsz4/LTM+rko/5ZXP4wiYTC5goH+7aVc3LfZnKtpqzPbASChwUpIROJJ4jF
      E7j9EaYX/Tg9obSN3B2IEosn8IdjhCISKknziU6rRaNJHoGZ8plpNKC9w4RKVtRbnwqoIKtq
      0nchJz9NRj1mox6TQUeOxZj83aDDkWvBZjHgyLGQn2smx2ykKN9KjsWYVDa3FI7h1iC/WjLe
      B6CqKvF4nGg0ytzcHIlEYsUKIBAIMD4+nj5YPhQKkZeXx8LCAiUlJelcQIK7E4rGWfSGmXUF
      GJ31pJe34aiE1WygutjOkT01PLmlnPKiHGxmkVdFIPg4Br0u6Ri2mijOt7GtJpl5QFFVZDk5
      S5dllZiUQEooROISUkIhFIkTjkmoQCgiAUllEpfkT9RhMRuSNneTHp1Wg9moT8/irWZD2hSj
      vzWgp3436LUPZIWesQLQaDTk5+djNBqRJAmXy7Xiytrb26murmZwcBBJknA6nZSWljI9PS1m
      +x8jISvEJTlp8wvHcHpCTMz7GJl14/SECEbiBCNx8nPMlBXkcHBnNY2bimioLCA/x4xJnM0r
      EKwKrUaDNqUcHnNWtAJI5QLSaDQcOXJkxZVFo1E2bdpEOBzG5/MxMzPD3Nwcp06dQvuYhR/K
      t5wyqgKSLKOqyc9EImnPiydkpIRMQlbwhZJLzFA0jicQwROIMu8OEo5KBG/NNuKSjNVswJFr
      YVNZPpXFduorHGwqzyfPZsJiMmS7yQKB4BEjIwXg9Xq5ePEizz//PBqNhuHhYcbGxlY1a1dv
      2cA0Gg1msxlFUYjH41gsFhRFuWUfS6aGiMViQNIBbTQaUVWVRCKBwWBAURQURUGv1yPLyaWX
      TqcjkUig1WrRarVIkoROp0Or1RKPxzEYkhEvy8uTJAmj0ZhOQqfXG2gdmqd/YumO8sekBAlZ
      WdaepEkmRTiaXBomw66UtCNHVbnNUx9PJJVBQlaQFQUNycgEs0mPFoVcq5mSPAvbKnKpKnVQ
      VWLHYtBSlJ+DzWwA1HTbVVkiFlM+0Xa9Xn9be+/3Xm6E8jQaDTqdblV9x2AwIMsysiw/NO15
      GMtT1WTfXYv7/ai1/WErLyMFEI1GcTqdyLKMTqcjEongdDozufQ2LBYLN2/eZH5+nm3bthGN
      RqmpqeHGjRscPXr0E6uAlKJY7qde6c934m7/V1HpGpmnc2Txjv/XaTVoP5YS2bDMd5GKBNDr
      tVjNyTw6FpMeo16H2ahHq9WQYzZisxiwmAxYjHocdgsawGzQYTHr0aoKdpsZrTb5AE0mE4qS
      HOCNRuOtrKnqHdud+n25ov343+71cyblffz7a1He/TzrtSrvXmTSt9brfmf6LFdTXqb3Zy3K
      WwkreZdTMqxE/nv9fK+2POrvVkZRQIlEgp/97Gf4/X5ycnJYWFjgpZdeWrETOBgMMjk5mT4Q
      JuUEXlxcxOFwYDAY0vVlMwooLsn4w7E7/i/ppLldASzfRGXUi/BKgUDwaLCiMNDZ2VkikQiV
      lZXYbOu3iy7bCkAgEAg2Ap9QAPPz82nbUrZQVTWr6aGXLyWzhZAh+/ULGX5fP2Q35XK278Hj
      KsOK0kFvFJY7TrKBqv7e4ZUtljvrssVyx2C2eBj6Qsphly2WOxuzxXLHZrbIdl9YDxker9hL
      gUAgEGSM2C10Bx6GHcnZlkGr1a46cmOt0Omy71DP9nN4GGTI9jOA7N+Dx1UGYQISCASCDYpY
      ASzjTg6W5fpxeSxttmZFH5cnG3V/PNb6fuXI5j1dSd0PW1/IJsvb/qg8v/Ws+0G9l3dq7/3c
      gw3lA1AUhZaWFs6dO0d3d/cnTBydnZ23/Z5IJGhra+O9995jamqKcDjM+fPnuXHjxn2bR8bH
      xxkcHAQgFotx/vx5FEW56zWKonDjxg3ef/99vF7vquuenZ2lp6cHVU3uur5y5QrhcPiu1/h8
      Ps6dO8cHH3xALBYjEolw+fLlNTETKYrC2bNnM5b97NmzXL58+Z4yZ0JXVxdzc3P3/J6qqgwO
      DvLee+/R29uLoihcvXqVS5cuEY/H73n9pxGJRPjoo4+IRqMA9PX1MTU1dc/rJElKP4/p6elV
      1e12u2ltbU0/w4sXLxIKhTK67ty5c3z44YfEYjHGxsZ4//33mZ+fX5Ucy1EUhbGxsYy/v7i4
      SEdHx33Xm+LmzZsZfU+WZdra2tLvYeq99Pl8aybL+Pg4iUTitr+FQiFGRkbSv6uqSkdHx6py
      s8EGUwCqquL1ejl27BhNTU3E43EuXbrEyMgIqqpy8+ZNLly4kN7lHI/Hqa2t5fDhw/T399PR
      0cHOnTsxGo1MTEzclyxut5uOjg5UVWVhYYHu7m5kWWZgYIAPP/yQQCDAwsICTqcz/UL09/eT
      n5/PiRMnyMvLW3Xds7OzjIyMEIvFmJ6eZmJiglAolG7/0tISi4uLTE9PpwejaDTKwYMHaWho
      oKenh+HhYTwez5oogKmpKbxeL3Nzc3g8HlpbW7l+/Xp6P8jCwgLDw8MAzM3N0dzczMGDB+/7
      RDpJkpiamkq/UDMzM1y5coXe3l4kSWJhYYG+vj6i0SiqqpKTk8OpU6cYHx+nq6uL0tJSampq
      6OvrW7UMkUiEsbExZmdnicVi9PX1sbi4iNfr5cKFCwwODt62835mZgZFUXC73RQUFHD8+PH0
      KX0rxev10tnZSSKRwOv10tXVRSwWY3JykvPnzzM/P4/L5SIUChGLxdIySJLEoUOHqK6upru7
      m+HhYY4dO0Zra+uq70MKRVEYHR3F5XIRj8fx+XyEQiHGxsa4fPky4+Pj6T4nSRJdXV3MzMzc
      d70pRkdH8fv9hEIhgsEgfr+f8fFxWlpa0hM2gMnJyfT/5+fnUVWVI0eOcO3atTULo5+YmECW
      Zebn51EUBafTSSQSuU3JTE5OMjU1hdvtXlUdG0oBQHI3cnd3N9PT01y9epVNmzYxNDREMBjE
      YDDQ1NTE1atXicfjWK1W7HY7165do6amhmAwSFFREZWVlavWuCl0Oh0lJSXMzs4yNjZGQ0MD
      AIWFhezcuZNLly7R19dHS0sLxcXFQHK209fXx7vvvsvi4p1TVWSKw+HA4/GwuLiY3nCXl5fH
      1q1baWlpobOzk+7ubgoLCwEoLS0lGAxy48YNtm/fzq5du9ZkM6CqqoyMjPDZz36WgYEBZmZm
      sFqtGAwGxsfHGRsb49KlSxQVJVP1xmIxrl69yrVr1z4xO1opMzMz6fseCoUYHR2luroal8vF
      zMwMv/71r9FoNBiNRrRaLZWVldy4cQOHw4HP56OiooLy8nI8Hs99yVFcXMzi4iIejyd9v7Va
      Lbt376a/vx9ZlmlpaSGRSNDX15fO8TI+Ps5vf/vb+1oN1tfXMzo6ys2bN9NnfNtsNnbt2kVr
      ayt+v5/h4WHm5ubSfb60tBSPx0Nvby+1tbXYbDZ0Ot2ahieOjY0RjUaZn59PT5Z27NjByMgI
      kpRMwdzT00NDQ8Oa7xdK1ZmafHR3d1NbW5sekAE2bdpEeXk5kExxMzIywtjYGH6/f833UQ0M
      DKCqKsPDw+m2Q3JSNjo6yo4dO1Zd9obzARgMBgoKCrBarbjdbgYHB9MPLCcnh4KCAgoKCpAk
      Ca1Wy6VLl6irq2PTpk3MzMyQSCSIRqNr0tnLy8sZHR3FaDSSSCSQZZnr169jt9uRZRmtVsuJ
      EyfSM12LxUJjYyOQnKncz07phoYGbt68iaIo6fq6u7sxGo2EQiEqKipobGzEarUCyRXL1atX
      ee6557BarWsWIRSPx5mdneXatWtMT09TVFREYWEhFouFvr4+DAYDR48exeFwALB///60KWx2
      dpba2tpV1z01NYXH4yEcDlNRUYHRaMThcFBTU4PH42Hr1q1s3749beNtbW1Fr9dz4MABrl27
      RjweR6vV3neMvt1uJxqNMjY2RmVlJcFgkLGxMZxOJ+FwGEVRMJvN6UFQo9FQVVVFeXk5TqeT
      zs5Ojh07tqq6q6qqmJycRKvVkpOTAyRNoamkbGVlZYyOjhIIBNi9ezcATqeT9vZ2Tp8+nU5O
      BtzThJkJqqresRyHw0FeXl46L1YkEmFgYCD9DjmdTkpKSu6r7mSOLSUtRwqr1UpJSUm67o9H
      p9ntdp599ll8Ph85OTlrtm/lXhOcmzdv4vV68fl86PV6Nm/evOK+uOEUgNlspqqqCoDq6mqC
      wSCFhYUYDIa0+UFRFCwWCwsLC7hcLnJycojFYtTU1HDhwgUikQhHjx69b1nsdjsDAwM0Njam
      X3RZlrHZbPh8vnSmxBRVVVV0dXVhNBrvu7ObzWY8Hg/19fXEYjFkWUaSJAoKClhaWkKr1d5W
      d09PDyaTKT3rW1hYYGpqivb2dpqbm1e9YczlctHU1MTOnTtpbW3F7XbjdruJRCLs2rWLhYWF
      2+Rob28HSA/Qq0WWZaLRKKdPnyYQCDA0NEQikaCnpwev18vu3buZnp5Ov+iyLNPb20tjYyOd
      nZ3U19dz5coVNBrNfR+NqtFoKC8v58aNGzQ0NKRNCwUFBbhcLjQaDU8++SSvv/463/rWtwCY
      np5mZmaGSCSSXiGutm6tVovRaEwPHpFIhLKyMtxuN3q9nuLiYsbHx7Hb7UCyLxgMBnp7e6mp
      qSEcDtPa2nrfk6KFhQVGR0fR6/Xk5ubS0dHB0tIS+/bt+8R3TSYTL7zwQvo5FhQU3Ffds7Oz
      DA8Pp3OSjYyMEIlEbjv/fHnww+TkJMPDw2lZ5+bm0mly7jdUM6XcvF4vOp2OeDxOe3s7CwsL
      1NXVpb+3fft26uvrmZqaIh6Pr+od3FBhoB9PMSHLMj6fD51OR25uLsFgkEQiQU5OTnpWnnKK
      6fV6zGYzXq8Xg8FAbm7ufXn7UyuM1M4+SZIwmUwEAgEURcFkMqVfzOUdz+/3k0gkyM/PX3VH
      S3WW1GdqVhMOh9OpjPV6PXq9Pj2biUQixOPxdBrveDyOLMtoNJr7uheSJKHRaNDr9UiSRG9v
      LxaLhfLycnJzc9M7QJfLEQ6HMZlM2Gy2Vde7vC+kfm5ra6O6upqCggIsFks6+2rq+36/HyA9
      W/b5fKiqSl5e3qpnfaksr6kXPZXtFUibJW02G9PT04yPj3PkyBE0Gg2JRIJAIJCufzV9ITXD
      TK02Uzu/U8/aaDRiNBrp6OigoKCA+vp6AMLhcPq5s2+0mwAAA0RJREFUWSwWZFnG7/ffltBx
      NaTs24WFhWi1WtxuN0ajEZvNlu6XKbmWvxNrkTYmZfMvKChAq9WmB99U3WazmVgslu4P0Wg0
      bY6xWCzpvnE/72UKWZZxOp3k5eVhsVjSfd5isWA2m29LNw7J56iq6qru/YZSAIKHH5/Ph8lk
      ykoeqKWlJfLy8rKa/uJOqKrKxMRE2kz1IIlEIrjdbsrKyh6KjVCCtUUoAIFAINigbLgoIIFA
      IBAkEQpAIBAINihCAQgEAsEGRSgAgUAg2KA8XOEOAoFAsAGQJInJyUlkWaakpIT8/PwVXa+q
      Kp2dnYRCIQ4dOpTOyaTX66moqEhv4EwRiUTQarWYTKbb/i4UgEAgEDxgvF4v//AP/8Du3buZ
      nJzk29/+NkajEZfLhcPhSO/1icViQHI3cjgcxul0UlBQQCQS4bXXXuOFF14AkhsDv/Od79DU
      1ITP5+Ov//qv8fv96U197733Hnq9Pr2PxOVyUVpaKhSAQCAQZIPS0lK+8Y1v8NZbb9HS0oLZ
      bKa3txen00lNTQ379++nt7eXHTt20NTUxL/8y7/g8XgwGo089dRTuFyu2/JQbd++nW9+85u8
      8sor9Pf3093dzezsLNu2baOzsxNJkqipqeE3v/kNiqJQXFwsfAACgUCQTSwWC5IkpZPqDQwM
      cPToUc6ePcvg4CCbN28mHo/jdDr527/9W7RaLcXFxTQ2NvK5z33utrI0Gg0mkymdUsZqtdLZ
      2cn+/fs5deoUDQ0N9Pb2UlZWxtjYmFAAAoFAkA0CgQCXLl3i3Llz7Ny5k3feeYcjR45gt9up
      r69nenqa/Px8LBYLBoMBRVHo6OggGAzeMRX64uIi7733HiMjI5SUlNDa2sqRI0eAZIqKmzdv
      EolEsNvtVFdX89xzz6F7+eWXX37A7RYIBIINTSp3VCgU4vnnn6e2tpbS0lI6OzvZu3cvtbW1
      DA4OcvLkSUpKStBoNNTW1tLR0cGJEyfYvHkzdrudsrKydNLIcDiMTqfjS1/6EsXFxSiKQiAQ
      YM+ePTQ3NzM1NYXVauXpp59mcHCQoqIikQpCIBAIHjZ6enoYGhri85///LrmYBIKQCAQCDYo
      wgcgEAgEG5T/D6BU7OoLuRMSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Nationally' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Recent_Full_Data' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3QUZ5ro/28HtVIjCSEJFBEICRBCJliAyAJMsglGNjY4EtaAvXjHMzs7
      s/s7d869d+9sOBtmZp2wMTAEMxhsg8lZYDJYgIRABoGEEkI5h471+0NDG9HVIHnwCOjnc86c
      cXe9XfVWt6in6g3Pq1EURUEIIYTb0XZ2BYQQQnQOCQBCCOGmJAAIIYSbkgAghBBuSgKAEEK4
      KQkAQgjhpvSdXQEhhOhMLS0tHDx4ELvdTkpKCoqiYDAY8PLyalPOZrNRW1tLYGBgJ9X04ZMn
      ACGEW9uwYQONjY0YjUaKi4tZu3Ytu3btoqqqitLSUr777jvq6uq4evUq//Zv/0ZeXh52u50L
      Fy5QVFTU2dX/i0gAEEK4tfDwcE6fPo3BYCA6Opry8nIKCgqorq7m1KlT5Ofn89vf/pbS0lJq
      amq4efMmmzZt4uLFi/z+97+nvLy8s0/hR5MAIIRwa1OnTuW9997jyJEjpKWlER8fz5gxY+jV
      qxeFhYUUFRVRU1NDYmIivXr1IiUlhaysLKqqqjAYDJSVlXX2Kfxo0gcghHBrmzZtwm63Y7FY
      8Pb2RqfTsWfPHoxGI5cvX2bq1KlcvnwZHx8frl+/zrFjxxgwYAA1NTUMGTIEf3//zj6FH00j
      uYCEEO6sqamJ7Oxs/P39iYmJwWazkZGRQVRUFDU1NVitVnx9fYmKiiIvL4+mpib69+/PlStX
      0Gg09OvXD51O19mn8aNIABBCCDf1SPYBSEwSQoif3iMZAOx2e2dXQQghnniPZAAQQgjx05MA
      IIQQbkoCgBBCuCkJAEII4aYkAAghhJuSACCEEG5KAoAQQrgpCQBCCOGmJAAIIYSbkgAghBBu
      SgKAEEK4KQkAQgjhpiQACCGEm5IAIIQQbkoCgBBCuCkJAEII4aYkAAghhJt6LALAmTNnsNls
      nV0NIYR4oug7uwLtsX//fo4fP05kZCQzZszA29u7s6skhBCPvcciAERHR/Pqq69SWFjIhg0b
      iI2NZfz48Z1dLSGEeKxpFEVROrsS97LZbOh0OsfrtLQ0UlJSHK9bWlrw8vLqjKoJIcQT47Ho
      Axg9ejQWiwWLxcK+ffvQ6x+LBxchhHikPRZX0p/97GckJSXh6enJsWPH8PHxYcyYMZ1dLSGE
      eKw9Fk8Av/3tbwGIiYkhOTlZLv5CCPEQPBYBICAggDfeeAObzYavr29nV0cIIZ4Ij0UASEtL
      Y9WqVVitVkpLSzl58mRnV0kIIR57j3wAsNls3Lx5k/nz53Pu3DmWLVtGdnZ2Z1dLCCEee498
      ANBqtdTW1nLmzBkaGxvJz8/HYrF0drWEEOKx91jMA6iurqaoqIioqCgOHz5MSkoKAQEBnVhD
      IYR4/D0WAeBeO3bsYMaMGX/FGgkhxJPnJwkANpuNyspKgoKC0Gp/aGWqq6vDYrEQGBgIQEND
      AwBeXl54eHi0+fz9AoAQQoi/3EMPAIqi8M033xAeHk5ZWRnPPvssAOXl5WRnZ+Ph4UFLSwvx
      8fF8++23RERE0Lt3b7p37+7Yx70BYPv27RQXF+Ph4YHJZCIhIYFx48Y9zGoLIYTbeegzgc1m
      M0ajkaSkJA4cOIDZbMZgMBAcHIyPjw/5+flAa0CIjIwkLi6Orl27AmC1WlEUBUVRHOmfFUWh
      rKyMRYsWOY6xfv16kpOTH3bVhRDCrTz0AGCz2RzNOR4eHm3y+Ofl5XHt2jXi4uLo2bMnxcXF
      XLhwgW7dujFo0CBHc5Hdbm/TdOTv78+mTZswGo2UlZURHR0t+YCEEOIv9NCvogaDgZqaGmw2
      GzU1NRgMBhoaGrDb7fTr149+/fqxa9cuunfvTp8+fQgKCiIrKwvAcdFXFKVNAHjxxRcxm83U
      1dXh5+eHwWB42NUWQgi385N0Aufm5nL16lUSEhIIDQ3l8uXLhIWFcf78eTQaDYmJieh0Os6f
      P49Op2PUqFFtFnmRTmAhhPjpPdLDQP/vH49y+Wa5y3L/8jcTiAkPdLw2m81otVr0ej3FxcUo
      ikJERMRfo8pCCPHYeaQb0k0WGy1mq8vt9ntiV2ZmJn5+fuh0Og4cOIBerycpKYmnnnrqp66q
      EEI8dh7pANBRdrsds9lMYWEhc+bMwdvbm127dkkAEEIIFY98LqCOiImJ4eLFi1y9ehVvb29y
      cnIYPnx4Z1dLCCEeSU/UE0C3bt149dVXAbhx4wYRERGEhIR0cq2EEOLR9EQFgIyMDL788kvi
      4uLIycnBz8+Pl19+WTqChRBCxRMVAAYOHEhVVRUlJSWkpKQQEREhF38hhHDhieoD0Gq1pKSk
      MHXqVE6dOiUTxoQQ4j6eqABgs9nYsmUL169fZ8CAARw4cACTydTZ1RJCiEfSExUATp065Wj/
      79mzJ9OmTWPfvn2dXS0hhHgkPVF9AD4+PtTU1NDY2EhDQwMeHh5tUkwIIYT4wRP1BDB48GDs
      djtjxozBZrNx+fJlJkyY0NnVEkKIR9IT9QSg0WhISUkBoH///uTl5XHz5k1iYmI6uWZCCPHo
      eaICwL1kCKgQQrj2RAUAk8nEunXr0Ol02Gw2zGYzCxYsaLPesBBCiFZPVAA4c+YMY8eOpW/f
      vgBUVlayb98+nn/++U6umRBCPHqeqADQr18/Nm3aRFFREXa7nezsbGbOnNnZ1RJCiEfSExUA
      QkJCWLZsGbdu3cJmszFmzBi8vLw6u1pCCPFIeqICALQuRN+zZ8/OroYQQjzynogAUF7TyP/9
      41GX28OD/fj1K6P/ijUSQohH3xMRAKw2OwVldS63a7VP1Hw3IYR4KOTKKIQQbkoCgBBCuCkJ
      AEII4aYkAAghhJuSACCEEG5KAoAQQrgpCQBCCOGmJAAIIYSbkgAghBBuSgKAEEK4KQkAQgjh
      piQACCGEm5IAIIQQbkoCgBBCuCkJAEII4aYkAAghhJuSACCEEG5KAoAQQripnyQA2O12mpqa
      UBSlzftms5nm5mbH+2azGbPZ/FNUQQghxAM89DWBFUXh4MGDeHh4oNFoGD9+PADl5eVcuHAB
      rVaLn58fffr04ejRo2g0GkaNGkVwcPDDrooQQoj7eOgBwGKxAJCSksK+ffuwWCx4eHgQHBzM
      5MmTuX37NleuXCEjI4PJkydjt9s5f/4848aNw2azAa1PEIqiOD1B3Mtms2O1Wh2fc0VBwWq1
      PpwTFEKIJ8RDbwKyWCx4enoC4OXl5QgIAGfOnGHXrl1ER0djtVrx9PTE09PzL7g43z9AdLSY
      EEK4k4f+BGAwGGhoaEBRFOrq6vD09MRsNqMoCklJSTz99NPs3LmTkJAQKisrAfDx8QFAp9M5
      9qPT6dBoNPc9lk6nQ6/Xt/mcGo1Gg17/0E9VCCEeaw/9qqjX6wkPD2f37t3ExMSgKAoZGRmE
      hoZy6dIlNBoN8fHxREVFcejQIaC1uUgIIcRf10MPABqNhkGDBjFo0CDHe0lJSQBERES0KTt9
      +vSHfXghhBDtJPMAhBDCTUkAEEIINyUBQAgh3JQEACGEcFMSAIQQwk1JABBCCDclAUAIIdyU
      BAAhhHBTEgCEEMJNSQAQQgg3JQFACCHclAQAIYRwUxIAhBDCTUkAEEIINyUBQAgh3JQEACGE
      cFMSAIQQwk1JABBCCDclAUAIIdyUBAAhhHBTEgCEEMJNSQAQQgg3JQFACCHclAQAwGw2oyhK
      Z1dDCCH+qvSdXYHOcvjwYTIzM+nevTtNTU1YLBaWLFmCRqPp7KoJIcRfhds+Ady8eZOf/exn
      lJWVsWjRInr06EF9fX1nV0sIIf5q3DYA+Pv7s27dOiwWC7t27eLmzZsYjUanclarlZycnE6o
      oRBC/LTctglo5syZFBUV0bNnTwoKChgxYoRq809zczOfffYZISEhjBkzhqeffhqt1m3jphDi
      CeK2V7ItW7Zw4sQJtmzZQnR0NIcOHcJsNquWHTFiBO+99x4tLS2sWLGC77///q9cWyGEePjc
      9gmgubmZRYsWcfDgQU6fPu1yFJBOpyMwMBCtVsvYsWMZM2aM9BUIIZ4IbvsEEBMTQ0lJCRMn
      TqS4uJisrCzVJiBvb28MBgNpaWkoioKiKBQXF3dCjYUQ4uFy2wAwcuRI6urqsFgsBAcHs3Tp
      Ujw8PJzK1dXVcfnyZXx8fNi9ezeKonD+/PlOqLEQQjxcbhsANm3aRFFREf/yL/9C165d2bJl
      C1ar1amcVqulS5cuDB8+nKamJtLT02XSmBDiieC2AcBut5OSkoKXlxcJCQmEhYXR0tLiVK5L
      ly7ExMQA8MILL1BdXU1ERMRfu7pCCPHQuW0ASExM5NNPPyUpKYkPP/wQq9VKly5dnMopikJF
      RQU7duzg+PHj5ObmOgKCEEI8ztx2FNCQIUMYMmQIABMmTKC8vBxFUZw6gqurq6mrqyMuLo6r
      V6+yaNEiPv/8cxYsWNAZ1RZCiIfGbZ8A7qbRaCgoKMButzttMxgM1NXVcfv2bRobG6moqFDt
      LBZCiMdNu54AysvLMZlMT1Tbd1NTEzt27KCxsRGdTseECRPQ6XRO5YxGI6NGjaKhoYHevXtz
      +PBhZs+erbrP6upqvvzySwYPHkxWVhZarZZXX31VZg4LIR5J7boyXbh4gcNph9u9U5vNRkVF
      hdMdtdlsprKy0jGevqGhgYaGBiwWS8dq/RBs3ryZsWPHsnDhQubOncvWrVtVO4EB+vfvT1JS
      EnFxccyZM4f09HTVcvv372fOnDmOIBEdHc21a9dUy964cQOAPXv2sHr1ajIzM9td94aGhnaX
      FUIIVzp0a9rc3ExFRcV9yyiKwq5du7hx4wb79u1zvF9eXs6BAwfIzs4mLS2N8vJy9uzZQ2Zm
      JlVVVT+u9n8hk8mE1WqlubkZnU7Xrjt1b29vRo0apbrN19eXmzdvOiaLVVRU4O/v71TOZrNx
      7NgxAPLy8liwYAGnT59ud7337t3b7rJCCOFKhzqBr1y5wrHjx/jZ3/3MZRmz2YyPjw/Dhw/n
      wIEDmM1mDAYD3bp1Y/r06VRUVHDx4kXKysqIjo4mLi4OPz8/AMc4fLvdjt1uR1Gc2+TvZrVa
      sVgsWCzO4/fvpiiK01PGCy+8wLfffsuBAwfw8vJi9uzZaDQap3J2u52tW7dSXV0NtAbBmTNn
      0rNnT6fjTJw4kW+//ZbXX3+d9PR0AgIC6Natm+oTTmNjI1evXgVanwburElwr8LCQn772986
      OqwBAgMDO+WpSQjxZPlRo4AqKys5deoUzz33nNM2m83m6CT18PDAarViMBjQaDRkZWVRVFTE
      xIkTaWlpobCwkLNnz9K9e3cSExPb3IFrtVp4wOIsWq0OnU6HTnf/O3eNBqf2fR8fH6ZOnfrA
      c62rq0Ov17NkyRLH+W3YsIHevXs7lS0sLOTatWt4eHhQUFBAU1MTI0eOxGAwOJVduHAhaWlp
      eHp6cu3aNRYvXqzaBxEdHc306dOZNWuW4/vZuXOnalkhhOiIHxUA6uvrOXP2jGoAMBgM1NTU
      YLfbqa2txdPTk8bGRhobGykuLmbq1KloNBrq6+vp168foaGhZGRkADgucIqioNVq0fCgAKBB
      q9W2o+lG4yhzIaeEy3nlLksm9Qujb1SQ47Wfnx/l5eVs3boVX19f8vLyeOqpp1SPeerUKRYv
      Xszq1atJSUmhoaGBa9eukZiY6FR2//795Ofnk5qaSnh4OPv27WPKlCmqdUpNTUVRFDIyMjAY
      DMyYMUNWLhNC/MXaFQCemfSMY4z84MGD0Wg0/J///X9Uy+p0OuLj49m7dy+DBg1CURRycnII
      Dg5GURQOHjxIUFAQYWFhHDhwAK1Wy+jRox/qSd1P5o0yvv422+X2gC5ebQKAh4cHS5cupba2
      lrq6OlJSUvD09FT9bJcuXaitrWXMmDH07NmTkydPEhwc7FROURTKy8tZvnw5f/jDH1i6dCml
      paWq+0xPT8fX15fKykpKS0sJCAjg9u3bTJgwoYNnLoQQbbUrAGg0Gscd573/r1Y2NjaW2NhY
      x3uDBg0CIDw8vE3Z9jTBPAo0Gg0BAQEEBATct9zUqVMdM4p1Oh0DBw4kJCREdX92ux2bzcYr
      r7zCihUrVOcgQOtTUXl5OU1NTYwZMwZFUTh69KjLOtTU1FBWVoa/vz8hISHypCCEcMltZwK3
      x88/3Edjs+vO1vd/Ng2D/oe2+JKSEr755huCgoKwWq3U1dXx1ltvqfYBzJs3D7vdjr+/P4sW
      LaKkpET1GIMHD2b79u1kZ2dz/vx5goKCeOONN1TLHjhwgNLSUgoLC4mMjMRkMrFw4UIJAkII
      VR0KAKdPn2bnzp14enri7+/PO++880R3RpZVN1LfpL5KGAD3JAU9duwYixYtwtfXF2jtE7hy
      5YrjCehuZ8+e5fr162RnZxMXF8f48ePVD6EohIWFMXDgQCorK8nLy3M5E7mgoICFCxc6Mpbe
      vn2biooK1WYoIYToUADIy8tj2bJlTk05otXIkSNZs2YNISEhmM1mSktLWbZsmVM5u91Ofn4+
      S5Ys4euvv2bKlCmsXbuW+Ph4p7LZ2dkUFRWRlZVFjx49GDx4MDt27GDmzJlOZRMSEvj0009p
      aGjgb//2bzGZTKoJ7oQQAjoYAHr06MEHH3xAt27d8Pf3Z+HChU/0E0BH9e7dm6VLl9LS0oJG
      o8HHx0e1+UWr1WKxWDh48CCXL19mxowZLu/SGxoa6NWrF9evXycwMJDg4GCam5tVy8bHxzNk
      yBBHU1RCQgJeXl6qZcvLyzl+/Dj19fX07duXpKQkSVkhhJvp0L/40aNH84tf/ILXXnuN559/
      Xi4YKvR6PUajEV9fX44fP05NTY1quQULFhAVFcV7772Hh4cHc+bMUS339NNPk52djb+/PyUl
      Jaxdu5Znn31Wtey2bdvw8PBg69atTJo0iTNnzqimjTCZTKxZs4ZRo0bR1NQEwDfffPMjz1gI
      8bjq0BPA2bNn2blzJ9A6kuWf//mf5QngPvr376/aAQyt8yXi4uIcr3fv3s2MGTOcymm1Wl5+
      +WXH6+rqaurr6zEajU5l7XY75eXlBAUFERAQgMViUV29zG6306NHD4KDg7FarQwbNozVq1f/
      mFMUQjzGOtwHsGDBAnJzcyksLMRsNuPt7f1T1e2xU1FR0WY8f2ZmJqNGjSIqKsqprKIolJSU
      UF5eTmhoqOrFX41Wq0WvV//ZXn75ZbZs2UJBQQF//OMfSU5OVu0D8Pb2JjIykk8++YSRI0ei
      KIrLTmghxJOrQwEgOTnZkfDMbre7vLt1V99//z0ZGRmOUT/3y9q5du1aAgICCA8P5+jRo5jN
      Zl555RWncna7nb1793L79m3sdju+vr7MnTtXdZ81NTWOJ4YjR45QWlrKwIEDVcumpKSQkpLi
      eF1YWCgrnQnhZjoUAMLCwti5cydPPfWUI12D+MHIkSPR6/WMGDECgJCQEHx8fJzK3UlOd2dd
      gaeffpo1a9ao7jMrKwsfHx/HCmQFBQVs27aN1NRUp7I7d+4kNTWV3/3ud/zTP/0TW7Zsob6+
      3ukpwGaz8f7777epm8VikacAIdxMhwLA1q1bSUxMJCMjg8bGRoYMGeJylIk70mq1jos/0GY2
      9N00Gg2DBg1i9erV2O12TCZTm8/drWvXrpw9e5b4+Hg0Gg3nzp1TzUR65/gWi4WWlhbMZjNW
      q1U1SGu1WgwGAwsWLHDMKdiyZUtHT1cI8ZjrUAAIDg4mIyODnJwcAFka8c/qGk0UltW63O5v
      9CIi2K/Ne0lJSSQlJT1w35GRkcyaNYszZ85gNpsZMmSIaiZSgNmzZ3Pw4EH+/u//nq+++oq4
      uDjHpLS7aTQaXnvttTYdxOPGjXtgXYQQT5YOBYBJkyZx7do1IiMjGTx4sIwA+rMrN8v518+P
      u9w+blBPfj43GYDS6gaaTa7XL+gRaMTL0PZnCQ4OVs28eq+uXbvy4osvAvDmm29y/PhxrFar
      U6fxnXxCRUVF6PV6TCZTu/YvhHiytDsArF27lpycHMdFPz09nXfffVeCQAd9sj2d9KvqeX8A
      /t/iCQzsHUJDs5lPtqsvPQkQYPRi0bOD73usQYMGqf4+JpOJ0tJSli5dCrQurPPZZ585Xt9P
      SUkJOp1ONcmdEOLx0u4AEBcXR0tLCz4+Pjz99NP06dNHLv4/IbPFxrcZ+S63hwYanQJAfn4+
      O3bswMfHB7PZTFRUFNOmTXP6rMFgoKGhgQMHDtC1a1cyMzNVh6pC69Dfy5cvO2Y05+fnk5KS
      IgFAiCdAuwNAcnIyycnJ1NfXs379ej766CN+//vfSxB4hKSlpbFkyRJH38zmzZupra11SmOt
      1WpZvnw5N2/epKmpidmzZxMYGKi6T5vNRnFxsaOJ6H6d/oqiOFZ9CwsL46mnnlItV1dXx61b
      t+jXr9+POU0hxEPS7gBw8eJFTp06hcViYeDAgbz55psyDPQRExYWxtatW4mKiqKqqoqysjKX
      yeC0Wq2jM9lsNrtckaxPnz4oiuJIAHi/uR8rV64kISGBgQMHkp+fz4cffsg777zjVK6kpISv
      v/4aLy8vRowYwciRI13uMz09ndOnT9O/f38mTJjA4cOHSU5OlgmIQjwE7b6Cnzp1iuLiYurr
      6zl58iRr1qxxuYiJ6BzPPPMMkydPxmg0Eh8fz9KlS9v1hGYwGBg+fLjqtrq6Oo4fP86lS5fY
      smULO3bsUF0Y586IomHDhhEREcGIESPu+/cxceJE/u7v/g6NRsOHH35Ifr56c9d3333H22+/
      TWVlJdevX6empgabzfbAcxJCPFi7nwDU0hqLR0t7Vy5TFIX6+vo27+3du7dNzqE7Dhw4wPTp
      09m6dSv9+/cnKiqKrKwsBg9u2/+g0WgYP348GzdudOQgUut/ADAajSiKgk6nIzk5mREjRtDS
      0qJatnv37lRWVvL888+zcuVKysrKmDx58n3PTwjRPrIi2BNg/7kb7Dlz3eX255JjmTj0h7kD
      drudf/iHf2gz89dV1lIPDw+0Wi0JCQnEx8dz8+ZN1QRzAH5+frz++uscPXqUnJwcl2mrw8LC
      UBQFu91OcXExjY2N9O3bV73uzz1HS0sLWq2WJUuWUFBQIM0/Qjwk7Q4AK1eupLy8HK1Wi06n
      w9PT84lfEexxUV3fTO6tapfbaxra3l3rdDpefPFFRo8e7Vjg/sCBA6qfnTBhAk1NTYwePRpo
      TXinNhPZbrdz8OBBXn31VTIzM1m+fDmffvqpai6ivLw8/uM//oNRo0ZRUlJCU1MTr776qmou
      ohs3brBnzx5KSkoIDQ0lOjqa6Ohol+cqhGi/dgeAN954gy1btjB+/HiCgoJYu3YtNptNAsBj
      auLEiW1eT5o0SbWc0Whsk3raZrORn5/fJpU1tDYB1dfXU1BQQNeuXamoqMBkMqnus1evXixf
      vpxTp04xfPhwDAaDy0R0Z86c4d133+XatWtUV1dTVlbG7du36dGjR0dOVwihot0BwGAw0KdP
      Hz7//HPi4uIoLCyUxcYfQ3WNJuwumnAA/Hw90d71u548eZLjx487+hWKi4tV+wo0Gg0LFixg
      3759VFdX8+233/Laa6+pHkOj0RAfH09MTAx/+tOfXHZAQ+ss6O3bt1NQUMCLL75IQ0ODaoI9
      IUTHdagPYNiwYYSEhFBWVsYvf/lLyQX0GPr5B/sor21yuX39//c8fr6ejteDBg3i2rVrvPnm
      m0BrdlJXgb+srIzS0lJqamrw8fFxOQrIZrOxceNGAgMD8fPzY//+/YSEhNCtWzenslOnTuXq
      1auMHTuW+vp6RowYIescC/GQdGgg/8WLF9m0aRPZ2dls2LBBhuO5AR8fH8fFH1pnhKs119jt
      dr755hsWL17MwIEDmTVrFhs2bFDdZ2ZmJvHx8Xh6etKjRw+WLl3K7t27Vcvu3LmTc+fOsXLl
      Si5dusRHH32E2Wx+KOcmhLvrcABYunQpHh4emEwmLBbLT1Uv8Yi6cOEC1dXOHc4ajQa9Xk9V
      VRV5eXl4enqqLlsJ0K1bN65cuUJ+fj63bt3i8uXLLmciV1VV8dprr+Hh4cH06dNJTEyksrLy
      oZ6TEO6qQ01A06dPZ9WqVRQWFjJhwgTHCBLhPp566inVGeAajYbU1FQOHz7MpEmT6NKlCy+8
      8ILqPqKiohgxYgQGg4Hm5mby8vJUZyEDJCQk8PHHHxMREcHHH3+MzWZzWVYI0TEdCgDFxcW8
      9dZb+Pn5OVINSz/Ak81qtWK1/pC++vLly/j4+NC/f3+nsiEhIW2Wqzx69KjLtY7vXiynS5cu
      ZGRkMHToUKdyQ4cOdbxvt9uxWq0y+ECIh6TdASAvL48vv/ySPn364OfnR3p6+n1Hb4gnw/Hj
      xzl8+DB9+vQBoKioiOeff75dn23vQvfh4eGOXEP3o9VqOXHiBKNGjZL1qIV4CNodAAICAhgw
      YIAjAEyePFnu/t3A6NGjaWpqYvr06QBcu3bNaYGZO9LS0rhy5QpeXl6YTCZiYmJUm2tMJhNr
      1qzBw8MDRVGora3llVdeUR3bb7PZOHnyJKWlpRgMBpKTk11e/NPT06mvrycmJob9+/czZcoU
      IiIinMqZzWYOHTpEZWUler2ecePGERoaet/v4U6fl6t+DSEeR+3uBO7atSshISFER0fTv39/
      du/e3aZpQDyZ9Hq94+IPrU03vXr1ciqnKAp5eXm88847LFq0iLfffpuSEvWFb77//nuSkpJY
      tGgRixcv5t133+XgwYOqZbdv346npyeTJ08mKSmJDRs20NTkPIzVarVy7tw5fH19Wb16NfPn
      z2fnzp2q+9y4cSP9+vXjhRdeYOrUqXzxxRequYjuZEmtq6vjv//7v9m5cyd79uxR3acQj6MO
      9QFUV1dz69YtfH19uXnzpmQDfYLZbHZaLK4DvE6rbbN0pUajISgoiPXr1+Pn50d5ebnLkT2x
      sbH88Y9/JDc3F61WS35+PrNnz1YtW1dXx5gxYzAajXh5edG1a1fVGw+tVounp8CfBFsAACAA
      SURBVCdDhgwhLy8PLy8vl0+oOp0OnU6HVqvFw8MDvV6v+rdsMpmorq6mqKiI8ePHM3z4cNas
      WePyOxHicdOhADBz5kzWr1/P/v37mTFjhrTDPsEyc0v532uOutw+Ij6cf3x1TJv3Zs6cicVi
      obq6Gj8/P5eLx/j4+PD2229TX1+PyWQiMDDQ5doSL730Ert27aKmpgZFURg2bBh+fn5O5bRa
      LcOGDUOn0zF37lwsFgsJCQmq+5w7dy5paWkcOXIEvV7PnDlzVGcXG41GNBoNe/bsoaCggO++
      +47k5GSX34kQj5sOBYCWlhZsNhtDhgyhqKiI+Ph4GZEh2vDw8Gj3cpFdunR54KxeLy8vUlNT
      27W/rVu3YjabGTx4MB4eHi4HKeTn51NQUMDQoUM5d+4cZ8+eVX0C0Wg0zJ49m5aWFjQaDSUl
      JW1GLwnxuOtQANi2bRszZ84kLS2NhoYGTCbTfZcIFO7hf748w+krRS63/3LeKAbH9qDJZGHx
      v293Wa5rF28+fK+1v+FmSQ3fF1a4LBsT1pXYiLapI8LDw2loaGDFihUkJye7XJLy6NGjLFy4
      kH/913/lH//xH9m2bRs1NTVO6yhYrVZ+//vfExgYSEtLC/369SMzM5MXX3zRaZ9ZWVn07t2b
      lpYW1q9fj9Fo5PXXX5eBEuKR1qEA0LdvX7Zu3Upubi5BQUHSBCQAaDFbaWxxPSvcZvtz+7rC
      fcsZPH7ILHvxxm3W7L7osuzclAFOAUCv1zNmzBhGjhzJuXPnOHr0KOPGjXP6rFar5dKlS1gs
      FoqLi7l165bq37LZbKZnz56MGTOG48ePM2nSJJd9ADdv3iQsLIwDBw6waNEiLl26xKVLlxgy
      ZIjLcxCis7U7AFy6dIng4GCee+45TCYT0dHRsiaweKSMGTMGRVEc/QGu/j7nz59Peno6v/71
      rzl48CBTp05V7QPw8vKiurqaPXv24Ofnx+9+9zuXzUpeXl588cUX3Lx5k5deeommpia6du2q
      WvbOYjgmkwlPT09JqS46TbsDwNatW7HZbMTFxeHv7+8YGSFBQDwqvv32W0wmE/7+/lRWVtK3
      b18mTJjgVO7WrVtkZGSwbds2evfuTVBQkNP6BtD6pPDmm29y5swZmpqaePHFF4mMjFQ99qRJ
      k5g4cSIVFa3NVvHx8XTv3l217M6dOyktLcXHx4f6+nqCg4OZM2fOX3DmQvw47b56L1++nMjI
      SMLDwwkLCyMkJEQ6gMUjw2KxoNVqef7552lubmbp0qUUFBSolj18+DBLly5l3rx5jBs3juvX
      r1NbW6u6zw8++ICQkBBycnJIT093OV9hx44d/Od//idFRa19IaGhoao3R4qiUFFRweLFi5k/
      fz5LliyhvLxcdZ/19fVUV1djt9s5dOgQ27Ztc5mAUebkiB+jQxPBpk2bRn5+PpmZmXz//fcu
      14ZVFIWWlhan7Tabrc37FotFMoqKh8LDw4PS0lK2b99OTU0Nhw4dctlHdSeX1eHDh+nWrRtd
      u3ZVvZkxm81ERkbSv39/PDw8mDVrFvn5+ar71Gg0vPnmmzQ1NfHJJ59w6dIl1X8fGo2GiIgI
      Vq9ezbp16/j0009Vnz6gNfdWTk4OeXl51NfXExcX53Jy28qVK/nDH/5Adna2y3+Xd9yZoJeT
      k8PXX3+tOrFOuIcOdQLv37+fhIQEunfvjl6vV/1HoygKhw4dQqPR4OHhwdixY4HWtL7Hjx/H
      YDAQEBBA3759SUtLQ6PRMHbsWNXFQIToiOXLl9Pc3IynpyfXrl1Tbf4BeOGFF7h8+TLz5s2j
      R48eTJ8+XbUd3sfHB41Gw0cffURsbCx2u51hw4ap7vNOOuxRo0aRnJzMqVOnqK2tdRpZBDBu
      3Dhu3bpFSEgIFy9eJDEx0eU+v//+ewIDA0lISCAsLIxz586pljUajcydO5dDhw6xf/9+nnnm
      Gfr376/6b/TgwYO8+OKL7Nu3j+eee45169axdOlSp3J3Aok86T+5OhQAoqKiSE9PJyoqCm9v
      b3r06OH0x2GxWLDb7UyePJm9e/disVjw8PDAz8+PGTNm0NTUxNGjR7l48SKTJ09GURTOnz/P
      uHHjHAvM2O12FEV54J2MzdaaHdIxysQFBcXxiKwoDyj754yT7WGz2bBqlAfOiFbsPxyfB5yT
      3W5rPSf7/RfbUfjhsd9uf9A+7zr/+5YE25+P/8BzUu7+Th90/Du/04MXEHLs84HHd/6dtFot
      vr6+QGsb/I4dO3j22WdVPx8fH+843r59+5g4caJqjqO75yDYbDaMRqPq38fYsWPx8PCgvLwc
      vV7v6CxWK/vBBx/Qp08fzp49y5w5c/jss8/427/9W6dy0dHRWK1WcnJyCAoK4tatW0yZMkV1
      n3a7HZ1Ox+TJk3nmmWc4c+YMJpNJ9Zxu3bpFXl4e0dHRREREtPkt73bs2DFOnz5NamoqvXv3
      dtouHn8dCgAJCQmOOxpPT0/VOwOLxeJYJ8Db29sRAPR6Pfn5+aSnpzN58mROnTqFl5eX4+Lw
      47ReeB50AWpz1XtQ0Q6V/fPxH3hZbfcufzj+g86pIyf1I76AjnylD6L8iN+pQ6fv+IxCaWkp
      jY2NhISEuLz4A9TW1lJRUYHRaGTy5Mntusu12+00NzerbisuLmbPnj307NkTi8XCzZs3eeut
      t5wmuimKQpcuXRxLXSYmJrq8qy8tLWXPnj289NJLGI3G+yaiuxOozGYzOTk5DBgwwGXSvuee
      e47s7GwGDBhAU1MTTz/9tGo5k8nEyy+/zIULF9i9ezcpKSkMGDDAZdmKigpCQ0NJT093DBYR
      j7Z2B4C0tDRycnIcr41Go+pMYIPBQENDA4qiUF9fj6enJxaLhcbGRi5cuMDMmTPR6/X4+vpS
      VVUFtAYKoM1juE6ne+A/Sp1Oh16vR6+//zC6O4/nAJoHjFrS6rQ//MN5wDXhzrF12gccX3vX
      8dt5Tjrd/X8aDT/s80EjsbTaH85J84CT0un0fz7+A/ap6cA5ae/8Tg+4qmv44ZwecHzNXed0
      x0cffUR4eDh+fn6cPHmSsLAw1WykaWlp5OXl0bt3b6qrqykuLmbZsmVOzUCKopCVlcW5c+ew
      2+14e3sza9Ys1QtrRkYGb7zxhiP/UXp6OlevXmXEiBFOZaOioli1ahVDhgzh448/Jjo6WnWf
      TU1NDB06lLNnz1JfX8+UKVNcZi3dv38/c+bMYdWqVfTr148jR46wZMkS1YmaBw8eZObMmY6k
      fklJSar71Ol0eHt7M2fOHCwWC8ePH6empoagoCCn72njxo2EhISwefNmhg8fzoYNG3j33Xed
      /jaqqqqoqakhOjqatWvX0tjYyLx586QJuJO0OwAMHDiwzWOgqz4AvV5PaGgou3fvJjo6GkVR
      uHDhAsHBwWg0GtLS0ggKCmLIkCGOERWu2mqFaC+bzYaXlxezZs0CWi9K69atUy2bm5vLggUL
      HIFz69atNDQ0ON2xmkwmTp48yaJFi9Dr9ZSXl7N582YWLlzotM8JEyawceNGfH19HYMb1MoB
      DBo0CIDExEQKCwtd3lUD+Pr6kpKSQktLC/v27aNv377069fPqVxVVRUmkwkfHx/GjRtHdXU1
      tbW1qgHA29ubrKwsDhw4wLRp01wObU1KSnLMj1AUhdGjR7uc2azVapk1axb/9V//xdixY7l6
      9apqubq6OsdIqZ49e5KUlMTXX3/NG2+84fI7ED+ddgeAoKAgp8ivRqPROM1+vNNxdm8a4eee
      e669hxfivnQ6HWFhYaxevRpFUWhubmb8+PGqZceNG8fq1avRarWYTCZ69Oih2lyh0+mor6+n
      trYWo9FIfn6+y9xFwcHBqu3491IUhS1btjBt2jQ++OADfv3rX7Nq1SrVz4aFhTnujO8Obmpm
      zZrFypUryc3NxWw2ExAQ4HIegre3NzNmzMBqtbJ//37y8vIcgzXudvnyZfr27UtdXR1ffPEF
      drudd955x6ljW6PREBUVhd1uZ/HixSiKotr5Da2jtU6cOIHBYGDq1KlYLBaXo7UqKirYunUr
      Y8aM4fTp03Tt2vW+34HouHYHgMLCwjZt9Xq9noiICBkhIB4ZU6dOdQwe0Gg0Lv82+/TpQ0xM
      zAPLeXh4sGTJEg4dOkRtbS19+vRxuc7xvU6fPk1MTAzBwcFO2zw9PenevTsajQZPT0+XF0Cj
      0ciOHTuorKykpKSE+Ph4XnrpJdXyXbt2JTk5mYULF3LixAmio6Nd1u1Ok8+dtR5c9c00NTVh
      tVo5fvw4f//3f09BQQEXL15UDayDBw9m//79DB8+nC+//JKhQ4eqfq9hYWH8wz/8A1VVVfj5
      +dHQ0MDMmTNVj79z507mzZvHf/3Xf/GLX/yC/fv3U1ZW1u5kg+LB2h0Azp07R0NDg+O10Wgk
      PDxcAoDodJW1TVhdjITSazV0829txmhsNtNwn1xERm8PfL3aXly7dOnicq2C+4mJiVFt19do
      NCQnJ/P111/z0ksv8dFHH6n2EwBcvHiR2NhY5s+fz+eff86UKVP46quvmDdvnlPZzZs3ExMT
      w7/927/xyiuvsH//fsLDw1VTXNzbhLRr1y7Vp/Hw8HC2bdtGUVEROp2OGzduqDY/KYrCpk2b
      mD59Ov/xH//Bz3/+c7744gvefvttp+uDzWZj48aNtLS0YDAYaGpqIjU11TF66256vZ6qqio0
      Gg11dXWSfPIn0O4AMGfOHJqamkhLS6O5uVl+CPHI+M3qIxSV16luC+vWhY9/0ToaaMfJa/zp
      UJbL/bwx9SnmjG1d7H7dvgwams0uyy6cPrjNgjhFRUVcv37dccG7ceMGo0aNUs0HlJCQ4Fir
      oH///ly8qJ70LjQ0lO3bt2O1WjGbzRiNRpdt8GazmaeffppDhw4RExPD999/T2Njo2oA+M1v
      ftNmqUxXI5vi4+Mdw2Wh9cnB1Q2fwWAgNDQUo9F43/UdcnNz6dWrF2PGtK4lYTKZ2Lx5M6+9
      9ppT2dTUVPbu3cuyZcs4dOgQkZGRqmtBANTU1ODv78+ZM2fIzc1l6tSpLhckEj/o0DDQO7MQ
      7XY7OTk5TJ069SeplBCd7cjFm1TWql8YAV6bnNgmAFRXV3P16lVH84haaglXXF2oQkNDmTZt
      Grdv3+a1115Dp9O5zBk0evRoPvvsM8aOHcunn35Kly5dVJufoLUJbNasWY5+jy1btqiWM5lM
      bWYJ5+XlATj18Wk0GoYNG8af/vQnZs6cyYoVKxgwYIBqsAgPD2fPnj1UVlbi7e3d5ju7V3V1
      NVFRURQUFJCfn0/fvn2x2+1OwcVsNrNt2zZmz57tGI21du1alixZorpf8YMOBQCdTkdCQgKH
      Dh2ioaGBlpYW1TsMIdzNwIEDgdaU6dDadORqHP7169c5dOgQer0em82mmrL6jqioKKKiooDW
      uQalpaWqKab79OlDnz59gNZgUFxcjM1mU53h/Prrr7d5PW3aNNVjX7p0iS1btjjmCdy+fZtR
      o0aplo2MjCQrK4t9+/YRFhbmMg22r68v7777Lrm5uVitViZMmODyqeb8+fPk5uYyYcIEFEXB
      09NTNQAYDAZqa2sxm8306NGjQylmmpubqa+vd9t+hQ4FgGeeeQYPDw9Gjx6NyWRyjN8XQvwQ
      BKC1s1PNnVQpd4aWWiwWPvvsM0fguJfVaqWiogKr1UpISAjh4eHtqkt1dbXLUUB3s9vtHDly
      RLUPYOjQodTX15OSkgK0ziBubGxUPaeNGzfyxhtvcPjwYQYPHsyaNWtYvny501OA2Wzmk08+
      wWg0Ovo4UlNTVec3PPvss1y/fp20tDT0en2b5qh7paamsm3bNiorK6mpqWH+/Pmq5err6ykt
      LXW8Li8vd3y37qjdAeDOH25ycjIJCQmsXLmShIQECQLCrVXVN3M5t8zl9m7+PsRH/9AUc2fU
      UWZmJqGhoRQUFLi8A25oaODTTz+lb9++6HQ6srOzefbZZ1WTxzU1NbF9+3aam5tRFIURI0a4
      fAK5m1arddkEo9FoHBd/aG2qcnWh9PLyQqfTUVFRga+vr2qnLsDVq1cZPnw4SUlJrF27llde
      eYX169erzpnQaDTExMTQo0cP0tLS7nsejY2NvPXWWxw/fpyMjAxaWlpUy5WUlPDHP/6RSZMm
      Aa3zJ1wFyrKyMnbt2oXNZsNutzN+/HiXifseV+0OABcvXmTnzp2kp6c78gDdSfkghLu6WVLD
      f35xyuX25AERbQIA4Fgx7Pz584SEhLBgwQLVz167do2UlBQGDx4MtK458MUXX6hehLZu3UpK
      SgphYWGYzWbWrFlDRESEaqfpvalXdu/ezdy5cx94rjdu3CAoKMjpgqnRaJgyZQqbN28mNjaW
      oKAgZsyYobqP3r178/7773P+/HkCAwOx2Wwuh6zm5OSwd+9e/P39sVgsrF27ltdff121b+Hs
      2bP07NmTjIwM/uZv/obVq1erJriLi4tjxowZJCcnA62dx3eyo97rq6++YuHChXh6emKz2fj4
      44/p3bt3uwLr46LdZzJ48GB+85vfOCbP9OrVSxaDEeJH0Ol0DBo0yDEj2JXExEQ+//xzMjMz
      sdls1NbWqo6WgdY5CxUVFQQFBVFXV4fZbHb5ZLF06VLHBRBQbdZR0717d0wmk+q2qKioNoHs
      4sWLPPPMM07lfH19+dWvftVmApirTABpaWksX77c8Xrnzp0UFhY6+kTudvXqVU6dOkVYWNh9
      l6qtrKxk0KBB2O12du/ejV6vdzmYxdfXl4yMDHr16uVoKnrShr13KJTdvn2bI0eOEBYWxrZt
      23jvvfdkOTsh2unrb7P5Pt/1QvcvTRhATPgPI4L0ej1vvPGGownCVfoVaG0DP3v2LH/605/w
      9vbm5Zdfdtk8+/LLLzNixAhHcrk9e/aolrt58ybp6emOG73bt28zfPjwdvVD3K9jW6PROC7S
      ZWVl5OXlqS61OXToUD799FPCw8NpamqiqKhINbcTwK9+9Svy8/Pp168fLS0tLoNKVlYW0dHR
      5Obm0rVrV0wmE999951qQrxXXnmFy5cvc/LkSQIDA3nnnXeeuOtdhwJAVlYWb7zxBt27d+d/
      /ud/aGlpcdnWJ4RoK6eokjPZxS63TxkWA4BdUahtUGvDbm260Wg0BBjbzsPR6XQkJye3ubN3
      5U779x2u7oB1Oh1VVVWOiXA3b950uc/z5887MvyazWb69+/vMghUVVWRlZVFS0sLsbGxLtdY
      GDp0KPHx8dTX16PX6wkICHDZ6vD999/z3XffcevWLXr37s3zzz+vWk6j0ZCTk0NRURFz586l
      pKTEMbxVbZ/Hjh0jPz+fmJgYfHx8GDp0qMvv4HHUoQAwffp0Vq5cidVqZciQITIEVIifQHOL
      hTf/9RuX2wP9vFnz69acOJk3Sjl7n6AyODaUoX1bR9hYrLb7ptn20GvbPGFERkYyceJEx3wC
      vV6P2ew8Oe5Owse7Z/6uWrVKNQBUV1ezYcMGpk2bhqenJ2fOnCE/P99lR7S3t7fjSebAgQOM
      GTPGaRKq1Wrlu+++Y+nSpWzYsIHU1FTWrl3LsmXLnPaXlJREZmYmAQEBGAwG6urqXAbNM2fO
      sGzZMo4cOUJsbCx79+4lMTFRtWntTlqRO/8Nj8dCOu0OAPv27SMlJYX/9b/+109ZHyFEB9y4
      Vc2Ok9dcbvf18nAEgL/7n70UV9S7LLvqVzMJ8m97U3d3BmC1Wc3w5yeSgAA2b95McHAwt2/f
      dtn/UFVVRWxsLLGxsUDrfIl9+/a5rNPdnnrqKdUOWL1eT0tLC0VFReTn5+Pj4+NygIqnpydV
      VVUUFhby8ccfM3z48Pu2Ypw/f57MzEyGDh3qchayyWTik08+QaPRsHjxYvR6PQcPHnQ5v+JR
      0u4AkJmZ6UheBa3DvpKSkqQjWIgnTGVdEycuFbrcHhzgS/KAiDbvzZkzh8bGRkpLSxk0aJDL
      dZZ79+5NYWEhq1evxmq1otfrXY7Zr6ysbDOj+vjx48yePVv1Qjxv3jzOnj3L4sWLAVzu8/jx
      4wQGBrJ48WK2bdtGTU0NFy5ccIy0utvrr79Oeno6zz77LEajkRdeeEG1D+DWrVv079+f5ORk
      Vq1axVtvvUVNTY3q8R81HWoCuvvxTy78QjyZSqsaWbXrgsvtg2N7OAUAjUbzwFXL7pQbP368
      yyafux05coSamhrHqJ/bt2+7LNujR482WUUPHDigOhRVq9Wi1WopKyvDbDaTkJBARkaG6j6P
      HTvG1atXycnJISYmhtjYWCZNmuQU2Lp3787p06cxGo2MGjWKdevWPTZDRdtdywEDBjBx4kQZ
      +y+EcFi7N4MzV4pcbl/83BCGxIViVxTOXnHdV6HTaUnq13b29IwZM0hPT3e00QcGBrq8sCqK
      gtlsxmq14unp6XIeQnJyMrt27SI3N5e5c+c6Jnipyc3NZenSpRw5coTo6GjS0tJU1y/w8fFx
      HC8+Pp4ePXo8Nsky2x0Apk+f/lPWQwjxGKqub75vv0KzuXXkkt2u8K+fH3dZztfLg42/SW3z
      nsFgaNNBe78ROBs3bsRsNuPp6UldXZ3LUUg6na7Nk0JWVhZGo1F1Mpq/vz+rVq0iPz+fX//6
      13Tv3l215aOhoYGvvvrKkb66pKSEV1991WWfyaOkQ88pV65coUePHgQGBnLixAmSk5OlKUgI
      8VDVNZqoqG1yud3f6Ek3vx86q+12O1artc1ENFfLgd5LbV3zO1JTUx3rFuh0OqZNm6ZaVqfT
      YbPZiI+PJzQ0lOzsbPr379+u43e2DgWAc+fOMWXKFBRFIT09naFDhz42jzpCiMfDiUsFrNie
      7nL77NH9WDD9h1nUWq0Wo9HI+vXrMRgMVFVVtUnMd7f6+nrWrVuHj4+PY52FBQsWqA5p12g0
      bSbT7d69m2nTpjnd9Hp7e7NgwQLOnTvHpk2beOqppx44BNRVpta/tg4FgEmTJvHRRx+h1WpJ
      TEyU/gAhxCMhNTUVi8VCU1MTvr6+LvsKTp06xYwZMxwdywUFBZw4cUI1bYXNZuPq1avcvn2b
      bt26MXnyZJctHncyio4ZM+a+M6WLi4vZtm0b5eXl+Pj4EBMTQ2pqqsvyP7UOBYDCwkLeeust
      wsLCpOlHCNHp7l7PWK/XO4aI3v3+3XfjCQkJfPnll/Tq1Quz2UxeXp7L/Ep35jXExMRQUlLC
      ihUreOedd5yufU1NTXzyySf079+fLl26sGvXLhITE1UnmO3du5clS5ZQVlZGZmYmdrudwsJC
      IiMj/6Lv4cfqUAAICgpi3bp1zJ8/H71eL2sCCyE61c8/3E/urWqX2z98bzoRwT/MGwgLC2P5
      8uVUVLTmZJozZ47La1htbS1z585Fp9MRHR3NlStXsNlsTgGgoqKCPn36OFJqDB06lM8//1w1
      APTq1YsdO3ZQUVHByJEjKS0t7dQhox2eBxAeHs6xY8fw9fVl9uzZEgCEEI8VjUbjcrnMu82Y
      MYN169Zhs9kwm82MHDlSdYZzREQE586dY+XKlXh4eFBTU8NLL72kus+UlBSys7MZNmwYHh4e
      hIeHExAQ8Bef04/VoQAQHh7OiRMniImJwWazycVfCPFYyC+t4Z/Xfutye2xEN341v+1yl+Hh
      4S7XaribVqtt045vs9lcps1OS0ujqKiIqqoqgoODuXXrFsuXL1cdTJOTk8PRo0eB1qA1ffp0
      1ZXT/hIdCgDbtm1j2rRpHD16lMbGRkwmk4wCEkI88qxWO+U1roeWBt+VA6mgtJbyGtdrJET3
      CKCbv+tEmA0NDVy/fl113kJBQQGvv/46H330EXPnzuX06dMUFBQ4LfJjt9vZt28fb7/9Nlqt
      lpaWFlavXs3bb799v9PssA4FgD59+rB9+3Zyc3Md2fSEEOJJsvt0DnvOXHe5/e9eGM6EIb1c
      bvf393eZDC8xMZEPPviAsLAwVq5cSU1NDb/85S+dymm1Wux2O9nZ2XTv3p28vDyXoy4VReHs
      2bNcunQJu91OUlKSam4jNe0OAHa73dFeNX78ePr06SMjgYQQbq+pqYldu3a1GddfX19PYmKi
      U9l+/fqRmJhIS0sLhw4dYvz48S6DxbJlyzh//jw3btwgIiKCN998U7XcuXPnqKqqYt68eXz5
      5ZeUlZW5XOTGZDJx5MgRKisrMRgMtPsKvnfvXrZu3cqGDRsIDg6Wu38hhKB1Oc7c3FzGjh3r
      +J+ru/UtW7YArTOVBwwYwOnTpx0jku71+eefc/r0aQYOHMiQIUP45hv1NSKsVivdu3fHYrFg
      tVoZPny4y8V7Pv/8c+Li4pg9ezbjxo1rfwC4ceMGb731FrNnz+bKlSsoitJmrK0QQrgjDw8P
      XnrpJQIDAwkKCiIoKMhlE4ynpyeVlZV06dKFmJgY/P39sdlsTuXsdjt2u53ly5fzzTff0NLS
      QkNDg+o+R4wYQWFhIV999RWpqal4eHi4XBITWtc6NhgMGI3G9jcBeXh48O///u80NTVhs9k4
      f/4877777iMxnVkIITrTvcnk+vbtq1ruhRdeYPPmzeTn57NixQp69epF9+7dncpptVosFgs2
      m40FCxbw/vvvY7fbVffZ1NREfn4+ISEh+Pn5UVtby/Xr11WX2nz55Zc5cOAA1dXVaLXa9geA
      t956y+k9GQYqhHBnO05cxe6iJUSr0TBjVNtAcO8COKWlpS7zAi1evNgRBJYvX05zc7Pqce6k
      t6ivr2fPnj0kJSVRVVWlWrapqYmqqiqKi4uJiIhofwCQDl8hhGhrzZ6L2OzqAUCndQ4A9yor
      K6Nr166qAeCLL77AbDbTpUsXysrKiIuLY+LEiU7levfuzbVr15gyZQq5ubns2bNH9akCYPv2
      7bzwwgtcuHCByMjIjg0Dvdv69euZP3++NAEJIUQ7WSwWdu3aRXV1NXa7nWHDhqkOqLHb7TQ0
      NDhaXhRFYcWKFS4DQNeuXbFarcyYMYP8/Hz8/f1Vj2+327HZbNy6dYvY4ImI8AAAIABJREFU
      2NiOBQC73e54Ehg7dqw0AQkhRAfs2LGDgQMHEhsbi9VqZc2aNYSGhhIUFNSmnFarJSQkhBUr
      VuDj40NNTQ0JCQmq+7RarWzcuBGbzUZpaSmxsbEuE9zNnTuX3bt307NnT8LCwjoWAM6cOcOt
      W7eIiYnh0KFD/OxnP+vIx4UQwq3p9Xrq6+sxm800NzdjtVpdDqmfNWuWY6SlRqNxecN9+PBh
      Zs6cSWRkJBs2bGDChAns3LmT2bNnO5W9dOkS1dXVeHt7s2LFivYPAwV46qmnOH/+PO+//z6p
      qanS/COEEB3w3HPPYTab2bRpE7t27WL69OmOFNb30mg0jkXsNRoNO3bsUC0XFxfHrl272LZt
      G0ajEYPB4HKf165dY+nSpeTk5LB06dKOPQFcunSJefPmERUVxY4dO4iMjJQgIIQQ7aTVahkx
      YgQjRozo8GddNQH16tWL559/nsbGRnr1ak1RkZKSolrWYDDw9ddf09TUxNGjRzsWAPr168c3
      33zDiRMnMBqN0gcghBDtcL24iuOZBS63940KInlARJv3Ll68iMVicbw+f/48S5YsUf18jx49
      HP999epVNBqNU4I5gPnz51NWVsacOXPIysrqWADYtWsX3bt3x2q1UlRUJDOBhRCiHQpKa9l6
      7HuX26cN7+MUALZt28azzz7raGW53w23yWQiPz8fu91O7969XfYraDQaxxDRgQMHdiwAdOnS
      hV69erFz507q6uowm81tFk2G1uFKp0+fpqqqitDQUIYMGQK05sg+d+4c9fX1PPPMM9TV1bF/
      /378/PwYMGDAfdfRFEIId/Pmm2/SpUsXunXrBuByJnBpaSnr169nxIgRKIrC7t27ef755x3N
      Qfeqq6ujurq6de3kjlTozpJnd5ZRu/fiD61Dkmpqapg+fTq7d+/GarWi1+sxm81ERUWRmZnp
      qPTAgQOJi4tzRLY7TxSKovz5ZO//hHGn3IOfRJS7vrwHlFUUl1+0y+M/cJ93/XgPPHz7zknh
      h30+6PSVu47/wG/KcfwHlMP1H6Rz2fb+Tnd/Tw/rN1Xu+p7a9/f0wF3Sgd9J6fjv5Gpm6d3a
      +z116Hdq97+n9u+TH7HPB5d8+P9G2/576sDfyQP8Jfu8s3D9nfeHDBmietysrCxmzZpFTEwM
      0NopfPbsWXr27OlU9uDBgxQVFREZGUl1dXX7A8CaNWu4ceOG43EkICBANReQ2WzGx8cHjUaD
      0WjEbDaj1+vx9vbG29ubS5cuwf/f3p3+tnGd/wL/zkZSlGTtVmxKliVZiy15UeJVSZzEaeo2
      KJACRYGiDZq3BX73/iu3uO/7sih60yK4CIrcNE5ax4kV75Jly1otyZIiWQutXSRnvS9ojkhz
      hkM6TOP85vsB8oL00Zl5zjlznpkzwwmAUCiEBw8eYHh4GKdOnUIkEoGu63bA+QwaXTeg67r9
      d24sCxl152IY5m59HiNR0zUIkGDo2S9zSmeau3V6xWQYel4xAVZaTF7bN9Lq82pTHbouwjA8
      2tRM277l0aZP+0nTtZzlkNZPhpG7TtNIb9McVRbQ9+n95GW3nXK3vWV9D31v7ba94dX3hpH3
      9nUtv+1n9L3n8fT0GPXoTwvpfZ87JqOA4ykVj+5xjFpW+nj26iejoHGS+ptc0sfe6MwKNmOq
      a9kjTXUIh3ZfIX327Fn8/e9/x7/+9S9omgZRFPH+++877uP09DQ++OAD+6Q77wRw5MgRqKqK
      UCiEnp4edHV1OT4BpCgK4vE4gOR7J9zWoiKRCBobG7G9vY1r164hEonY78VOvRtDEHI/paoo
      MgKBgOv7tFMEQbD3QxRzP7UkydLuPnvc4w4oAQQUyfN/6ixKol2nIOauVJaVpzHlHjACdmPy
      ehJLknZjEjyCUpTk9j1jEtPa1KOfZDnZT7rp0aACdmOSc8ckpseUY200ve8LaSevvs+/ncS0
      sefV98l20nJ3PZARU+7tS3m2EwAoASW/4ym97z1eESM9jUn0SAACdvte9uonsYCYnvaT4tVP
      6W3qEVOqn/Jhx+Sx/fR++su/hvFgetm17P/6r5+ick9pxjY++OCDvPbn3Llz+POf/wxJkhCL
      xfJPAGfOnMHp06exsbGBv/zlL/jTn/6EP/7xj1kHlaIoCIVC+PTTT1FVVQUA6OvrQ2dnJwYG
      BvD48WPcvHkT5eXlmJqagqqqjv/jAiIicqfpBhaizq+IBoCAIuGl6rKM744ePYru7m4YhlHY
      20D7+/vxzTffQBAEdHd34/3333fM/oIg4Pz582ln8QJ6e3sBIOsd1anHlPiiOSKiwiytbuN/
      /u//5/rvLfur8Mf/cREAsBPXEFOzl2DzTgA3btzAwsICQqEQrly5gsHBQfzhD39wvKwWBMHz
      kgfgxE9E9J/wf/49hP/r8Bhq3gnA7QcIRET048RTcCIin2ICICLyKSYAIiKfYgIgIvIpJgAi
      Ip9iAiAi8ikmACIin2ICICLyKSYAIiKfYgIgIvIpJgAiIp9iAiAi8ikmACIin2ICICLyKSYA
      IiKfYgIgIvIpJgAiIp9iAiAi8ikmACIin2ICICLyKSYAIiKfYgIgIvIpJgAiIp9iAiAi8ikm
      ACIin2ICICLyKSYAIiKfYgIgIvIpJgAiIp9iAiAi8ikmACIin2ICICLyKSYAIiKfYgIgIvIp
      JgAiIp9iAiAi8ikmACIin5KLXaFlWbh//z5mZmbQ1taG9vZ2+/uxsTFEo1H09vZCVVV88cUX
      AIALFy4gGAwWe1eIiCiHol8BGIaBR48e4d1338XIyAgMwwAAbG9vQ9d1bGxsAADu3LmDnp4e
      9PT0oL+/v9i7QUREHop+BaCqKsrLyyEIAioqKpBIJBAOh1FWVoauri7Mzc0BADY3N1FbWwvT
      NDE0NGT/LZC8WtB1HaZpemxLQyKRsP/OjWWZSCQSAADD0HOW1XXdLgsrd6yJRAKWKUHTtZzl
      TGN3+14xaZqaX0yw7Dp13chZVtcNu6zlEZSqqkjIgKbljskwC4kp2U+JRO46LQtpMeXuJ8PY
      7SfLco8pve/1Iva9qqpISAW2k5FnO6le7WTl3U66YeTVTgCgJlQkEhJULffYMwvoe/1pTLpH
      7Baet+892lRNHk9e/WSmtWnqpNVNxjjxkH9MRt5tqmp5zntp/WS4bL/oCUCSJHvH4vE4FEXJ
      Wc40TUiSBAAIBALJnTUMSJIEUcx9gRIIKAgGgwgEcjeEIIj2EpMk5Q5ZluXd5SghZ9HkthUJ
      iuwcY4oo7W7fKyZFCSTrTeQeBAIEu05ZlnKWlWXJLit4BBUIJLfv1m8pklhITMl+Mqzc5QQB
      aTHl7idJ2u0nQXCPKb3v5SL2/XO1k5RfO+lm7o0LgpB3O8mSlFc7AUAg+HTsKYGc5cQC+l5+
      GpPkkQAEPG/fe7Rpnv0kprVpaj5ykzFOPOQfk5R3mwaU1LyXOwkJaf0kuWy/6AkgEAhA0zR8
      8cUXkCQJgiCgr68PnZ2dGBgYwOTkJG7evIljx47hk08+gSAIeO2114q9G0RE5KHoCUAQBPz8
      5z9HPB5HKBSCIAjo7e0FkLzZe+HCBbvse++9BwCe2ZmIiIqv6AkASCaBkpISz3Kc+ImIfjj8
      HQARkU8xARAR+RQTABGRTzEBEBH5FBMAEZFPMQEQEfkUEwARkU8xARAR+RQTABGRTzEBEBH5
      FBMAEZFPMQEQEfkUEwARkU8xARAR+RQTABGRTzEBEBH5FBMAEZFPMQEQEfkUEwARkU8xARAR
      +RQTABGRTzEBEBH5FBMAEZFPMQEQEfkUEwARkU8xARAR+RQTABGRTzEBEBH5FBMAEZFPMQEQ
      EfkUEwARkU8xARAR+RQTABGRTzEBEBH5FBMAEZFPMQEQEfkUEwARkU8xARAR+ZRc7Aoty8KN
      GzewsrKCSCSCEydOAAB0Xcdnn30GXddx5swZlJSU4NKlSygvL0dXVxcikUixd4WIiHIo+hWA
      ruuIRqN499138e2338IwDADAw4cP0dLSgosXL2JgYACLi4vo7u7GO++8Y0/+lmVl/AdYObdl
      WUgrm1u+deI56rSKWCfyrNNK37735tP21avs0/0soE4vqToL6ifPovnWaT1fP+XVVQWO0WK2
      qV1n/uMk3zoLO548Cz7H8eRZ8jmOJ68aCzhGnqudCuin76FP3eos+hWAqqooLS2FIAgoKytD
      IpFAOBzG6uoqOjo6EAwGYZomAoEAhoeHMTw8jDNnzmDfvn3QdR0AYJomDMOA6RGgrmtQVRWa
      pucsZ1kWVFVN1m2YOcsahmGX9RoJmqYBlgFDN3KWM03TrtMyvWLSoaoqdE3LvXGkxWR6bD89
      Jo+gdE2DqgrQDY82TYvJND3a9GlMXv0EC3adqRMH1zqNtDbNMU6stDo9+95Mb6fcNE2DKgG6
      R99bVlo7Wfm2k0ffp41n73Yy8mon4GlMqmofh27MAvpe15PbNzzGvYUC+t7Mr+8BQEsdT3ru
      Ns2cI/JvUy+pcl7jJP0Y9Zz3nvaT5tFP6TEZLv1U9ASgKAri8TgAYGdnB4FAAACwZ88ePHny
      BOXl5RAEAY2NjWhqasL29jauXbuGffv2QVGU5M4aBiRJgijkvkBRFAXBYBCBQO7OEAQBwWAQ
      ACBKUs6ykizZZSHkjjUQCCCgSJDl3M0oSqJdpyDmrlR+GpOSyH1gCdiNSfKKSdqNSfAISlEC
      CAaD3jGJuzGJYu5+kuVkTIblccEpYDcmuYCYBPeY0vu+kHby6vvU2CtuO8kIBoPQTY+Np8fk
      sX05z3YCkuM5GAzax6GbgmJSnsbkkXwF7Pa97NVPYv4xpfpJkT1iKmCcpPopH3ZMHv2UPva8
      2tSe95REznL5jP3vJQEEAgH885//REVFBQCgr68Pp06dwj/+8Q/cv38fPT09GBsbw9TUFFRV
      xSuvvFLs3SAiIg9FTwCCIODNN9+EruuQZRmCIKC3txcA8N5778E0TTsbtre3A/DOeEREVHxF
      TwBAMgk4XUaKopgx2XPiJyL64XAGJiLyKSYAIiKfYgIgIvIpJgAiIp9iAiAi8ikmACIin2IC
      ICLyKSYAIiKfYgIgIvIpJgAiIp9iAiAi8ikmACIin2ICICLyKSYAIiKfYgIgIvIpJgAiIp9i
      AiAi8ikmACIin2ICICLyKSYAIiKfYgIgIvIpJgAiIp9iAiAi8ikmACIin2ICICLyKSYAIiKf
      YgIgIvIpJgAiIp9iAiAi8ikmACIin2ICICLyKSYAIiKfYgIgIvKp7yUBLC8v4/Lly1hdXbW/
      sywLIyMj6Ovrg6ZpsCwLd+7cwe3bt2Ga5vexG0RElEPRE4BhGLhy5QpOnTqFf//737AsCwCw
      uLiIhYUFNDU1oa+vD0NDQ1AUBcFgEPfv3y/2bhARkYeiJwBVVVFTU4PS0lJUVVUhHo8DAGZn
      Z3H06FHs378fOzs7WFhYwOHDh9HW1oaVlZVi7wYREXkoegIQBMFe0jFNE6KY3IQoijAMI6Os
      aZpc/iEi+oHIxa4wEAhgdXUV09PT2NragizLGB0dRUtLC77++ms0NjaiuroadXV16OvrgyRJ
      aGxsLPZuEBGRh6InAFEU8bOf/QxTU1O4ePEiBEFATU0NqqqqcPr0aayvr+PYsWMQRRGyLMOy
      LBw4cKDYu0FERB6KngAAoLS0FN3d3fbn2tpaAEB9fT3q6+vt7znxExH9cAQr9ZjOC0BV1YzP
      23ENhuF+j6C0JABJFGBaFrZ2VNdyoiigrCQAAIirOlTNcC0bCsgIKBIAYHMngVyts6c0CADQ
      DRM7cc21nCJLKAkmc+1OXIOeK6aQAkkSYVkWNvOMKaEZSKi6a9lgQEbQjklFri4vDwcgCIJn
      TLIsIhxUkjElNOi6e0zhkAJZEmEB2NxOuJYTBAHl4WRMqmYgnjMmCUEl2aZbMRWm6RzT99dO
      QQiCd98/VztZybHnprB22o0pVzsBQFk4AFEQYJgmtmM5YpJEhEPJmGIJHZrufjyVhBQoUvI+
      4EaOvocA7AknjydVNxBPuMcUUCSEAt59DwBlJQGIogDDtLAdcz+eJElE6dOYvOaIkqAMRZa8
      Y8LuHKHpBmJ5xpT3vGda2MoRUz7z3guVAFIMw4AkSXmVVVUVgUDAs5yu6xBF0b4pXYw6Uzex
      Zdn7QirfOgsp+33FZBgGFEXJq05FUSAIQtG2r+s6BEHIq/9/6HYqpO9/DO1kWRZ0Xc+r7zVN
      gyzLRY0p9ZDIf7eYLMsq6hxhWRY0TcurrKZpkCTJdezzl8BERD71QiaAfDJwSr5XCoIg5F1v
      IXXmc1ZZSJ2FlBVFMSOmXI/UvkgxmabpurzybEzF2L5Xnen78kOOp0LKfh/tlKq3mOUK2b5X
      m6aP7x9TTC/yHPFCLgE9a2lpCSMjIwCAuro6dHZ2Og4Uy7Jw7949rK2tQRAEHDlyBDU1NY51
      jo+PQ9N21zkrKioQiURc9yEej2NychLLy8s4duwYqqqqssqMjY0hGo0CSHZ8c3Nzxk3vFMMw
      MDU1hUOHDmFoaAgrKys4fvw4Kisrs8pOTEygpaUF8/Pz2Lt3Lx4/foy9e/ciFApllb1+/TrO
      nDnjGoObra0tzM7O4vDhw1n/9uDBA0iShLa2Ns+B/OTJEwwNDcGyLFRVVaGrq8vxb/r7+3Hk
      yBEEg8GC9/XWrVs4efJk1vfb29t48OCB/dk0TRw8eNCx/RcXFzE2NoaOjg6Ew2EMDw/j1KlT
      WeXi8TgWFxdx4MAB3Lx5E4lEAqdPn3bc70LaaX5+HmNjY7AsC2VlZejp6cm5RLC9vY3x8XGs
      ra3h7Nmzjn0/NDSEnZ0d+3MoFMLRo0ezym1ubuLOnTuoq6tDc3MzSkpKXLd75coV1NbW4vDh
      wxAEAUNDQ2hvb/dcTjFNE/39/XjllVey/m1tbQ3z8/MZ37W2tjq26c2bN9Ha2orq6mosLi5i
      enracXzHYrGMtwmYpokDBw5g3759WWXv37+Pzs5Ou73v3buHw4cPu7a/YRhYWFjA1NQU6uvr
      0d7enlXm8ePHWFpaQnd3N0zTxM2bN3HkyBFUVFRklR0eHsba2hqA5BzR3t6O6upqx5ju3r2b
      MZaampocx/Py8jKWl5ftz6l6nZLEs3PE9/IUUDFpmoahoSGcP38eoihibGwMMzMzaGpqyio7
      OjqK8vJyHD161H4lxVtvveWYLGprazOyodt62srKCoaGhhAKhbC+vo7z5887HoBAciC3tLQA
      SA7Cq1evoqamJmtwbW5uIh6PQ9M0LC0t4fz587h165bj4I5Go2hubsbKygpqamqwurrqOGAA
      4NGjRxk30mtqanDkyJGscoZhIJHYvXm1s7MDXXe+QXX48GHMz8/js88+Q11dHUKhEA4fPpw1
      yRmGgf7+frzxxhuQJAmzs7MYGxtDZ2dnVp2JRAJ9fX0Z7XLq1CnHdo3H4xn9lD7JpSspKcGx
      Y8dgWRZmZmYwPT3tmmBGRkZw7tw5XLlyBQBw/vx5x3KPHj1CVVUVFhcXEQqF0NnZibGxMceJ
      Nd92isViGBsbw+uvvw5RFBGNRnH79m3Hvp+dncXU1BTC4TCi0Sh++tOfup4ht7W1JR8c2NzE
      4OAgSktLHcuVl5fj9ddfx8rKCu7fv49YLIb29na89NJLWWVlWUZFRQW+/PJLnDx5EvF43PHK
      zbKsjH9LfXZSUlKSNYm5nc2+/PLLuHXrFra3t1FWVuaYpAEgGAzafT83N4fJyUnX43ltbS1j
      e7quIx6Po6ysLKvsV199BVEUUVpaisrKSsfJH0g+3WiaJj799FNYloVz5845Tv4A0N7ebreT
      pmm4cuUKLl68mFVOEATs7OxAURS0tLSgurraNabS0tKsceY2Th4+fJgxR7zwCWBzcxMvvfSS
      HWBLSwv6+/sdE0A0GkVvby+A5KCqrKxEPB53PMsZHx+HZVk4ePAg6urqXBtMFEUoimJPQrku
      UZ8dyPv27XMsHwqFsLKygsXFRfT09CCRSLjWq+s67ty5g5mZGcRiMSwsLKC1tdWxbCQSwauv
      vuq6fymxWMy+ogKSB6xbnYlEApOTk6itrbXPbp32VVVVVFZW2m0QiURw8+ZNxzplWUZvb29e
      VwCTk5MZk35dXZ1jOUEQsL6+juHhYTQ2NuKdd95xbVNZliHLMgKBAM6cOeN69ldTU4Px8XGs
      rq7i7bffRjQadd3n1BViPu1UVVVlt1N1dXVGX6STJAmyLMM0zbyWe/r7+yHLMl577TXPG4Sx
      WAzxeNzehhNBEBCJRLB3717cunXLfp3LsyzLwvDwsH2MWJaFhoYGxzoDgQBmZ2chyzK6urrs
      d4Lt2bMnq+zDhw8RCAQwNjaG7u5uTExMOE7CgiBgY2MDDx48QCQSydn3Bw8exKVLl9Da2oq1
      tTVsbW25JktFUWAYBgzDsH+z5FSvaZqYnZ1FfX09EokE5ufnUVVV5Vg2fY6QJMm1n0KhEC5c
      uABN0zA9PY2JiQk0NTXh4MGDWWVXV1czrqpEUURFRYXjlWhTU1PGHPHCLwFtbW3hm2++sc8O
      LctCfX09Ojo6ssoODQ3hyZMn9udYLIY33njD9aBVVRWPHj3CxMQEwuEw3njjDdf9MAwDExMT
      WFpawtGjR12Xa9K3HwgEcPz4cceBsL29DU3TUFlZiZ2dHYii6HgGrGlaxlIVkDyLcqpzaWkJ
      e/fudY3ByerqKsbGxnDo0CHH5bLx8XE0NDTkXCoAkm15+fJlu5xlWaiurs74PUhKNBrNSBa5
      rK+vZ7xCRFEUlJeXZ5VbWVnBxx9/bC9XAMmzYqeYbt26ZV9ZiKKImpoax+UvXdexubmJQCCA
      0tJSrK2tIRAIIBwOZ5XNt50sy8K1a9fsJ062t7dx4sQJ18QGJNt2dHQUa2trrktQf/3rX1Ff
      X29vv6KiwjGmzc1N3L59GwcOHMDBgwdzLldpmpax3DMzM4NIJJLVb4ZhYG5uDk1NTZiZmcn5
      +56JiQl7Mn3w4AGam5sdr1KB5PGb3veSJDm27+rqKj766CMcOXLE7vvW1lbXNk1deZeWlqKi
      osLz/tDS0hImJiawd+9etLW1ZZVZWFiAoij2751mZ2dRUVHhmNTu379vvyVZ13U0Njbi0KFD
      rvGPj49je3sbpaWl6OjocOz7sbExzM3Noa6uDi0tLZAkCcFg0DGu9P6xLOvFTwCWZSEWiyEc
      DmNrawvLy8toampyHLiqqmZMloIguE6WIyMj9lpcZWUlmpqaHAeXpmlZyw6lpaWOZ02apsE0
      Taiqivv370MURZw+fTpr+7FYDJ9//nlGEjl48KDjKzG+/fZbTE1N2Z83Njbw9ttvOw6E27dv
      2/uq6zoaGhocB2wsFrPXjJeXl/H222+7HgippJdiGAZ6e3sLumH1rMHBQUxNTWUsZbktAT18
      +DBjOaG0tNTxLCgej8MwjIx28Xr0U9M0TE1NwTAMx8lyY2MDt27dwtmzZwEA33zzDU6ePOl4
      eT86Oorl5WWUlZVh//79qK2tdd126tFE0zShKEreNwnn5uZQWVnpuFyRetwwxe0R0VgsljGe
      AKChocFxsrIsC2tra5icnMTMzAxaW1vR3d2dtb+apmFgYACnTp1CX1+ffRXuZGBgAIcOHYKi
      KLh69SrefPNN15u/y8vLuHfvHkRRhGma6O7udjzBsSwr6z1jbn0/NDSElpYWxGIx3Lx5E+Fw
      GK+99prj9tfW1lBZWYmpqSnouo69e/c69n3qysNt2SedruuQJAmJRMJ+3NrpKmB9fR0ffvgh
      Ojo67P5ubGx0TWqmaSIajWJ6eho7Ozt49dVXs+Yoy7LQ19dnXwFYlvXjWAJ6+PAhjh8/jq+/
      /hrt7e0YGRlxPGuIRqNYWFgAkBzow8PD+P3vf+/YwKksXFJSgtraWtdLsXg8jkePHmV819LS
      4ngQpu5RrK2tobu723VABAIBNDc3Y319HXv27EFra6vrmWMkEkEkEsHOzg4GBwexb98+15tw
      6TfdLMvCl19+6ZgA1tfXsbq6isbGRvuV3G5nQS0tLWhubsbOzg7u3r3remmp6zpu3LiRcSAe
      OHDAcamuo6MDkiRhY2MDZWVlaGlpcb1Kc1uaetbS0hIEQcjrvVKTk5OYn5+HIAiIx+N48803
      Hcvt2bMHvb29uHr1KgzDyHn/p6OjA+3t7VhbW8Pg4CDm5ubwm9/8JmsSjsfj+PDDD9HY2Ggf
      oG7t9KzNzU3Hqw8A+PTTTxEOh+06q6qqHK++FEWx1+DX1tZw7949VFdXOyaAy5cv21exiUQC
      x44dc9y2IAiYnp5GLBbD3NycffKRuh+Wrra2Fnfu3LHH29WrV/HKK69kxZV6oCN1T8kwDHz5
      5Ze4cOFCVp2xWAx37tzJSIDt7e2ON0zX19cRCoVw/fp1vPXWWxgeHsbOzk7WMpBlWRgcHMT5
      8+cxMTGBo0ePYnBwEK+//npWnZqm4fr16xnHcE9Pj+Mccf36dfT29uLrr79GdXU1otEo3nnn
      naxy5eXl+N3vfpfxndtxb1kWtra27Lbfv3+/60lFLBazr3x1XX/xE4CqqgiHw5ienkZrayua
      mppw48YNx7L79u1DXV0d7t69C0mS8Nvf/tZ1Yj937hxM08TKygquXLmC8vJy145wG/jP+uST
      T6DrOurq6nDv3j2UlJTg5ZdfzppcJUmyD8719XV88cUXaGlpQVdXV1aduq5jYGAAhmHg+PHj
      OZcYEomEfRBsbm66Phb60ksvob6+HtFoFNFoFDdu3MDRo0cdby7ruo67d+/CsiycOnXKdaJO
      revnIxgMoqurC5Zl4dGjR/joo4/wq1/9ynVyy1d/fz+mp6ftz52dnY5nTKOjo6irq0NbWxtG
      RkZcr2bW19cxODiIRCJhP93R1dXl2E7Dw8N48uQJgsEgmpubXa+SgsEgfvKTn2Bubg6maaKx
      sdHxaRUg+bTQxMSE/Tkej7sur5w4cQJzc3P2fS23pUBZlhEOh9G48xRdAAADS0lEQVTf349w
      OIxf/OIXrvcATp8+jcnJSQwMDGB+fh6bm5soKyvLGs+yLOPXv/61Yx3PamhocL0/8Kz0HzDl
      uppLncXno7a2FleuXEFJSQkCgQA2NjZck7ogCLAsC6dPn8aePXswNjbmup9nzpzxvAKwLMs+
      Pjs7O9HQ0ICvvvrKsayqqujv77fLq6qKhoYGx3sg169fx9TUFFpbW1FeXg5Vdf4VuyAI6Ojo
      wOXLlyHLMjRN+3EsAd25cweqquLs2bNYWVmBruuOB83U1BRGR0dx7Ngx7NmzB4IgIBwOO57d
      Xrt2DYlEwj4DLy8vL+j3B9+FZVmYnZ21z0JTB6zT9vv7+/H48eOMde8zZ844ng3cu3fPXi4J
      BoPo7OzM+5eFgPMN7kuXLsGyLPsMKRQKoaenp6Bnpp+1ubmJ4eFhGIZhr1t+l/qA5NpmvlcA
      QPJMaHR0FIuLi2hqanJ8WqkQc3NzmJ+fh2VZCIVCaGpq8lxf3tzcxOXLl9HU1JT3SYYXwzDw
      1VdfQdM0xxOaaDSKv/3tbzhx4oSdzJubmx3vaaXb2dnB5OQkDh8+/J2W/woxMzOD8fFxKIoC
      VVXR3t5elPeHpd/M1XXdNQH29/djZ2cH4XAYT548QWdnp+Oj4hsbGygpKcnr18YDAwOQZRkN
      DQ1YXFzMeHDFiWEYuHfvnn2vyOmGdTwez1gmFQTBnv+8vPAJoBDz8/NYXFy0P4uiiK6uLscO
      druj/5+wvb2Njz/+GJFIxJ74Dh48mPeZ0X9S+llLSiE/gnIyOjqK+fn5jOR08uTJ5/pdQEoh
      rxFIZ1kWTNMsyqSmaRoWFhYwPT2N5eVl/PKXv8yq1zRNPHjwABsbGygvL0dbW1vOJbh8zc/P
      Y3Z2NuMKwCmpGoaR9YhmMBjM61UFP4RU/xTyw7diblvTNCQSCYTD4aKMEcuysLi4iKWlJVRX
      VyMSibg+WTQ+Po7FxUV0d3e7PlX0Xf23SgBEP5Th4WFEo1Hs378f+/btQygUcn0M9PPPP89Y
      cz9w4MB3PrP95JNPMh5OqKysdFxSpB+Hzc1NXLp0KWNloKWlxXW58HkxARAR+dQL+S4gIiL6
      /jEBEBH5FBMAEZFPMQEQEfkUEwARkU/9f3cwSETLzDZxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Recent_Full_Data_2nd' width='384'>
      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
      jMT1q5oKRVGgqEriymGsalMKfWqzVEVdrl+1a5NhrGpT4qWu9KnVQwKPlrl62z/pfrIbe6n3
      U0pjz8ZjzSe77bTSJtv5lHybdH11mxLXr6gKJOhQtcT160by80nTVtqUuF9Xt0mzbZOe9HYy
      x4lqt49IfZyk/QwgGo0iIyMDsizHrMT58+exf/9+szEA4HA44HA4IEkSHA77VTHL25R1PFze
      yrKTWWZK9dstc1X9SFwUsiwntUxpdZtsFrpSTnbIiStH8v20un47cpJ9KqVSv9kmm2U+xrZ/
      FvsplfHskOz6dPUyN34+xfZp4rKyQ06uT2PmaLJtshknq5bpSOM4SbZPUxr7D7dp2s8ACgsL
      0dfXh/z8fGzatAnhcBgulwtFRUW4f/8+RkZGMDw8jIqKCnMlDcOALNtNQphl7DoXkvRoeTZF
      HQ7J3AnbLNJcZjKTMJn2LNfvSKr+2DbZb9yklonVbbIfXGZZm2WabbLdTki+n1bql+zOFB+n
      n+zPPh+vn5IbJ6n0UzIHH8n2qblMh93OanX9Nqua5HiO6SfbneVjzCe77YQUtlOS80lCCvuI
      FLbTo31E+saJ9HC/l/YAqKurwwcffID+/n6cPHkSvb29KCkpweHDhwEAubm5qKioSHe1RESU
      orQHgMPhwIsvvmj+XltbG/P+zp07010lERE9Bj4GSkQkKAYAEZGgGABERIJiABARCYoBQEQk
      KAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJi
      ABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYA
      EZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABAR
      CcqZ7gVqmobGxkYoioITJ04gIyMDADA8PIy7d+9CkiScPHkSbrc73VUTEVEK0n4G0NnZieLi
      Yuzbtw/Xr183X1dVFadOncLWrVvR09OT7mqJiChFaT8DGB8fx5EjR5CRkYGbN2+ar5eXl2N0
      dBSdnZ34rd/6Lei6DlVVASDm50QikQgAQLEpq2uaWVbXjYRllaiCSCSCaDSaeJmGYS5TU7WE
      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
    </thumbnail>
    <thumbnail height='384' name='Regions' width='384'>
      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
      gIQQYpVaWWlUCCHEbZMEkAW6rmeGk7YsC13Xb2s9pRSJROJBhnbXIpEIpmne9ueTyWSmDrIt
      nU5f1/ItkUjcdllyeZ8sDit8O3K5HLDQmOBGyWSSYDB43f9u91jKBsMwiMVid7TOg94vkgCy
      YN++fXz66acA9PX18dprr33hOsFgkL/+9a988MEHDzq8O2ZZFm+++Sbnzp27rc+fOnWKl19+
      mXg8/oAjuz39/f28/vrrmdY+v/vd7xgbG/vC9ebn5/nzn//MiRMnliDKO3f06NHbSmSmaXLw
      4EHeeOONJYjq7tzqdx8OhxkeHgYWynDgwAH279+/1KHdtu7ubg4cOHDbnw+FQuzfv5/Dhw8/
      sJhkNNAsqKysZGpqii996UtMTExQXV2NZVm8//77JJNJmpubSSQSzM/PU1hYyKOPPkp+fj7P
      Pfcc7777brbDv8liWcbGxmhvb+fvf/87DoeDVCrFnj17eP/994nFYnR2dlJUVERbW1vOXakV
      FxcTCASIRCLU1tailGJgYIDLly+TSqVobW1l7dq1JBIJJiYmaG9vp6CggN27d3PmzJlsh39L
      SilSqRQ9PT1s3bqVDz/8kIaGBk6cOIHT6aSlpYXW1lZsNhtPPfVUTl5cLFJKMT8/z8zMDBs2
      bKC7u5v169dnlttsNp5++umcLYNSimAwSGVlJeFwmHg8jq7r1NTU8Omnn1JVVcWpU6ewLItt
      27ZRXV1NXl4eu3fv5uTJkw8sLrkDyAKbzYbL5SIUCmUmvNA0jYqKCvLy8rhw4QKRSITKykq2
      bt0KkJn1Jxf19PRkypNMJnE6nTz99NOUlZURCoWYmJhg165dFBUVAeB2u7Mc8c3a2to4d+4c
      w8PDNDc3A1BSUoLH42FycpK8vDy6u7vp6+ujrq4OIDOpRi5TShGJRICFx3SpVIpNmzaxd+9e
      xsfHgYWWQcuhr0Y6nc5cOCyWaVGul2F+fj4z41dvby+GYZBIJLAsi2g0Sm9vL7t27eLhhx/O
      PO5aimNeEkCWbNq0ib/85S+0trYCCz2wg8EgX/7yl3E4HNhsNurq6nK+yZ5pmui6jtfrZf36
      9QwODgILJ55QKITH46GqqionT/rXysvLIxqNZmapAjhx4gQdHR3U1NRQXFxMJBIhFAplElku
      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
      EOIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='State_Summary' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='state_rt_mean' width='384'>
      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
      B6BQKBQ7lP8PGTVtFK7yj88AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
