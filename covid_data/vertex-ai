flowchart TD
    U["User Handwriting"]
    OCR["OCR Service - Handwriting Recognition"]
    A["App Interface - Language Assist/Translation App"]
    CS["Cloud Storage - Input & Output Data"]
    ME["Matching Engine- Embeddings & Context"]
    VA["Vertex AI - LLM Hosting"]
    LLM["LLM Pipeline - Translation/Language Assist"]
    O["Output - Translated/Assisted Text"]

    U -->|Captures handwriting| OCR
    OCR -->|Converts to text| A
    A -->|Stores raw input| CS
    A -->|Retrieves relevant context| ME
    A -->|Sends processing request| VA
    VA -->|Invokes| LLM
    LLM -->|Returns result| VA
    VA -->|Sends translated/assisted text| O
    O -->|Displayed in app| A
    A -->|Response delivered| U


flowchart TD
    DS["Data Sources (Multiple DBs & Schemas)"]
    CR["Cloud Run (ETL & API)"]
    META["Metadata Repository (Cloud SQL)"]
    PS["Pub/Sub (Event Bus)"]
    EMB["Embedding Generation (Vertex AI)"]
    VDB["Vector Database (Matching Engine)"]
    UI["User Interface (Web App)"]
    LLM["LLM Pipeline (Vertex AI LLM)"]
    RESP["Response (Catalog Info)"]

    DS --> CR
    CR --> META
    META --> PS
    PS --> EMB
    EMB --> VDB
    UI --> LLM
    LLM --> VDB
    VDB --> LLM
    LLM --> RESP


flowchart TD
    %% External Access & Security
    LB["External Load Balancer<br>& IAP"]
    OAuth["OAuth Client"]
    NEG["Serverless NEG<br>(for Cloud Run)"]
    
    %% Data Catalog App & User Interface
    UI["User Interface<br>(Web App)"]
    CR["Cloud Run Data Catalog App<br>(ETL, API, Query Handling)"]
    
    %% Caching, Logging & Storage
    Redis["Redis<br>(Memory Store)"]
    Logging["Cloud Logging"]
    CloudStorage["Cloud Storage<br>(Raw Metadata/Logs)"]
    
    %% Metadata Extraction & Storage
    DS["Data Sources<br>(Multiple DBs & Schemas)"]
    ETL["ETL Process<br>(runs on Cloud Run)"]
    CloudSQL["Cloud SQL<br>(Metadata Repository)"]
    
    %% Event-driven Embedding Generation
    PubSub["Pub/Sub Topic<br>('metadata-update')"]
    CF["Cloud Function<br>(Embedding Trigger)"]
    VertexAI_EMB["Vertex AI Embedding Generator"]
    
    %% Vector Database & LLM Processing
    Matching["Vertex AI Matching Engine<br>(Vector DB)"]
    VertexAI_LLM["Vertex AI LLM Endpoint<br>(Agent Builder)"]
    
    %% Network & Security
    PSC["Private Service Connect"]
    VPC["Virtual Private Cloud (VPC)"]
    
    %% External Access Flow
    LB --> OAuth
    OAuth --> NEG
    NEG --> CR
    UI --> CR

    %% Metadata Ingestion Pipeline
    DS --> ETL
    ETL --> CloudSQL
    ETL -->|Publishes Event| PubSub
    CloudSQL --- PSC

    %% Pub/Sub & Embedding Generation Pipeline
    PubSub --> CF
    CF -->|Fetches updated metadata| CloudSQL
    CF -->|Calls API| VertexAI_EMB
    VertexAI_EMB -->|Generates embeddings| Matching

    %% User Query Processing Flow
    CR -->|Checks cache| Redis
    CR -->|On cache miss, sends query| VertexAI_LLM
    VertexAI_LLM -->|Queries vector DB for context| Matching
    Matching --> VertexAI_LLM
    VertexAI_LLM -->|Generates catalog response| CR
    CR -->|Delivers final response| UI

    %% Logging & Storage
    CR --- Logging
    VertexAI_EMB --- Logging
    VertexAI_LLM --- Logging
    CR --> CloudStorage

    %% Private Networking
    CR --- PSC
    Matching --- PSC
    VPC --- PSC
